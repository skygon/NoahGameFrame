// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: actionFollow.proto

#include "actionFollow.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace actionFollow {
class CActionFollowDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CActionFollow> _instance;
} _CActionFollow_default_instance_;
class SActionFollowDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SActionFollow> _instance;
} _SActionFollow_default_instance_;
}  // namespace actionFollow
static void InitDefaultsscc_info_CActionFollow_actionFollow_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::actionFollow::_CActionFollow_default_instance_;
    new (ptr) ::actionFollow::CActionFollow();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::actionFollow::CActionFollow::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CActionFollow_actionFollow_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CActionFollow_actionFollow_2eproto}, {}};

static void InitDefaultsscc_info_SActionFollow_actionFollow_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::actionFollow::_SActionFollow_default_instance_;
    new (ptr) ::actionFollow::SActionFollow();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::actionFollow::SActionFollow::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SActionFollow_actionFollow_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SActionFollow_actionFollow_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_actionFollow_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_actionFollow_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_actionFollow_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_actionFollow_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::actionFollow::CActionFollow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::actionFollow::CActionFollow, actionid_),
  PROTOBUF_FIELD_OFFSET(::actionFollow::CActionFollow, suid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::actionFollow::SActionFollow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::actionFollow::SActionFollow, status_),
  PROTOBUF_FIELD_OFFSET(::actionFollow::SActionFollow, actionid_),
  PROTOBUF_FIELD_OFFSET(::actionFollow::SActionFollow, suid_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::actionFollow::CActionFollow)},
  { 7, -1, sizeof(::actionFollow::SActionFollow)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::actionFollow::_CActionFollow_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::actionFollow::_SActionFollow_default_instance_),
};

const char descriptor_table_protodef_actionFollow_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022actionFollow.proto\022\014actionFollow\032\014vect"
  "or.proto\"/\n\rCActionFollow\022\020\n\010actionId\030\001 "
  "\001(\005\022\014\n\004sUid\030\002 \001(\005\"\?\n\rSActionFollow\022\016\n\006st"
  "atus\030\001 \001(\005\022\020\n\010actionId\030\002 \001(\005\022\014\n\004sUid\030\003 \001"
  "(\005B(\n\030com.dayou.space.protobufB\014ActionFo"
  "llowb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_actionFollow_2eproto_deps[1] = {
  &::descriptor_table_vector_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_actionFollow_2eproto_sccs[2] = {
  &scc_info_CActionFollow_actionFollow_2eproto.base,
  &scc_info_SActionFollow_actionFollow_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_actionFollow_2eproto_once;
static bool descriptor_table_actionFollow_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_actionFollow_2eproto = {
  &descriptor_table_actionFollow_2eproto_initialized, descriptor_table_protodef_actionFollow_2eproto, "actionFollow.proto", 212,
  &descriptor_table_actionFollow_2eproto_once, descriptor_table_actionFollow_2eproto_sccs, descriptor_table_actionFollow_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_actionFollow_2eproto::offsets,
  file_level_metadata_actionFollow_2eproto, 2, file_level_enum_descriptors_actionFollow_2eproto, file_level_service_descriptors_actionFollow_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_actionFollow_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_actionFollow_2eproto), true);
namespace actionFollow {

// ===================================================================

void CActionFollow::InitAsDefaultInstance() {
}
class CActionFollow::_Internal {
 public:
};

CActionFollow::CActionFollow()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:actionFollow.CActionFollow)
}
CActionFollow::CActionFollow(const CActionFollow& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&actionid_, &from.actionid_,
    static_cast<size_t>(reinterpret_cast<char*>(&suid_) -
    reinterpret_cast<char*>(&actionid_)) + sizeof(suid_));
  // @@protoc_insertion_point(copy_constructor:actionFollow.CActionFollow)
}

void CActionFollow::SharedCtor() {
  ::memset(&actionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suid_) -
      reinterpret_cast<char*>(&actionid_)) + sizeof(suid_));
}

CActionFollow::~CActionFollow() {
  // @@protoc_insertion_point(destructor:actionFollow.CActionFollow)
  SharedDtor();
}

void CActionFollow::SharedDtor() {
}

void CActionFollow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CActionFollow& CActionFollow::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CActionFollow_actionFollow_2eproto.base);
  return *internal_default_instance();
}


void CActionFollow::Clear() {
// @@protoc_insertion_point(message_clear_start:actionFollow.CActionFollow)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&actionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suid_) -
      reinterpret_cast<char*>(&actionid_)) + sizeof(suid_));
  _internal_metadata_.Clear();
}

const char* CActionFollow::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 actionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          actionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sUid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          suid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CActionFollow::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:actionFollow.CActionFollow)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 actionId = 1;
  if (this->actionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_actionid(), target);
  }

  // int32 sUid = 2;
  if (this->suid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_suid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:actionFollow.CActionFollow)
  return target;
}

size_t CActionFollow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:actionFollow.CActionFollow)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 actionId = 1;
  if (this->actionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_actionid());
  }

  // int32 sUid = 2;
  if (this->suid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_suid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CActionFollow::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:actionFollow.CActionFollow)
  GOOGLE_DCHECK_NE(&from, this);
  const CActionFollow* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CActionFollow>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:actionFollow.CActionFollow)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:actionFollow.CActionFollow)
    MergeFrom(*source);
  }
}

void CActionFollow::MergeFrom(const CActionFollow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:actionFollow.CActionFollow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.actionid() != 0) {
    _internal_set_actionid(from._internal_actionid());
  }
  if (from.suid() != 0) {
    _internal_set_suid(from._internal_suid());
  }
}

void CActionFollow::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:actionFollow.CActionFollow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CActionFollow::CopyFrom(const CActionFollow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:actionFollow.CActionFollow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CActionFollow::IsInitialized() const {
  return true;
}

void CActionFollow::InternalSwap(CActionFollow* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(actionid_, other->actionid_);
  swap(suid_, other->suid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CActionFollow::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SActionFollow::InitAsDefaultInstance() {
}
class SActionFollow::_Internal {
 public:
};

SActionFollow::SActionFollow()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:actionFollow.SActionFollow)
}
SActionFollow::SActionFollow(const SActionFollow& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&suid_) -
    reinterpret_cast<char*>(&status_)) + sizeof(suid_));
  // @@protoc_insertion_point(copy_constructor:actionFollow.SActionFollow)
}

void SActionFollow::SharedCtor() {
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suid_) -
      reinterpret_cast<char*>(&status_)) + sizeof(suid_));
}

SActionFollow::~SActionFollow() {
  // @@protoc_insertion_point(destructor:actionFollow.SActionFollow)
  SharedDtor();
}

void SActionFollow::SharedDtor() {
}

void SActionFollow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SActionFollow& SActionFollow::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SActionFollow_actionFollow_2eproto.base);
  return *internal_default_instance();
}


void SActionFollow::Clear() {
// @@protoc_insertion_point(message_clear_start:actionFollow.SActionFollow)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suid_) -
      reinterpret_cast<char*>(&status_)) + sizeof(suid_));
  _internal_metadata_.Clear();
}

const char* SActionFollow::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 actionId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          actionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sUid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          suid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SActionFollow::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:actionFollow.SActionFollow)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_status(), target);
  }

  // int32 actionId = 2;
  if (this->actionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_actionid(), target);
  }

  // int32 sUid = 3;
  if (this->suid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_suid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:actionFollow.SActionFollow)
  return target;
}

size_t SActionFollow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:actionFollow.SActionFollow)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_status());
  }

  // int32 actionId = 2;
  if (this->actionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_actionid());
  }

  // int32 sUid = 3;
  if (this->suid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_suid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SActionFollow::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:actionFollow.SActionFollow)
  GOOGLE_DCHECK_NE(&from, this);
  const SActionFollow* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SActionFollow>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:actionFollow.SActionFollow)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:actionFollow.SActionFollow)
    MergeFrom(*source);
  }
}

void SActionFollow::MergeFrom(const SActionFollow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:actionFollow.SActionFollow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.actionid() != 0) {
    _internal_set_actionid(from._internal_actionid());
  }
  if (from.suid() != 0) {
    _internal_set_suid(from._internal_suid());
  }
}

void SActionFollow::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:actionFollow.SActionFollow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SActionFollow::CopyFrom(const SActionFollow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:actionFollow.SActionFollow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SActionFollow::IsInitialized() const {
  return true;
}

void SActionFollow::InternalSwap(SActionFollow* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(status_, other->status_);
  swap(actionid_, other->actionid_);
  swap(suid_, other->suid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SActionFollow::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace actionFollow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::actionFollow::CActionFollow* Arena::CreateMaybeMessage< ::actionFollow::CActionFollow >(Arena* arena) {
  return Arena::CreateInternal< ::actionFollow::CActionFollow >(arena);
}
template<> PROTOBUF_NOINLINE ::actionFollow::SActionFollow* Arena::CreateMaybeMessage< ::actionFollow::SActionFollow >(Arena* arena) {
  return Arena::CreateInternal< ::actionFollow::SActionFollow >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
