// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: radiusTransformation.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_radiusTransformation_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_radiusTransformation_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_radiusTransformation_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_radiusTransformation_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_radiusTransformation_2eproto;
namespace radiusTransformation {
class CRadiusTransformation;
class CRadiusTransformationDefaultTypeInternal;
extern CRadiusTransformationDefaultTypeInternal _CRadiusTransformation_default_instance_;
class SRadiusTransformation;
class SRadiusTransformationDefaultTypeInternal;
extern SRadiusTransformationDefaultTypeInternal _SRadiusTransformation_default_instance_;
}  // namespace radiusTransformation
PROTOBUF_NAMESPACE_OPEN
template<> ::radiusTransformation::CRadiusTransformation* Arena::CreateMaybeMessage<::radiusTransformation::CRadiusTransformation>(Arena*);
template<> ::radiusTransformation::SRadiusTransformation* Arena::CreateMaybeMessage<::radiusTransformation::SRadiusTransformation>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace radiusTransformation {

// ===================================================================

class CRadiusTransformation :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:radiusTransformation.CRadiusTransformation) */ {
 public:
  CRadiusTransformation();
  virtual ~CRadiusTransformation();

  CRadiusTransformation(const CRadiusTransformation& from);
  CRadiusTransformation(CRadiusTransformation&& from) noexcept
    : CRadiusTransformation() {
    *this = ::std::move(from);
  }

  inline CRadiusTransformation& operator=(const CRadiusTransformation& from) {
    CopyFrom(from);
    return *this;
  }
  inline CRadiusTransformation& operator=(CRadiusTransformation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CRadiusTransformation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CRadiusTransformation* internal_default_instance() {
    return reinterpret_cast<const CRadiusTransformation*>(
               &_CRadiusTransformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CRadiusTransformation& a, CRadiusTransformation& b) {
    a.Swap(&b);
  }
  inline void Swap(CRadiusTransformation* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CRadiusTransformation* New() const final {
    return CreateMaybeMessage<CRadiusTransformation>(nullptr);
  }

  CRadiusTransformation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CRadiusTransformation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CRadiusTransformation& from);
  void MergeFrom(const CRadiusTransformation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CRadiusTransformation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "radiusTransformation.CRadiusTransformation";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_radiusTransformation_2eproto);
    return ::descriptor_table_radiusTransformation_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
  };
  // int32 type = 1;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:radiusTransformation.CRadiusTransformation)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_radiusTransformation_2eproto;
};
// -------------------------------------------------------------------

class SRadiusTransformation :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:radiusTransformation.SRadiusTransformation) */ {
 public:
  SRadiusTransformation();
  virtual ~SRadiusTransformation();

  SRadiusTransformation(const SRadiusTransformation& from);
  SRadiusTransformation(SRadiusTransformation&& from) noexcept
    : SRadiusTransformation() {
    *this = ::std::move(from);
  }

  inline SRadiusTransformation& operator=(const SRadiusTransformation& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRadiusTransformation& operator=(SRadiusTransformation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SRadiusTransformation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SRadiusTransformation* internal_default_instance() {
    return reinterpret_cast<const SRadiusTransformation*>(
               &_SRadiusTransformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SRadiusTransformation& a, SRadiusTransformation& b) {
    a.Swap(&b);
  }
  inline void Swap(SRadiusTransformation* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SRadiusTransformation* New() const final {
    return CreateMaybeMessage<SRadiusTransformation>(nullptr);
  }

  SRadiusTransformation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SRadiusTransformation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SRadiusTransformation& from);
  void MergeFrom(const SRadiusTransformation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SRadiusTransformation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "radiusTransformation.SRadiusTransformation";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_radiusTransformation_2eproto);
    return ::descriptor_table_radiusTransformation_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
    kDurationFieldNumber = 2,
    kTypeFieldNumber = 3,
  };
  // repeated int32 uid = 1;
  int uid_size() const;
  private:
  int _internal_uid_size() const;
  public:
  void clear_uid();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_uid(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_uid() const;
  void _internal_add_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_uid();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 uid(int index) const;
  void set_uid(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      uid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_uid();

  // int32 duration = 2;
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::int32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_duration() const;
  void _internal_set_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 3;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:radiusTransformation.SRadiusTransformation)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > uid_;
  mutable std::atomic<int> _uid_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 duration_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_radiusTransformation_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CRadiusTransformation

// int32 type = 1;
inline void CRadiusTransformation::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CRadiusTransformation::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CRadiusTransformation::type() const {
  // @@protoc_insertion_point(field_get:radiusTransformation.CRadiusTransformation.type)
  return _internal_type();
}
inline void CRadiusTransformation::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void CRadiusTransformation::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:radiusTransformation.CRadiusTransformation.type)
}

// -------------------------------------------------------------------

// SRadiusTransformation

// repeated int32 uid = 1;
inline int SRadiusTransformation::_internal_uid_size() const {
  return uid_.size();
}
inline int SRadiusTransformation::uid_size() const {
  return _internal_uid_size();
}
inline void SRadiusTransformation::clear_uid() {
  uid_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SRadiusTransformation::_internal_uid(int index) const {
  return uid_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SRadiusTransformation::uid(int index) const {
  // @@protoc_insertion_point(field_get:radiusTransformation.SRadiusTransformation.uid)
  return _internal_uid(index);
}
inline void SRadiusTransformation::set_uid(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  uid_.Set(index, value);
  // @@protoc_insertion_point(field_set:radiusTransformation.SRadiusTransformation.uid)
}
inline void SRadiusTransformation::_internal_add_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  uid_.Add(value);
}
inline void SRadiusTransformation::add_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_uid(value);
  // @@protoc_insertion_point(field_add:radiusTransformation.SRadiusTransformation.uid)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SRadiusTransformation::_internal_uid() const {
  return uid_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SRadiusTransformation::uid() const {
  // @@protoc_insertion_point(field_list:radiusTransformation.SRadiusTransformation.uid)
  return _internal_uid();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SRadiusTransformation::_internal_mutable_uid() {
  return &uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SRadiusTransformation::mutable_uid() {
  // @@protoc_insertion_point(field_mutable_list:radiusTransformation.SRadiusTransformation.uid)
  return _internal_mutable_uid();
}

// int32 duration = 2;
inline void SRadiusTransformation::clear_duration() {
  duration_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SRadiusTransformation::_internal_duration() const {
  return duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SRadiusTransformation::duration() const {
  // @@protoc_insertion_point(field_get:radiusTransformation.SRadiusTransformation.duration)
  return _internal_duration();
}
inline void SRadiusTransformation::_internal_set_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  duration_ = value;
}
inline void SRadiusTransformation::set_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:radiusTransformation.SRadiusTransformation.duration)
}

// int32 type = 3;
inline void SRadiusTransformation::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SRadiusTransformation::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SRadiusTransformation::type() const {
  // @@protoc_insertion_point(field_get:radiusTransformation.SRadiusTransformation.type)
  return _internal_type();
}
inline void SRadiusTransformation::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void SRadiusTransformation::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:radiusTransformation.SRadiusTransformation.type)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace radiusTransformation

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_radiusTransformation_2eproto
