// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: activity.proto

#include "activity.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_activity_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActivityCopySpaceInfo_activity_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_activity_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActivityPartInfo_activity_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_activity_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QuerySpaceHotInfo_activity_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_activity_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SpaceHotInfo_activity_2eproto;
namespace activity {
class CSpaceHotListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CSpaceHotList> _instance;
} _CSpaceHotList_default_instance_;
class SSpaceHotListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSpaceHotList> _instance;
} _SSpaceHotList_default_instance_;
class CActivityPartListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CActivityPartList> _instance;
} _CActivityPartList_default_instance_;
class SActivityPartListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SActivityPartList> _instance;
} _SActivityPartList_default_instance_;
class CSomeoneCopySpaceListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CSomeoneCopySpaceList> _instance;
} _CSomeoneCopySpaceList_default_instance_;
class SSomeoneCopySpaceListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSomeoneCopySpaceList> _instance;
} _SSomeoneCopySpaceList_default_instance_;
class ActivityPartInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActivityPartInfo> _instance;
} _ActivityPartInfo_default_instance_;
class QuerySpaceHotInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QuerySpaceHotInfo> _instance;
} _QuerySpaceHotInfo_default_instance_;
class SpaceHotInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SpaceHotInfo> _instance;
} _SpaceHotInfo_default_instance_;
class ActivityCopySpaceInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActivityCopySpaceInfo> _instance;
} _ActivityCopySpaceInfo_default_instance_;
}  // namespace activity
static void InitDefaultsscc_info_ActivityCopySpaceInfo_activity_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::activity::_ActivityCopySpaceInfo_default_instance_;
    new (ptr) ::activity::ActivityCopySpaceInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::activity::ActivityCopySpaceInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActivityCopySpaceInfo_activity_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ActivityCopySpaceInfo_activity_2eproto}, {}};

static void InitDefaultsscc_info_ActivityPartInfo_activity_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::activity::_ActivityPartInfo_default_instance_;
    new (ptr) ::activity::ActivityPartInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::activity::ActivityPartInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActivityPartInfo_activity_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ActivityPartInfo_activity_2eproto}, {}};

static void InitDefaultsscc_info_CActivityPartList_activity_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::activity::_CActivityPartList_default_instance_;
    new (ptr) ::activity::CActivityPartList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::activity::CActivityPartList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CActivityPartList_activity_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CActivityPartList_activity_2eproto}, {}};

static void InitDefaultsscc_info_CSomeoneCopySpaceList_activity_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::activity::_CSomeoneCopySpaceList_default_instance_;
    new (ptr) ::activity::CSomeoneCopySpaceList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::activity::CSomeoneCopySpaceList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CSomeoneCopySpaceList_activity_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CSomeoneCopySpaceList_activity_2eproto}, {}};

static void InitDefaultsscc_info_CSpaceHotList_activity_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::activity::_CSpaceHotList_default_instance_;
    new (ptr) ::activity::CSpaceHotList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::activity::CSpaceHotList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CSpaceHotList_activity_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CSpaceHotList_activity_2eproto}, {
      &scc_info_QuerySpaceHotInfo_activity_2eproto.base,}};

static void InitDefaultsscc_info_QuerySpaceHotInfo_activity_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::activity::_QuerySpaceHotInfo_default_instance_;
    new (ptr) ::activity::QuerySpaceHotInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::activity::QuerySpaceHotInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QuerySpaceHotInfo_activity_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_QuerySpaceHotInfo_activity_2eproto}, {}};

static void InitDefaultsscc_info_SActivityPartList_activity_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::activity::_SActivityPartList_default_instance_;
    new (ptr) ::activity::SActivityPartList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::activity::SActivityPartList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SActivityPartList_activity_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SActivityPartList_activity_2eproto}, {
      &scc_info_ActivityPartInfo_activity_2eproto.base,}};

static void InitDefaultsscc_info_SSomeoneCopySpaceList_activity_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::activity::_SSomeoneCopySpaceList_default_instance_;
    new (ptr) ::activity::SSomeoneCopySpaceList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::activity::SSomeoneCopySpaceList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSomeoneCopySpaceList_activity_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSomeoneCopySpaceList_activity_2eproto}, {
      &scc_info_ActivityCopySpaceInfo_activity_2eproto.base,}};

static void InitDefaultsscc_info_SSpaceHotList_activity_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::activity::_SSpaceHotList_default_instance_;
    new (ptr) ::activity::SSpaceHotList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::activity::SSpaceHotList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSpaceHotList_activity_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSpaceHotList_activity_2eproto}, {
      &scc_info_SpaceHotInfo_activity_2eproto.base,}};

static void InitDefaultsscc_info_SpaceHotInfo_activity_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::activity::_SpaceHotInfo_default_instance_;
    new (ptr) ::activity::SpaceHotInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::activity::SpaceHotInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SpaceHotInfo_activity_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SpaceHotInfo_activity_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_activity_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_activity_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_activity_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_activity_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::activity::CSpaceHotList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::activity::CSpaceHotList, list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::activity::SSpaceHotList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::activity::SSpaceHotList, list_),
  PROTOBUF_FIELD_OFFSET(::activity::SSpaceHotList, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::activity::CActivityPartList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::activity::CActivityPartList, curpage_),
  PROTOBUF_FIELD_OFFSET(::activity::CActivityPartList, pagelimit_),
  PROTOBUF_FIELD_OFFSET(::activity::CActivityPartList, listtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::activity::SActivityPartList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::activity::SActivityPartList, list_),
  PROTOBUF_FIELD_OFFSET(::activity::SActivityPartList, msg_),
  PROTOBUF_FIELD_OFFSET(::activity::SActivityPartList, curpage_),
  PROTOBUF_FIELD_OFFSET(::activity::SActivityPartList, activitypartspacenum_),
  PROTOBUF_FIELD_OFFSET(::activity::SActivityPartList, pagelimit_),
  PROTOBUF_FIELD_OFFSET(::activity::SActivityPartList, listtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::activity::CSomeoneCopySpaceList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::activity::CSomeoneCopySpaceList, houseid_),
  PROTOBUF_FIELD_OFFSET(::activity::CSomeoneCopySpaceList, housetype_),
  PROTOBUF_FIELD_OFFSET(::activity::CSomeoneCopySpaceList, curpage_),
  PROTOBUF_FIELD_OFFSET(::activity::CSomeoneCopySpaceList, pagelimit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::activity::SSomeoneCopySpaceList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::activity::SSomeoneCopySpaceList, list_),
  PROTOBUF_FIELD_OFFSET(::activity::SSomeoneCopySpaceList, msg_),
  PROTOBUF_FIELD_OFFSET(::activity::SSomeoneCopySpaceList, curpage_),
  PROTOBUF_FIELD_OFFSET(::activity::SSomeoneCopySpaceList, someonecopyspace_),
  PROTOBUF_FIELD_OFFSET(::activity::SSomeoneCopySpaceList, pagelimit_),
  PROTOBUF_FIELD_OFFSET(::activity::SSomeoneCopySpaceList, houseid_),
  PROTOBUF_FIELD_OFFSET(::activity::SSomeoneCopySpaceList, housetype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, houseid_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, housetype_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, iscopy_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, housename_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, housesmartcover_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, housebigcover_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, housedesc_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, actornick_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, actorlabel_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, starttime_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, endtime_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, startduration_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, endduration_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, creatornick_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, creatoravatar_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, househot_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, housecovervideo_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, scene_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityPartInfo, isexisttreasurebox_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::activity::QuerySpaceHotInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::activity::QuerySpaceHotInfo, houseid_),
  PROTOBUF_FIELD_OFFSET(::activity::QuerySpaceHotInfo, housetype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::activity::SpaceHotInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::activity::SpaceHotInfo, houseid_),
  PROTOBUF_FIELD_OFFSET(::activity::SpaceHotInfo, housetype_),
  PROTOBUF_FIELD_OFFSET(::activity::SpaceHotInfo, hotnum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::activity::ActivityCopySpaceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::activity::ActivityCopySpaceInfo, houseid_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityCopySpaceInfo, housetype_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityCopySpaceInfo, isopen_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityCopySpaceInfo, currentonline_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityCopySpaceInfo, uid_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityCopySpaceInfo, usericon_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityCopySpaceInfo, usernick_),
  PROTOBUF_FIELD_OFFSET(::activity::ActivityCopySpaceInfo, spacename_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::activity::CSpaceHotList)},
  { 6, -1, sizeof(::activity::SSpaceHotList)},
  { 13, -1, sizeof(::activity::CActivityPartList)},
  { 21, -1, sizeof(::activity::SActivityPartList)},
  { 32, -1, sizeof(::activity::CSomeoneCopySpaceList)},
  { 41, -1, sizeof(::activity::SSomeoneCopySpaceList)},
  { 53, -1, sizeof(::activity::ActivityPartInfo)},
  { 77, -1, sizeof(::activity::QuerySpaceHotInfo)},
  { 84, -1, sizeof(::activity::SpaceHotInfo)},
  { 92, -1, sizeof(::activity::ActivityCopySpaceInfo)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::activity::_CSpaceHotList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::activity::_SSpaceHotList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::activity::_CActivityPartList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::activity::_SActivityPartList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::activity::_CSomeoneCopySpaceList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::activity::_SSomeoneCopySpaceList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::activity::_ActivityPartInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::activity::_QuerySpaceHotInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::activity::_SpaceHotInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::activity::_ActivityCopySpaceInfo_default_instance_),
};

const char descriptor_table_protodef_activity_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016activity.proto\022\010activity\":\n\rCSpaceHotL"
  "ist\022)\n\004list\030\001 \003(\0132\033.activity.QuerySpaceH"
  "otInfo\"B\n\rSSpaceHotList\022$\n\004list\030\001 \003(\0132\026."
  "activity.SpaceHotInfo\022\013\n\003msg\030\002 \001(\t\"I\n\021CA"
  "ctivityPartList\022\017\n\007curPage\030\001 \001(\005\022\021\n\tpage"
  "Limit\030\002 \001(\005\022\020\n\010listType\030\003 \001(\005\"\236\001\n\021SActiv"
  "ityPartList\022(\n\004list\030\001 \003(\0132\032.activity.Act"
  "ivityPartInfo\022\013\n\003msg\030\002 \001(\t\022\017\n\007curPage\030\003 "
  "\001(\005\022\034\n\024activityPartSpaceNum\030\004 \001(\005\022\021\n\tpag"
  "eLimit\030\005 \001(\005\022\020\n\010listType\030\006 \001(\005\"_\n\025CSomeo"
  "neCopySpaceList\022\017\n\007houseId\030\001 \001(\005\022\021\n\thous"
  "eType\030\002 \001(\005\022\017\n\007curPage\030\003 \001(\005\022\021\n\tpageLimi"
  "t\030\004 \001(\005\"\265\001\n\025SSomeoneCopySpaceList\022-\n\004lis"
  "t\030\001 \003(\0132\037.activity.ActivityCopySpaceInfo"
  "\022\013\n\003msg\030\002 \001(\t\022\017\n\007curPage\030\003 \001(\005\022\030\n\020someon"
  "eCopySpace\030\004 \001(\005\022\021\n\tpageLimit\030\005 \001(\005\022\017\n\007h"
  "ouseId\030\006 \001(\005\022\021\n\thouseType\030\007 \001(\005\"\225\003\n\020Acti"
  "vityPartInfo\022\017\n\007houseId\030\001 \001(\005\022\021\n\thouseTy"
  "pe\030\002 \001(\005\022\016\n\006isCopy\030\003 \001(\005\022\021\n\thouseName\030\004 "
  "\001(\t\022\027\n\017houseSmartCover\030\005 \001(\t\022\025\n\rhouseBig"
  "Cover\030\006 \001(\t\022\021\n\thouseDesc\030\007 \001(\t\022\021\n\tactorN"
  "ick\030\010 \001(\t\022\022\n\nactorLabel\030\t \001(\t\022\021\n\tstartTi"
  "me\030\n \001(\t\022\017\n\007endTime\030\013 \001(\t\022\025\n\rstartDurati"
  "on\030\014 \001(\t\022\023\n\013endDuration\030\r \001(\t\022\023\n\013creator"
  "Nick\030\016 \001(\t\022\025\n\rcreatorAvatar\030\017 \001(\t\022\020\n\010hou"
  "seHot\030\020 \001(\005\022\027\n\017houseCoverVideo\030\021 \001(\t\022\r\n\005"
  "scene\030\022 \001(\005\022\032\n\022isExistTreasureBox\030\023 \001(\005\""
  "7\n\021QuerySpaceHotInfo\022\017\n\007houseId\030\001 \001(\005\022\021\n"
  "\thouseType\030\002 \001(\005\"B\n\014SpaceHotInfo\022\017\n\007hous"
  "eId\030\001 \001(\005\022\021\n\thouseType\030\002 \001(\005\022\016\n\006hotNum\030\003"
  " \001(\005\"\246\001\n\025ActivityCopySpaceInfo\022\017\n\007houseI"
  "d\030\001 \001(\005\022\021\n\thouseType\030\002 \001(\005\022\016\n\006isOpen\030\003 \001"
  "(\005\022\025\n\rcurrentOnline\030\004 \001(\005\022\013\n\003uid\030\005 \001(\005\022\020"
  "\n\010userIcon\030\006 \001(\t\022\020\n\010userNick\030\007 \001(\t\022\021\n\tsp"
  "aceName\030\010 \001(\tB(\n\030com.dayou.space.protobu"
  "fB\010ActivityZ\002./b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_activity_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_activity_2eproto_sccs[10] = {
  &scc_info_ActivityCopySpaceInfo_activity_2eproto.base,
  &scc_info_ActivityPartInfo_activity_2eproto.base,
  &scc_info_CActivityPartList_activity_2eproto.base,
  &scc_info_CSomeoneCopySpaceList_activity_2eproto.base,
  &scc_info_CSpaceHotList_activity_2eproto.base,
  &scc_info_QuerySpaceHotInfo_activity_2eproto.base,
  &scc_info_SActivityPartList_activity_2eproto.base,
  &scc_info_SSomeoneCopySpaceList_activity_2eproto.base,
  &scc_info_SSpaceHotList_activity_2eproto.base,
  &scc_info_SpaceHotInfo_activity_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_activity_2eproto_once;
static bool descriptor_table_activity_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_activity_2eproto = {
  &descriptor_table_activity_2eproto_initialized, descriptor_table_protodef_activity_2eproto, "activity.proto", 1423,
  &descriptor_table_activity_2eproto_once, descriptor_table_activity_2eproto_sccs, descriptor_table_activity_2eproto_deps, 10, 0,
  schemas, file_default_instances, TableStruct_activity_2eproto::offsets,
  file_level_metadata_activity_2eproto, 10, file_level_enum_descriptors_activity_2eproto, file_level_service_descriptors_activity_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_activity_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_activity_2eproto), true);
namespace activity {

// ===================================================================

void CSpaceHotList::InitAsDefaultInstance() {
}
class CSpaceHotList::_Internal {
 public:
};

CSpaceHotList::CSpaceHotList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:activity.CSpaceHotList)
}
CSpaceHotList::CSpaceHotList(const CSpaceHotList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:activity.CSpaceHotList)
}

void CSpaceHotList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CSpaceHotList_activity_2eproto.base);
}

CSpaceHotList::~CSpaceHotList() {
  // @@protoc_insertion_point(destructor:activity.CSpaceHotList)
  SharedDtor();
}

void CSpaceHotList::SharedDtor() {
}

void CSpaceHotList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CSpaceHotList& CSpaceHotList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CSpaceHotList_activity_2eproto.base);
  return *internal_default_instance();
}


void CSpaceHotList::Clear() {
// @@protoc_insertion_point(message_clear_start:activity.CSpaceHotList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _internal_metadata_.Clear();
}

const char* CSpaceHotList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .activity.QuerySpaceHotInfo list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CSpaceHotList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:activity.CSpaceHotList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .activity.QuerySpaceHotInfo list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:activity.CSpaceHotList)
  return target;
}

size_t CSpaceHotList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:activity.CSpaceHotList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .activity.QuerySpaceHotInfo list = 1;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSpaceHotList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:activity.CSpaceHotList)
  GOOGLE_DCHECK_NE(&from, this);
  const CSpaceHotList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CSpaceHotList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:activity.CSpaceHotList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:activity.CSpaceHotList)
    MergeFrom(*source);
  }
}

void CSpaceHotList::MergeFrom(const CSpaceHotList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:activity.CSpaceHotList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void CSpaceHotList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:activity.CSpaceHotList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSpaceHotList::CopyFrom(const CSpaceHotList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:activity.CSpaceHotList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSpaceHotList::IsInitialized() const {
  return true;
}

void CSpaceHotList::InternalSwap(CSpaceHotList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  list_.InternalSwap(&other->list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CSpaceHotList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SSpaceHotList::InitAsDefaultInstance() {
}
class SSpaceHotList::_Internal {
 public:
};

SSpaceHotList::SSpaceHotList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:activity.SSpaceHotList)
}
SSpaceHotList::SSpaceHotList(const SSpaceHotList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:activity.SSpaceHotList)
}

void SSpaceHotList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSpaceHotList_activity_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SSpaceHotList::~SSpaceHotList() {
  // @@protoc_insertion_point(destructor:activity.SSpaceHotList)
  SharedDtor();
}

void SSpaceHotList::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SSpaceHotList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSpaceHotList& SSpaceHotList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSpaceHotList_activity_2eproto.base);
  return *internal_default_instance();
}


void SSpaceHotList::Clear() {
// @@protoc_insertion_point(message_clear_start:activity.SSpaceHotList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* SSpaceHotList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .activity.SpaceHotInfo list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.SSpaceHotList.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSpaceHotList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:activity.SSpaceHotList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .activity.SpaceHotInfo list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_list(i), target, stream);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.SSpaceHotList.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:activity.SSpaceHotList)
  return target;
}

size_t SSpaceHotList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:activity.SSpaceHotList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .activity.SpaceHotInfo list = 1;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSpaceHotList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:activity.SSpaceHotList)
  GOOGLE_DCHECK_NE(&from, this);
  const SSpaceHotList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSpaceHotList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:activity.SSpaceHotList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:activity.SSpaceHotList)
    MergeFrom(*source);
  }
}

void SSpaceHotList::MergeFrom(const SSpaceHotList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:activity.SSpaceHotList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void SSpaceHotList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:activity.SSpaceHotList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSpaceHotList::CopyFrom(const SSpaceHotList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:activity.SSpaceHotList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSpaceHotList::IsInitialized() const {
  return true;
}

void SSpaceHotList::InternalSwap(SSpaceHotList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  list_.InternalSwap(&other->list_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata SSpaceHotList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CActivityPartList::InitAsDefaultInstance() {
}
class CActivityPartList::_Internal {
 public:
};

CActivityPartList::CActivityPartList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:activity.CActivityPartList)
}
CActivityPartList::CActivityPartList(const CActivityPartList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&curpage_, &from.curpage_,
    static_cast<size_t>(reinterpret_cast<char*>(&listtype_) -
    reinterpret_cast<char*>(&curpage_)) + sizeof(listtype_));
  // @@protoc_insertion_point(copy_constructor:activity.CActivityPartList)
}

void CActivityPartList::SharedCtor() {
  ::memset(&curpage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&listtype_) -
      reinterpret_cast<char*>(&curpage_)) + sizeof(listtype_));
}

CActivityPartList::~CActivityPartList() {
  // @@protoc_insertion_point(destructor:activity.CActivityPartList)
  SharedDtor();
}

void CActivityPartList::SharedDtor() {
}

void CActivityPartList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CActivityPartList& CActivityPartList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CActivityPartList_activity_2eproto.base);
  return *internal_default_instance();
}


void CActivityPartList::Clear() {
// @@protoc_insertion_point(message_clear_start:activity.CActivityPartList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&curpage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&listtype_) -
      reinterpret_cast<char*>(&curpage_)) + sizeof(listtype_));
  _internal_metadata_.Clear();
}

const char* CActivityPartList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 curPage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          curpage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 pageLimit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          pagelimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 listType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          listtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CActivityPartList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:activity.CActivityPartList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 curPage = 1;
  if (this->curpage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_curpage(), target);
  }

  // int32 pageLimit = 2;
  if (this->pagelimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_pagelimit(), target);
  }

  // int32 listType = 3;
  if (this->listtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_listtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:activity.CActivityPartList)
  return target;
}

size_t CActivityPartList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:activity.CActivityPartList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 curPage = 1;
  if (this->curpage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_curpage());
  }

  // int32 pageLimit = 2;
  if (this->pagelimit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_pagelimit());
  }

  // int32 listType = 3;
  if (this->listtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_listtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CActivityPartList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:activity.CActivityPartList)
  GOOGLE_DCHECK_NE(&from, this);
  const CActivityPartList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CActivityPartList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:activity.CActivityPartList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:activity.CActivityPartList)
    MergeFrom(*source);
  }
}

void CActivityPartList::MergeFrom(const CActivityPartList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:activity.CActivityPartList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.curpage() != 0) {
    _internal_set_curpage(from._internal_curpage());
  }
  if (from.pagelimit() != 0) {
    _internal_set_pagelimit(from._internal_pagelimit());
  }
  if (from.listtype() != 0) {
    _internal_set_listtype(from._internal_listtype());
  }
}

void CActivityPartList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:activity.CActivityPartList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CActivityPartList::CopyFrom(const CActivityPartList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:activity.CActivityPartList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CActivityPartList::IsInitialized() const {
  return true;
}

void CActivityPartList::InternalSwap(CActivityPartList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(curpage_, other->curpage_);
  swap(pagelimit_, other->pagelimit_);
  swap(listtype_, other->listtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CActivityPartList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SActivityPartList::InitAsDefaultInstance() {
}
class SActivityPartList::_Internal {
 public:
};

SActivityPartList::SActivityPartList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:activity.SActivityPartList)
}
SActivityPartList::SActivityPartList(const SActivityPartList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&curpage_, &from.curpage_,
    static_cast<size_t>(reinterpret_cast<char*>(&listtype_) -
    reinterpret_cast<char*>(&curpage_)) + sizeof(listtype_));
  // @@protoc_insertion_point(copy_constructor:activity.SActivityPartList)
}

void SActivityPartList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SActivityPartList_activity_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&curpage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&listtype_) -
      reinterpret_cast<char*>(&curpage_)) + sizeof(listtype_));
}

SActivityPartList::~SActivityPartList() {
  // @@protoc_insertion_point(destructor:activity.SActivityPartList)
  SharedDtor();
}

void SActivityPartList::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SActivityPartList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SActivityPartList& SActivityPartList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SActivityPartList_activity_2eproto.base);
  return *internal_default_instance();
}


void SActivityPartList::Clear() {
// @@protoc_insertion_point(message_clear_start:activity.SActivityPartList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&curpage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&listtype_) -
      reinterpret_cast<char*>(&curpage_)) + sizeof(listtype_));
  _internal_metadata_.Clear();
}

const char* SActivityPartList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .activity.ActivityPartInfo list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.SActivityPartList.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 curPage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          curpage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 activityPartSpaceNum = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          activitypartspacenum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 pageLimit = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          pagelimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 listType = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          listtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SActivityPartList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:activity.SActivityPartList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .activity.ActivityPartInfo list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_list(i), target, stream);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.SActivityPartList.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // int32 curPage = 3;
  if (this->curpage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_curpage(), target);
  }

  // int32 activityPartSpaceNum = 4;
  if (this->activitypartspacenum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_activitypartspacenum(), target);
  }

  // int32 pageLimit = 5;
  if (this->pagelimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_pagelimit(), target);
  }

  // int32 listType = 6;
  if (this->listtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_listtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:activity.SActivityPartList)
  return target;
}

size_t SActivityPartList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:activity.SActivityPartList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .activity.ActivityPartInfo list = 1;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 curPage = 3;
  if (this->curpage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_curpage());
  }

  // int32 activityPartSpaceNum = 4;
  if (this->activitypartspacenum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_activitypartspacenum());
  }

  // int32 pageLimit = 5;
  if (this->pagelimit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_pagelimit());
  }

  // int32 listType = 6;
  if (this->listtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_listtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SActivityPartList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:activity.SActivityPartList)
  GOOGLE_DCHECK_NE(&from, this);
  const SActivityPartList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SActivityPartList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:activity.SActivityPartList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:activity.SActivityPartList)
    MergeFrom(*source);
  }
}

void SActivityPartList::MergeFrom(const SActivityPartList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:activity.SActivityPartList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.curpage() != 0) {
    _internal_set_curpage(from._internal_curpage());
  }
  if (from.activitypartspacenum() != 0) {
    _internal_set_activitypartspacenum(from._internal_activitypartspacenum());
  }
  if (from.pagelimit() != 0) {
    _internal_set_pagelimit(from._internal_pagelimit());
  }
  if (from.listtype() != 0) {
    _internal_set_listtype(from._internal_listtype());
  }
}

void SActivityPartList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:activity.SActivityPartList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SActivityPartList::CopyFrom(const SActivityPartList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:activity.SActivityPartList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SActivityPartList::IsInitialized() const {
  return true;
}

void SActivityPartList::InternalSwap(SActivityPartList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  list_.InternalSwap(&other->list_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(curpage_, other->curpage_);
  swap(activitypartspacenum_, other->activitypartspacenum_);
  swap(pagelimit_, other->pagelimit_);
  swap(listtype_, other->listtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SActivityPartList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CSomeoneCopySpaceList::InitAsDefaultInstance() {
}
class CSomeoneCopySpaceList::_Internal {
 public:
};

CSomeoneCopySpaceList::CSomeoneCopySpaceList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:activity.CSomeoneCopySpaceList)
}
CSomeoneCopySpaceList::CSomeoneCopySpaceList(const CSomeoneCopySpaceList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&houseid_, &from.houseid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pagelimit_) -
    reinterpret_cast<char*>(&houseid_)) + sizeof(pagelimit_));
  // @@protoc_insertion_point(copy_constructor:activity.CSomeoneCopySpaceList)
}

void CSomeoneCopySpaceList::SharedCtor() {
  ::memset(&houseid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagelimit_) -
      reinterpret_cast<char*>(&houseid_)) + sizeof(pagelimit_));
}

CSomeoneCopySpaceList::~CSomeoneCopySpaceList() {
  // @@protoc_insertion_point(destructor:activity.CSomeoneCopySpaceList)
  SharedDtor();
}

void CSomeoneCopySpaceList::SharedDtor() {
}

void CSomeoneCopySpaceList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CSomeoneCopySpaceList& CSomeoneCopySpaceList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CSomeoneCopySpaceList_activity_2eproto.base);
  return *internal_default_instance();
}


void CSomeoneCopySpaceList::Clear() {
// @@protoc_insertion_point(message_clear_start:activity.CSomeoneCopySpaceList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&houseid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagelimit_) -
      reinterpret_cast<char*>(&houseid_)) + sizeof(pagelimit_));
  _internal_metadata_.Clear();
}

const char* CSomeoneCopySpaceList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 houseId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          houseid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 houseType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          housetype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 curPage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          curpage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 pageLimit = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          pagelimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CSomeoneCopySpaceList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:activity.CSomeoneCopySpaceList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 houseId = 1;
  if (this->houseid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_houseid(), target);
  }

  // int32 houseType = 2;
  if (this->housetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_housetype(), target);
  }

  // int32 curPage = 3;
  if (this->curpage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_curpage(), target);
  }

  // int32 pageLimit = 4;
  if (this->pagelimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_pagelimit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:activity.CSomeoneCopySpaceList)
  return target;
}

size_t CSomeoneCopySpaceList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:activity.CSomeoneCopySpaceList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 houseId = 1;
  if (this->houseid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_houseid());
  }

  // int32 houseType = 2;
  if (this->housetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_housetype());
  }

  // int32 curPage = 3;
  if (this->curpage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_curpage());
  }

  // int32 pageLimit = 4;
  if (this->pagelimit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_pagelimit());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSomeoneCopySpaceList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:activity.CSomeoneCopySpaceList)
  GOOGLE_DCHECK_NE(&from, this);
  const CSomeoneCopySpaceList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CSomeoneCopySpaceList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:activity.CSomeoneCopySpaceList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:activity.CSomeoneCopySpaceList)
    MergeFrom(*source);
  }
}

void CSomeoneCopySpaceList::MergeFrom(const CSomeoneCopySpaceList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:activity.CSomeoneCopySpaceList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.houseid() != 0) {
    _internal_set_houseid(from._internal_houseid());
  }
  if (from.housetype() != 0) {
    _internal_set_housetype(from._internal_housetype());
  }
  if (from.curpage() != 0) {
    _internal_set_curpage(from._internal_curpage());
  }
  if (from.pagelimit() != 0) {
    _internal_set_pagelimit(from._internal_pagelimit());
  }
}

void CSomeoneCopySpaceList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:activity.CSomeoneCopySpaceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSomeoneCopySpaceList::CopyFrom(const CSomeoneCopySpaceList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:activity.CSomeoneCopySpaceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSomeoneCopySpaceList::IsInitialized() const {
  return true;
}

void CSomeoneCopySpaceList::InternalSwap(CSomeoneCopySpaceList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(houseid_, other->houseid_);
  swap(housetype_, other->housetype_);
  swap(curpage_, other->curpage_);
  swap(pagelimit_, other->pagelimit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CSomeoneCopySpaceList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SSomeoneCopySpaceList::InitAsDefaultInstance() {
}
class SSomeoneCopySpaceList::_Internal {
 public:
};

SSomeoneCopySpaceList::SSomeoneCopySpaceList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:activity.SSomeoneCopySpaceList)
}
SSomeoneCopySpaceList::SSomeoneCopySpaceList(const SSomeoneCopySpaceList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&curpage_, &from.curpage_,
    static_cast<size_t>(reinterpret_cast<char*>(&housetype_) -
    reinterpret_cast<char*>(&curpage_)) + sizeof(housetype_));
  // @@protoc_insertion_point(copy_constructor:activity.SSomeoneCopySpaceList)
}

void SSomeoneCopySpaceList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSomeoneCopySpaceList_activity_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&curpage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&housetype_) -
      reinterpret_cast<char*>(&curpage_)) + sizeof(housetype_));
}

SSomeoneCopySpaceList::~SSomeoneCopySpaceList() {
  // @@protoc_insertion_point(destructor:activity.SSomeoneCopySpaceList)
  SharedDtor();
}

void SSomeoneCopySpaceList::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SSomeoneCopySpaceList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSomeoneCopySpaceList& SSomeoneCopySpaceList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSomeoneCopySpaceList_activity_2eproto.base);
  return *internal_default_instance();
}


void SSomeoneCopySpaceList::Clear() {
// @@protoc_insertion_point(message_clear_start:activity.SSomeoneCopySpaceList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&curpage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&housetype_) -
      reinterpret_cast<char*>(&curpage_)) + sizeof(housetype_));
  _internal_metadata_.Clear();
}

const char* SSomeoneCopySpaceList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .activity.ActivityCopySpaceInfo list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.SSomeoneCopySpaceList.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 curPage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          curpage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 someoneCopySpace = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          someonecopyspace_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 pageLimit = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          pagelimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 houseId = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          houseid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 houseType = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          housetype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSomeoneCopySpaceList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:activity.SSomeoneCopySpaceList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .activity.ActivityCopySpaceInfo list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_list(i), target, stream);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.SSomeoneCopySpaceList.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // int32 curPage = 3;
  if (this->curpage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_curpage(), target);
  }

  // int32 someoneCopySpace = 4;
  if (this->someonecopyspace() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_someonecopyspace(), target);
  }

  // int32 pageLimit = 5;
  if (this->pagelimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_pagelimit(), target);
  }

  // int32 houseId = 6;
  if (this->houseid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_houseid(), target);
  }

  // int32 houseType = 7;
  if (this->housetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_housetype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:activity.SSomeoneCopySpaceList)
  return target;
}

size_t SSomeoneCopySpaceList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:activity.SSomeoneCopySpaceList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .activity.ActivityCopySpaceInfo list = 1;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 curPage = 3;
  if (this->curpage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_curpage());
  }

  // int32 someoneCopySpace = 4;
  if (this->someonecopyspace() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_someonecopyspace());
  }

  // int32 pageLimit = 5;
  if (this->pagelimit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_pagelimit());
  }

  // int32 houseId = 6;
  if (this->houseid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_houseid());
  }

  // int32 houseType = 7;
  if (this->housetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_housetype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSomeoneCopySpaceList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:activity.SSomeoneCopySpaceList)
  GOOGLE_DCHECK_NE(&from, this);
  const SSomeoneCopySpaceList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSomeoneCopySpaceList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:activity.SSomeoneCopySpaceList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:activity.SSomeoneCopySpaceList)
    MergeFrom(*source);
  }
}

void SSomeoneCopySpaceList::MergeFrom(const SSomeoneCopySpaceList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:activity.SSomeoneCopySpaceList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.curpage() != 0) {
    _internal_set_curpage(from._internal_curpage());
  }
  if (from.someonecopyspace() != 0) {
    _internal_set_someonecopyspace(from._internal_someonecopyspace());
  }
  if (from.pagelimit() != 0) {
    _internal_set_pagelimit(from._internal_pagelimit());
  }
  if (from.houseid() != 0) {
    _internal_set_houseid(from._internal_houseid());
  }
  if (from.housetype() != 0) {
    _internal_set_housetype(from._internal_housetype());
  }
}

void SSomeoneCopySpaceList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:activity.SSomeoneCopySpaceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSomeoneCopySpaceList::CopyFrom(const SSomeoneCopySpaceList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:activity.SSomeoneCopySpaceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSomeoneCopySpaceList::IsInitialized() const {
  return true;
}

void SSomeoneCopySpaceList::InternalSwap(SSomeoneCopySpaceList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  list_.InternalSwap(&other->list_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(curpage_, other->curpage_);
  swap(someonecopyspace_, other->someonecopyspace_);
  swap(pagelimit_, other->pagelimit_);
  swap(houseid_, other->houseid_);
  swap(housetype_, other->housetype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SSomeoneCopySpaceList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ActivityPartInfo::InitAsDefaultInstance() {
}
class ActivityPartInfo::_Internal {
 public:
};

ActivityPartInfo::ActivityPartInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:activity.ActivityPartInfo)
}
ActivityPartInfo::ActivityPartInfo(const ActivityPartInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  housename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_housename().empty()) {
    housename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.housename_);
  }
  housesmartcover_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_housesmartcover().empty()) {
    housesmartcover_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.housesmartcover_);
  }
  housebigcover_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_housebigcover().empty()) {
    housebigcover_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.housebigcover_);
  }
  housedesc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_housedesc().empty()) {
    housedesc_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.housedesc_);
  }
  actornick_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actornick().empty()) {
    actornick_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.actornick_);
  }
  actorlabel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actorlabel().empty()) {
    actorlabel_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.actorlabel_);
  }
  starttime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_starttime().empty()) {
    starttime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.starttime_);
  }
  endtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_endtime().empty()) {
    endtime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.endtime_);
  }
  startduration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_startduration().empty()) {
    startduration_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.startduration_);
  }
  endduration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_endduration().empty()) {
    endduration_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.endduration_);
  }
  creatornick_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_creatornick().empty()) {
    creatornick_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.creatornick_);
  }
  creatoravatar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_creatoravatar().empty()) {
    creatoravatar_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.creatoravatar_);
  }
  housecovervideo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_housecovervideo().empty()) {
    housecovervideo_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.housecovervideo_);
  }
  ::memcpy(&houseid_, &from.houseid_,
    static_cast<size_t>(reinterpret_cast<char*>(&isexisttreasurebox_) -
    reinterpret_cast<char*>(&houseid_)) + sizeof(isexisttreasurebox_));
  // @@protoc_insertion_point(copy_constructor:activity.ActivityPartInfo)
}

void ActivityPartInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActivityPartInfo_activity_2eproto.base);
  housename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  housesmartcover_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  housebigcover_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  housedesc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actornick_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actorlabel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  starttime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  startduration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endduration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  creatornick_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  creatoravatar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  housecovervideo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&houseid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isexisttreasurebox_) -
      reinterpret_cast<char*>(&houseid_)) + sizeof(isexisttreasurebox_));
}

ActivityPartInfo::~ActivityPartInfo() {
  // @@protoc_insertion_point(destructor:activity.ActivityPartInfo)
  SharedDtor();
}

void ActivityPartInfo::SharedDtor() {
  housename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  housesmartcover_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  housebigcover_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  housedesc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actornick_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actorlabel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  starttime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endtime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  startduration_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endduration_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  creatornick_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  creatoravatar_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  housecovervideo_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ActivityPartInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActivityPartInfo& ActivityPartInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActivityPartInfo_activity_2eproto.base);
  return *internal_default_instance();
}


void ActivityPartInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:activity.ActivityPartInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  housename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  housesmartcover_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  housebigcover_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  housedesc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actornick_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actorlabel_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  starttime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endtime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  startduration_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endduration_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  creatornick_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  creatoravatar_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  housecovervideo_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&houseid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isexisttreasurebox_) -
      reinterpret_cast<char*>(&houseid_)) + sizeof(isexisttreasurebox_));
  _internal_metadata_.Clear();
}

const char* ActivityPartInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 houseId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          houseid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 houseType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          housetype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 isCopy = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          iscopy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string houseName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_housename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityPartInfo.houseName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string houseSmartCover = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_housesmartcover();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityPartInfo.houseSmartCover"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string houseBigCover = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_housebigcover();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityPartInfo.houseBigCover"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string houseDesc = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_housedesc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityPartInfo.houseDesc"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string actorNick = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_actornick();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityPartInfo.actorNick"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string actorLabel = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_actorlabel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityPartInfo.actorLabel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string startTime = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_starttime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityPartInfo.startTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string endTime = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_endtime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityPartInfo.endTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string startDuration = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_startduration();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityPartInfo.startDuration"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string endDuration = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_endduration();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityPartInfo.endDuration"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string creatorNick = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_creatornick();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityPartInfo.creatorNick"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string creatorAvatar = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_creatoravatar();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityPartInfo.creatorAvatar"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 houseHot = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          househot_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string houseCoverVideo = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          auto str = _internal_mutable_housecovervideo();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityPartInfo.houseCoverVideo"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 scene = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          scene_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 isExistTreasureBox = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          isexisttreasurebox_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActivityPartInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:activity.ActivityPartInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 houseId = 1;
  if (this->houseid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_houseid(), target);
  }

  // int32 houseType = 2;
  if (this->housetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_housetype(), target);
  }

  // int32 isCopy = 3;
  if (this->iscopy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_iscopy(), target);
  }

  // string houseName = 4;
  if (this->housename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_housename().data(), static_cast<int>(this->_internal_housename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityPartInfo.houseName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_housename(), target);
  }

  // string houseSmartCover = 5;
  if (this->housesmartcover().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_housesmartcover().data(), static_cast<int>(this->_internal_housesmartcover().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityPartInfo.houseSmartCover");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_housesmartcover(), target);
  }

  // string houseBigCover = 6;
  if (this->housebigcover().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_housebigcover().data(), static_cast<int>(this->_internal_housebigcover().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityPartInfo.houseBigCover");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_housebigcover(), target);
  }

  // string houseDesc = 7;
  if (this->housedesc().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_housedesc().data(), static_cast<int>(this->_internal_housedesc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityPartInfo.houseDesc");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_housedesc(), target);
  }

  // string actorNick = 8;
  if (this->actornick().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actornick().data(), static_cast<int>(this->_internal_actornick().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityPartInfo.actorNick");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_actornick(), target);
  }

  // string actorLabel = 9;
  if (this->actorlabel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actorlabel().data(), static_cast<int>(this->_internal_actorlabel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityPartInfo.actorLabel");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_actorlabel(), target);
  }

  // string startTime = 10;
  if (this->starttime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starttime().data(), static_cast<int>(this->_internal_starttime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityPartInfo.startTime");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_starttime(), target);
  }

  // string endTime = 11;
  if (this->endtime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_endtime().data(), static_cast<int>(this->_internal_endtime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityPartInfo.endTime");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_endtime(), target);
  }

  // string startDuration = 12;
  if (this->startduration().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_startduration().data(), static_cast<int>(this->_internal_startduration().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityPartInfo.startDuration");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_startduration(), target);
  }

  // string endDuration = 13;
  if (this->endduration().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_endduration().data(), static_cast<int>(this->_internal_endduration().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityPartInfo.endDuration");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_endduration(), target);
  }

  // string creatorNick = 14;
  if (this->creatornick().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creatornick().data(), static_cast<int>(this->_internal_creatornick().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityPartInfo.creatorNick");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_creatornick(), target);
  }

  // string creatorAvatar = 15;
  if (this->creatoravatar().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creatoravatar().data(), static_cast<int>(this->_internal_creatoravatar().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityPartInfo.creatorAvatar");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_creatoravatar(), target);
  }

  // int32 houseHot = 16;
  if (this->househot() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(16, this->_internal_househot(), target);
  }

  // string houseCoverVideo = 17;
  if (this->housecovervideo().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_housecovervideo().data(), static_cast<int>(this->_internal_housecovervideo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityPartInfo.houseCoverVideo");
    target = stream->WriteStringMaybeAliased(
        17, this->_internal_housecovervideo(), target);
  }

  // int32 scene = 18;
  if (this->scene() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(18, this->_internal_scene(), target);
  }

  // int32 isExistTreasureBox = 19;
  if (this->isexisttreasurebox() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(19, this->_internal_isexisttreasurebox(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:activity.ActivityPartInfo)
  return target;
}

size_t ActivityPartInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:activity.ActivityPartInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string houseName = 4;
  if (this->housename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_housename());
  }

  // string houseSmartCover = 5;
  if (this->housesmartcover().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_housesmartcover());
  }

  // string houseBigCover = 6;
  if (this->housebigcover().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_housebigcover());
  }

  // string houseDesc = 7;
  if (this->housedesc().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_housedesc());
  }

  // string actorNick = 8;
  if (this->actornick().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actornick());
  }

  // string actorLabel = 9;
  if (this->actorlabel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actorlabel());
  }

  // string startTime = 10;
  if (this->starttime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starttime());
  }

  // string endTime = 11;
  if (this->endtime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_endtime());
  }

  // string startDuration = 12;
  if (this->startduration().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_startduration());
  }

  // string endDuration = 13;
  if (this->endduration().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_endduration());
  }

  // string creatorNick = 14;
  if (this->creatornick().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creatornick());
  }

  // string creatorAvatar = 15;
  if (this->creatoravatar().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creatoravatar());
  }

  // string houseCoverVideo = 17;
  if (this->housecovervideo().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_housecovervideo());
  }

  // int32 houseId = 1;
  if (this->houseid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_houseid());
  }

  // int32 houseType = 2;
  if (this->housetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_housetype());
  }

  // int32 isCopy = 3;
  if (this->iscopy() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_iscopy());
  }

  // int32 houseHot = 16;
  if (this->househot() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_househot());
  }

  // int32 scene = 18;
  if (this->scene() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_scene());
  }

  // int32 isExistTreasureBox = 19;
  if (this->isexisttreasurebox() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_isexisttreasurebox());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActivityPartInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:activity.ActivityPartInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityPartInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActivityPartInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:activity.ActivityPartInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:activity.ActivityPartInfo)
    MergeFrom(*source);
  }
}

void ActivityPartInfo::MergeFrom(const ActivityPartInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:activity.ActivityPartInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.housename().size() > 0) {

    housename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.housename_);
  }
  if (from.housesmartcover().size() > 0) {

    housesmartcover_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.housesmartcover_);
  }
  if (from.housebigcover().size() > 0) {

    housebigcover_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.housebigcover_);
  }
  if (from.housedesc().size() > 0) {

    housedesc_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.housedesc_);
  }
  if (from.actornick().size() > 0) {

    actornick_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.actornick_);
  }
  if (from.actorlabel().size() > 0) {

    actorlabel_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.actorlabel_);
  }
  if (from.starttime().size() > 0) {

    starttime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.starttime_);
  }
  if (from.endtime().size() > 0) {

    endtime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.endtime_);
  }
  if (from.startduration().size() > 0) {

    startduration_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.startduration_);
  }
  if (from.endduration().size() > 0) {

    endduration_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.endduration_);
  }
  if (from.creatornick().size() > 0) {

    creatornick_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.creatornick_);
  }
  if (from.creatoravatar().size() > 0) {

    creatoravatar_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.creatoravatar_);
  }
  if (from.housecovervideo().size() > 0) {

    housecovervideo_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.housecovervideo_);
  }
  if (from.houseid() != 0) {
    _internal_set_houseid(from._internal_houseid());
  }
  if (from.housetype() != 0) {
    _internal_set_housetype(from._internal_housetype());
  }
  if (from.iscopy() != 0) {
    _internal_set_iscopy(from._internal_iscopy());
  }
  if (from.househot() != 0) {
    _internal_set_househot(from._internal_househot());
  }
  if (from.scene() != 0) {
    _internal_set_scene(from._internal_scene());
  }
  if (from.isexisttreasurebox() != 0) {
    _internal_set_isexisttreasurebox(from._internal_isexisttreasurebox());
  }
}

void ActivityPartInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:activity.ActivityPartInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityPartInfo::CopyFrom(const ActivityPartInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:activity.ActivityPartInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityPartInfo::IsInitialized() const {
  return true;
}

void ActivityPartInfo::InternalSwap(ActivityPartInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  housename_.Swap(&other->housename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  housesmartcover_.Swap(&other->housesmartcover_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  housebigcover_.Swap(&other->housebigcover_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  housedesc_.Swap(&other->housedesc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  actornick_.Swap(&other->actornick_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  actorlabel_.Swap(&other->actorlabel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  starttime_.Swap(&other->starttime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  endtime_.Swap(&other->endtime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  startduration_.Swap(&other->startduration_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  endduration_.Swap(&other->endduration_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  creatornick_.Swap(&other->creatornick_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  creatoravatar_.Swap(&other->creatoravatar_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  housecovervideo_.Swap(&other->housecovervideo_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(houseid_, other->houseid_);
  swap(housetype_, other->housetype_);
  swap(iscopy_, other->iscopy_);
  swap(househot_, other->househot_);
  swap(scene_, other->scene_);
  swap(isexisttreasurebox_, other->isexisttreasurebox_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActivityPartInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void QuerySpaceHotInfo::InitAsDefaultInstance() {
}
class QuerySpaceHotInfo::_Internal {
 public:
};

QuerySpaceHotInfo::QuerySpaceHotInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:activity.QuerySpaceHotInfo)
}
QuerySpaceHotInfo::QuerySpaceHotInfo(const QuerySpaceHotInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&houseid_, &from.houseid_,
    static_cast<size_t>(reinterpret_cast<char*>(&housetype_) -
    reinterpret_cast<char*>(&houseid_)) + sizeof(housetype_));
  // @@protoc_insertion_point(copy_constructor:activity.QuerySpaceHotInfo)
}

void QuerySpaceHotInfo::SharedCtor() {
  ::memset(&houseid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&housetype_) -
      reinterpret_cast<char*>(&houseid_)) + sizeof(housetype_));
}

QuerySpaceHotInfo::~QuerySpaceHotInfo() {
  // @@protoc_insertion_point(destructor:activity.QuerySpaceHotInfo)
  SharedDtor();
}

void QuerySpaceHotInfo::SharedDtor() {
}

void QuerySpaceHotInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QuerySpaceHotInfo& QuerySpaceHotInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QuerySpaceHotInfo_activity_2eproto.base);
  return *internal_default_instance();
}


void QuerySpaceHotInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:activity.QuerySpaceHotInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&houseid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&housetype_) -
      reinterpret_cast<char*>(&houseid_)) + sizeof(housetype_));
  _internal_metadata_.Clear();
}

const char* QuerySpaceHotInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 houseId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          houseid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 houseType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          housetype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QuerySpaceHotInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:activity.QuerySpaceHotInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 houseId = 1;
  if (this->houseid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_houseid(), target);
  }

  // int32 houseType = 2;
  if (this->housetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_housetype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:activity.QuerySpaceHotInfo)
  return target;
}

size_t QuerySpaceHotInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:activity.QuerySpaceHotInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 houseId = 1;
  if (this->houseid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_houseid());
  }

  // int32 houseType = 2;
  if (this->housetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_housetype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuerySpaceHotInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:activity.QuerySpaceHotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const QuerySpaceHotInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QuerySpaceHotInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:activity.QuerySpaceHotInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:activity.QuerySpaceHotInfo)
    MergeFrom(*source);
  }
}

void QuerySpaceHotInfo::MergeFrom(const QuerySpaceHotInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:activity.QuerySpaceHotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.houseid() != 0) {
    _internal_set_houseid(from._internal_houseid());
  }
  if (from.housetype() != 0) {
    _internal_set_housetype(from._internal_housetype());
  }
}

void QuerySpaceHotInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:activity.QuerySpaceHotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuerySpaceHotInfo::CopyFrom(const QuerySpaceHotInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:activity.QuerySpaceHotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySpaceHotInfo::IsInitialized() const {
  return true;
}

void QuerySpaceHotInfo::InternalSwap(QuerySpaceHotInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(houseid_, other->houseid_);
  swap(housetype_, other->housetype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuerySpaceHotInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SpaceHotInfo::InitAsDefaultInstance() {
}
class SpaceHotInfo::_Internal {
 public:
};

SpaceHotInfo::SpaceHotInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:activity.SpaceHotInfo)
}
SpaceHotInfo::SpaceHotInfo(const SpaceHotInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&houseid_, &from.houseid_,
    static_cast<size_t>(reinterpret_cast<char*>(&hotnum_) -
    reinterpret_cast<char*>(&houseid_)) + sizeof(hotnum_));
  // @@protoc_insertion_point(copy_constructor:activity.SpaceHotInfo)
}

void SpaceHotInfo::SharedCtor() {
  ::memset(&houseid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hotnum_) -
      reinterpret_cast<char*>(&houseid_)) + sizeof(hotnum_));
}

SpaceHotInfo::~SpaceHotInfo() {
  // @@protoc_insertion_point(destructor:activity.SpaceHotInfo)
  SharedDtor();
}

void SpaceHotInfo::SharedDtor() {
}

void SpaceHotInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SpaceHotInfo& SpaceHotInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SpaceHotInfo_activity_2eproto.base);
  return *internal_default_instance();
}


void SpaceHotInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:activity.SpaceHotInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&houseid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hotnum_) -
      reinterpret_cast<char*>(&houseid_)) + sizeof(hotnum_));
  _internal_metadata_.Clear();
}

const char* SpaceHotInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 houseId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          houseid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 houseType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          housetype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 hotNum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          hotnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpaceHotInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:activity.SpaceHotInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 houseId = 1;
  if (this->houseid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_houseid(), target);
  }

  // int32 houseType = 2;
  if (this->housetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_housetype(), target);
  }

  // int32 hotNum = 3;
  if (this->hotnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_hotnum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:activity.SpaceHotInfo)
  return target;
}

size_t SpaceHotInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:activity.SpaceHotInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 houseId = 1;
  if (this->houseid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_houseid());
  }

  // int32 houseType = 2;
  if (this->housetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_housetype());
  }

  // int32 hotNum = 3;
  if (this->hotnum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hotnum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpaceHotInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:activity.SpaceHotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SpaceHotInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpaceHotInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:activity.SpaceHotInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:activity.SpaceHotInfo)
    MergeFrom(*source);
  }
}

void SpaceHotInfo::MergeFrom(const SpaceHotInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:activity.SpaceHotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.houseid() != 0) {
    _internal_set_houseid(from._internal_houseid());
  }
  if (from.housetype() != 0) {
    _internal_set_housetype(from._internal_housetype());
  }
  if (from.hotnum() != 0) {
    _internal_set_hotnum(from._internal_hotnum());
  }
}

void SpaceHotInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:activity.SpaceHotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpaceHotInfo::CopyFrom(const SpaceHotInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:activity.SpaceHotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpaceHotInfo::IsInitialized() const {
  return true;
}

void SpaceHotInfo::InternalSwap(SpaceHotInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(houseid_, other->houseid_);
  swap(housetype_, other->housetype_);
  swap(hotnum_, other->hotnum_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpaceHotInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ActivityCopySpaceInfo::InitAsDefaultInstance() {
}
class ActivityCopySpaceInfo::_Internal {
 public:
};

ActivityCopySpaceInfo::ActivityCopySpaceInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:activity.ActivityCopySpaceInfo)
}
ActivityCopySpaceInfo::ActivityCopySpaceInfo(const ActivityCopySpaceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  usericon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_usericon().empty()) {
    usericon_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.usericon_);
  }
  usernick_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_usernick().empty()) {
    usernick_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.usernick_);
  }
  spacename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_spacename().empty()) {
    spacename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.spacename_);
  }
  ::memcpy(&houseid_, &from.houseid_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&houseid_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:activity.ActivityCopySpaceInfo)
}

void ActivityCopySpaceInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActivityCopySpaceInfo_activity_2eproto.base);
  usericon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  usernick_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  spacename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&houseid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&houseid_)) + sizeof(uid_));
}

ActivityCopySpaceInfo::~ActivityCopySpaceInfo() {
  // @@protoc_insertion_point(destructor:activity.ActivityCopySpaceInfo)
  SharedDtor();
}

void ActivityCopySpaceInfo::SharedDtor() {
  usericon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  usernick_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  spacename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ActivityCopySpaceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActivityCopySpaceInfo& ActivityCopySpaceInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActivityCopySpaceInfo_activity_2eproto.base);
  return *internal_default_instance();
}


void ActivityCopySpaceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:activity.ActivityCopySpaceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  usericon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  usernick_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  spacename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&houseid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&houseid_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

const char* ActivityCopySpaceInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 houseId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          houseid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 houseType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          housetype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 isOpen = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          isopen_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 currentOnline = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          currentonline_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 uid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string userIcon = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_usericon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityCopySpaceInfo.userIcon"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string userNick = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_usernick();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityCopySpaceInfo.userNick"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string spaceName = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_spacename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "activity.ActivityCopySpaceInfo.spaceName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActivityCopySpaceInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:activity.ActivityCopySpaceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 houseId = 1;
  if (this->houseid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_houseid(), target);
  }

  // int32 houseType = 2;
  if (this->housetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_housetype(), target);
  }

  // int32 isOpen = 3;
  if (this->isopen() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_isopen(), target);
  }

  // int32 currentOnline = 4;
  if (this->currentonline() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_currentonline(), target);
  }

  // int32 uid = 5;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_uid(), target);
  }

  // string userIcon = 6;
  if (this->usericon().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_usericon().data(), static_cast<int>(this->_internal_usericon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityCopySpaceInfo.userIcon");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_usericon(), target);
  }

  // string userNick = 7;
  if (this->usernick().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_usernick().data(), static_cast<int>(this->_internal_usernick().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityCopySpaceInfo.userNick");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_usernick(), target);
  }

  // string spaceName = 8;
  if (this->spacename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_spacename().data(), static_cast<int>(this->_internal_spacename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "activity.ActivityCopySpaceInfo.spaceName");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_spacename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:activity.ActivityCopySpaceInfo)
  return target;
}

size_t ActivityCopySpaceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:activity.ActivityCopySpaceInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string userIcon = 6;
  if (this->usericon().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_usericon());
  }

  // string userNick = 7;
  if (this->usernick().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_usernick());
  }

  // string spaceName = 8;
  if (this->spacename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_spacename());
  }

  // int32 houseId = 1;
  if (this->houseid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_houseid());
  }

  // int32 houseType = 2;
  if (this->housetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_housetype());
  }

  // int32 isOpen = 3;
  if (this->isopen() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_isopen());
  }

  // int32 currentOnline = 4;
  if (this->currentonline() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_currentonline());
  }

  // int32 uid = 5;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActivityCopySpaceInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:activity.ActivityCopySpaceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityCopySpaceInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActivityCopySpaceInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:activity.ActivityCopySpaceInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:activity.ActivityCopySpaceInfo)
    MergeFrom(*source);
  }
}

void ActivityCopySpaceInfo::MergeFrom(const ActivityCopySpaceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:activity.ActivityCopySpaceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.usericon().size() > 0) {

    usericon_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.usericon_);
  }
  if (from.usernick().size() > 0) {

    usernick_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.usernick_);
  }
  if (from.spacename().size() > 0) {

    spacename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.spacename_);
  }
  if (from.houseid() != 0) {
    _internal_set_houseid(from._internal_houseid());
  }
  if (from.housetype() != 0) {
    _internal_set_housetype(from._internal_housetype());
  }
  if (from.isopen() != 0) {
    _internal_set_isopen(from._internal_isopen());
  }
  if (from.currentonline() != 0) {
    _internal_set_currentonline(from._internal_currentonline());
  }
  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
}

void ActivityCopySpaceInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:activity.ActivityCopySpaceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityCopySpaceInfo::CopyFrom(const ActivityCopySpaceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:activity.ActivityCopySpaceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityCopySpaceInfo::IsInitialized() const {
  return true;
}

void ActivityCopySpaceInfo::InternalSwap(ActivityCopySpaceInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  usericon_.Swap(&other->usericon_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  usernick_.Swap(&other->usernick_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  spacename_.Swap(&other->spacename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(houseid_, other->houseid_);
  swap(housetype_, other->housetype_);
  swap(isopen_, other->isopen_);
  swap(currentonline_, other->currentonline_);
  swap(uid_, other->uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActivityCopySpaceInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace activity
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::activity::CSpaceHotList* Arena::CreateMaybeMessage< ::activity::CSpaceHotList >(Arena* arena) {
  return Arena::CreateInternal< ::activity::CSpaceHotList >(arena);
}
template<> PROTOBUF_NOINLINE ::activity::SSpaceHotList* Arena::CreateMaybeMessage< ::activity::SSpaceHotList >(Arena* arena) {
  return Arena::CreateInternal< ::activity::SSpaceHotList >(arena);
}
template<> PROTOBUF_NOINLINE ::activity::CActivityPartList* Arena::CreateMaybeMessage< ::activity::CActivityPartList >(Arena* arena) {
  return Arena::CreateInternal< ::activity::CActivityPartList >(arena);
}
template<> PROTOBUF_NOINLINE ::activity::SActivityPartList* Arena::CreateMaybeMessage< ::activity::SActivityPartList >(Arena* arena) {
  return Arena::CreateInternal< ::activity::SActivityPartList >(arena);
}
template<> PROTOBUF_NOINLINE ::activity::CSomeoneCopySpaceList* Arena::CreateMaybeMessage< ::activity::CSomeoneCopySpaceList >(Arena* arena) {
  return Arena::CreateInternal< ::activity::CSomeoneCopySpaceList >(arena);
}
template<> PROTOBUF_NOINLINE ::activity::SSomeoneCopySpaceList* Arena::CreateMaybeMessage< ::activity::SSomeoneCopySpaceList >(Arena* arena) {
  return Arena::CreateInternal< ::activity::SSomeoneCopySpaceList >(arena);
}
template<> PROTOBUF_NOINLINE ::activity::ActivityPartInfo* Arena::CreateMaybeMessage< ::activity::ActivityPartInfo >(Arena* arena) {
  return Arena::CreateInternal< ::activity::ActivityPartInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::activity::QuerySpaceHotInfo* Arena::CreateMaybeMessage< ::activity::QuerySpaceHotInfo >(Arena* arena) {
  return Arena::CreateInternal< ::activity::QuerySpaceHotInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::activity::SpaceHotInfo* Arena::CreateMaybeMessage< ::activity::SpaceHotInfo >(Arena* arena) {
  return Arena::CreateInternal< ::activity::SpaceHotInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::activity::ActivityCopySpaceInfo* Arena::CreateMaybeMessage< ::activity::ActivityCopySpaceInfo >(Arena* arena) {
  return Arena::CreateInternal< ::activity::ActivityCopySpaceInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
