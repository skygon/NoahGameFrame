// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EnumCmd.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_EnumCmd_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_EnumCmd_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_EnumCmd_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_EnumCmd_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_EnumCmd_2eproto;
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE
namespace enumGame {

enum EnumCmd : int {
  SError = 0,
  CAuth = 10,
  SAuth = 11,
  CHeartBeat = 16,
  SHeartBeat = 17,
  CUserInfo = 31,
  SUserInfo = 32,
  CGetUserInfoList = 33,
  SGetUserInfoList = 34,
  CUserAttrFromNft = 36,
  SUserAttrFromNft = 37,
  CHouseDetail = 41,
  SHouseDetail = 42,
  CSwitchRoom = 51,
  SSwitchRoom = 52,
  CExitRoom = 53,
  SExitRoom = 54,
  SOtherUserEnterRoom = 55,
  SOtherUserExitRoom = 56,
  CGetRoomUserList = 57,
  SGetRoomUserList = 58,
  CChangeAvatarColor = 60,
  SChangeAvatarColor = 61,
  CUpdateAvatar = 62,
  SUpdateAvatar = 63,
  CAvatarList = 64,
  SAvatarList = 65,
  CUserPosition = 71,
  SUserPosition = 72,
  CRoomUsersPosition = 73,
  SRoomUsersPosition = 74,
  CNeuronConnect = 75,
  SNeuronConnect = 76,
  CNeuronPosition = 77,
  SNeuronPosition = 78,
  CVrPosition = 79,
  SVrPosition = 80,
  CFireMagic = 81,
  SFireMagic = 82,
  SBroadFireMagic = 83,
  CNftChipList = 84,
  SNftChipList = 85,
  CMyNftList = 86,
  SMyNftList = 87,
  CPropList = 88,
  SPropList = 89,
  CHouseNftList = 90,
  SHouseNftList = 91,
  CCancelLine = 92,
  ScanceLine = 93,
  CLinedNum = 95,
  SLinedNum = 96,
  CChipReport = 101,
  SChipReport = 102,
  SChipMerge = 105,
  SBroadcastChipMerge = 106,
  SGrab = 108,
  CConstel = 111,
  SConstel = 112,
  CSaveConstel = 114,
  SSaveConstel = 115,
  CUserConstelInfo = 116,
  SUserConstelInfo = 117,
  CRequestPairs = 121,
  SRequestPairs = 122,
  SResultPairs = 123,
  CActive = 126,
  SActive = 127,
  CSingleActive = 128,
  SSingleActive = 129,
  CMatchStart = 130,
  SMatchStart = 131,
  CMatchEnd = 132,
  SMatchEnd = 133,
  CGetProps = 140,
  SGetProps = 141,
  CConsumeProps = 142,
  SConsumeProps = 143,
  CAddPiece = 150,
  SAddPiece = 151,
  CGetNftPieceFromHouse = 152,
  SGetNftPieceFromHouse = 153,
  CNftBox = 160,
  SNftBox = 161,
  CActiveNotice = 170,
  SActiveNotice = 171,
  CChipConfig = 180,
  SChipConfig = 181,
  CEnterConcert = 182,
  SEnterConcert = 183,
  CEnterConcertMain = 184,
  SEnterConcertMain = 185,
  CBusinessObjectList = 186,
  SBusinessObjectList = 187,
  CActionStatusSyn = 189,
  SActionStatusSyn = 190,
  CTriggerBo = 191,
  STriggerBo = 192,
  STriggerBoBroad = 193,
  SActivityEvent = 194,
  CTopRank = 195,
  STopRank = 196,
  CCtrlToggle = 197,
  SCtrlBroadcast = 198,
  SCtrlFlyBroadcast = 199,
  SFlyTimelineBroadcast = 200,
  CConcertFlyInit = 201,
  SAreaJump = 202,
  CSkillSyn = 203,
  SSkillSyn = 204,
  COperationSyn = 205,
  SOperationSyn = 206,
  SOperationSynBroad = 207,
  CSkeleton = 208,
  SSkeleton = 209,
  CGetLayPosition = 210,
  SGetLayPosition = 211,
  CSetLayPosition = 212,
  SSetLayPosition = 213,
  CGetSpaceBack = 214,
  SGetSpaceBack = 215,
  CspaceBackpackList = 216,
  SspaceBackpackList = 217,
  CspaceScenesBackpackList = 218,
  SspaceScenesBackpackList = 219,
  CSpaceThingList = 220,
  SSpaceThingList = 221,
  CSpaceThingInfo = 222,
  SSpaceThingInfo = 223,
  CCheckActionStatusSyn = 224,
  SCheckActionStatusSyn = 225,
  SBroadSightSeeing = 226,
  CSpaceLogList = 227,
  SSpaceLogList = 228,
  CSpaceRandom = 229,
  SSpaceRandom = 230,
  CChatList = 231,
  SChatList = 232,
  CChatDetail = 233,
  SChatDetail = 234,
  CChatSend = 235,
  SChatSend = 236,
  CBuyGoods = 237,
  SBuyGoods = 238,
  CShoppingList = 239,
  SShoppingList = 240,
  CBuy = 241,
  SBuy = 242,
  COwnerSpace = 243,
  SOwnerSpace = 244,
  CFollowUser = 245,
  SFollowUser = 246,
  CShoppingWalletInfo = 247,
  SShoppingWalletInfo = 248,
  CViolationFeedback = 249,
  SViolationFeedback = 250,
  CPrepaidEnum = 251,
  SPrepaidEnum = 252,
  CGoodsBackpackList = 253,
  SGoodsBackpackList = 254,
  CDimSearch = 255,
  SDimSearch = 256,
  CFollowList = 257,
  SFollowList = 258,
  CShoppingInfoByShopIdGoodsId = 259,
  SShoppingInfoByShopIdGoodsId = 260,
  CShoppingUsersLimit = 261,
  SShoppingUsersLimit = 262,
  CCardInfo = 263,
  SCardInfo = 264,
  CMoyuanUsersAvatarInfo = 265,
  SMoyuanUsersAvatarInfo = 266,
  CMoyuanUsersAvatarUpdate = 267,
  SMoyuanUsersAvatarUpdate = 268,
  CMoyuanUsersProgressInfo = 269,
  SMoyuanUsersProgressInfo = 270,
  CMoyuanUsersProgressUpdate = 271,
  SMoyuanUsersProgressUpdate = 272,
  CAvatarPicList = 273,
  SAvaterPicList = 274,
  CMoyuanUsersAvatarList = 275,
  SMoyuanUsersAvatarList = 276,
  CMoyuanDreamAdd = 277,
  SMoyuanDreamAdd = 278,
  CMoyuanDreamRand = 279,
  SMoyuanDreamRand = 280,
  CRename = 281,
  SRename = 282,
  CSpaceWorksGet = 283,
  SSpaceWorksGet = 284,
  CSpaceWorksUpload = 285,
  SSpaceWorksUpload = 286,
  CConfigList = 287,
  SConfigList = 288,
  CActionFollow = 289,
  SActionFollow = 290,
  CActionInterrupt = 291,
  SActionInterrupt = 292,
  CMoyuanTroveGoodsBackpackList = 293,
  SMoyuanTroveGoodsBackpackList = 294,
  CMoyuanTroveGoodsAdd = 295,
  SMoyuanTroveGoodsAdd = 296,
  CRandomRay = 297,
  SRandomRay = 298,
  CRadiusTransformation = 299,
  SRadiusTransformation = 300,
  CMoyuanDreamCommentList = 301,
  SMoyuanDreamCommentList = 302,
  CMoyuanDreamComment = 303,
  SMoyuanDreamComment = 304,
  CMoyuanAnonymousId = 305,
  SMoyuanAnonymousId = 306,
  CFreeGoodsList = 307,
  SFreeGoodsList = 308,
  CGameFinish = 309,
  SGameFinish = 310,
  CGameInfo = 311,
  SGameInfo = 312,
  CMoyuanDreamCommentNoticeList = 313,
  SMoyuanDreamCommentNoticeList = 314,
  CMoyuanMineDreamList = 315,
  SMoyuanMineDreamList = 316,
  CMoyuanDreamInfo = 317,
  SMoyuanDreamInfo = 318,
  SCtrlLiftBroadcast = 319,
  SCtrlEncoreBroadcast = 320,
  CGoodsExchange = 321,
  SGoodsExchange = 322,
  SBroadGift = 323,
  CTransfiguration = 325,
  STransfiguration = 326,
  CUsersDesireAdd = 327,
  SUsersDesireAdd = 328,
  CCtrlInfo = 329,
  CBuffOn = 330,
  SBuffOn = 331,
  CBuffInterrupt = 332,
  SBuffInterrupt = 333,
  SSystemNotice = 335,
  CAgoraToken = 336,
  SAgoraToken = 337,
  SCtrlInfo = 338,
  CSamsungStatistics = 339,
  SSamsungStatistics = 340,
  CCtrlHeartBeat = 341,
  SCtrlHeartBeat = 342,
  CCtrlManual = 343,
  SBroadCtrlManual = 344,
  CCardTransferBtn = 345,
  SCardTransferBtn = 346,
  CCardTransfer = 347,
  SCardTransfer = 348,
  CSaveUserInfoGetVerifyCode = 349,
  SSaveUserInfoGetVerifyCode = 350,
  CVerifySaveUserInfoVerifyCode = 351,
  SVerifySaveUserInfoVerifyCode = 352,
  CSavePhoneByVerifyCode = 353,
  SSavePhoneByVerifyCode = 354,
  CRecommendList = 355,
  SRecommendList = 356,
  CCancelUserByVerifyCode = 357,
  SCancelUserByVerifyCode = 358,
  CRemoveWechatByVerifyCode = 359,
  SRemoveWechatByVerifyCode = 360,
  CUserBindWechat = 361,
  SUserBindWechat = 362,
  CCardVisitorList = 363,
  SCardVisitorList = 364,
  CCardVisitNumber = 365,
  SCardVisitNumber = 366,
  CHomepageConfigList = 367,
  SHomepageConfigList = 368,
  CDelSpace = 369,
  SDelSpace = 370,
  CHomepageNewUser = 371,
  SHomepageNewUser = 372,
  CHomepageNewUserProgress = 373,
  SHomepageNewUserProgress = 374,
  CHomepageNewUserEventReward = 375,
  SHomepageNewUserEventReward = 376,
  CNewFansRead = 377,
  SNewFansRead = 378,
  CNewFansNum = 379,
  SNewFansNum = 380,
  CChangeUserSign = 381,
  SChangeUserSign = 382,
  CChangeUserIcon = 383,
  SChangeUserIcon = 384,
  CInAccountUnbind = 385,
  SInAccountUnbind = 386,
  CNewUserRewardConfig = 387,
  SNewUserRewardConfig = 388,
  CNewUserRewardFinish = 389,
  SNewUserRewardFinish = 390,
  CGptChat = 391,
  SGptChat = 392,
  CSpeakStatus = 393,
  SSpeakStatus = 394,
  CUpdateYuanshenAvatar = 395,
  SUpdateYuanshenAvatar = 396,
  CNpcJinyan = 397,
  SNpcJinyan = 398,
  CNpcJieJin = 399,
  SNpcJieJin = 400,
  CPutGoods = 401,
  SPutGoods = 402,
  CPutGoodsList = 403,
  SPutGoodsList = 404,
  CPickGoods = 405,
  SPickGoods = 406,
  CPutRedPacket = 407,
  SPutRedPacket = 408,
  CPutRedPacketList = 409,
  SPutRedPacketList = 410,
  CPickRedPacket = 411,
  SPickRedPacket = 412,
  CScramble = 413,
  SScramble = 414,
  CMoneyOrderList = 415,
  SMoneyOrderList = 416,
  CThrowOrder = 417,
  SThrowOrder = 418,
  CEarthOrderList = 419,
  SEarthOrderList = 420,
  CBuyMoneyOrder = 421,
  SBuyMoneyOrder = 422,
  CCopyHouseCreate = 423,
  SCopyHouseCreate = 424,
  CCopyHouseDetail = 425,
  SCopyHouseDetail = 426,
  CCopyHouseSet = 427,
  SCopyHouseSet = 428,
  CCopyHouseAuth = 429,
  SCopyHouseAuth = 430,
  CMyDefaultSpace = 431,
  SMyDefaultSpace = 432,
  CSpaceHot = 433,
  SSpaceHot = 434,
  CShareEventRecord = 435,
  SShareEventRecord = 436,
  CShareEventNotification = 437,
  SShareEventNotification = 438,
  CShareFinalSpaceMessage = 439,
  SShareFinalSpaceMessage = 440,
  CTheatreInfo = 441,
  STheatreInfo = 442,
  CTheatreBegin = 443,
  STheatreBegin = 444,
  CShareSpaceCreate = 445,
  SShareSpaceCreate = 446,
  CSpaceIntroduce = 447,
  SSpaceIntroduce = 448,
  CYuanLiChange = 449,
  SYuanLiChange = 450,
  CUsersSort = 451,
  SUsersSort = 452,
  CUserGiftList = 453,
  SUserGiftList = 454,
  CSwitchCommandStatusList = 455,
  SSwitchCommandStatusList = 456,
  CSearchUsers = 457,
  SSearchUsers = 458,
  CRecommendUsers = 459,
  SRecommendUsers = 460,
  CNewHomepageConfigList = 461,
  SNewHomepageConfigList = 462,
  CGetSpaceDraftList = 463,
  SGetSpaceDraftList = 464,
  CCopyNpc = 465,
  SCopyNpc = 466,
  CChangePrompt = 467,
  SChangePrompt = 468,
  CNpcCustomChat = 469,
  SNpcCustomChat = 470,
  CSpacePublishedList = 471,
  SSpacePublishedList = 472,
  CSpaceDraftDetail = 473,
  SSpaceDraftDetail = 474,
  CPromptHistory = 475,
  SPromptHistory = 476,
  CPromptRollback = 477,
  SPromptRollback = 478,
  CSpaceResourceList = 479,
  SSpaceResourceList = 480,
  SStartLineUp = 481,
  STickStartGame = 482,
  STickOfficialStartGame = 483,
  STickGameOver = 484,
  CJumpGameWaitLine = 485,
  SJumpGameWaitLine = 486,
  CJumpGameOut = 487,
  SJumpGameOut = 488,
  CGameStatus = 489,
  SGameStatus = 490,
  CGameRank = 491,
  SGameRank = 492,
  CGameOfBoatingUpBoat = 493,
  SGameOfBoatingUpBoat = 494,
  CGameOfBoatingDownBoat = 495,
  SGameOfBoatingDownBoat = 496,
  CGameOfBoatingSuccess = 497,
  SGameOfBoatingSuccess = 498,
  CGameOfBoatingSynchronizeBoat = 499,
  SGameOfBoatingSynchronizeBoat = 500,
  SJumpGameShootBullets = 501,
  SGameAbnormalStop = 502,
  CNpcCustomChatStream = 503,
  SNpcCustomChatStream = 504,
  CUserConsumeGiftList = 505,
  SUserConsumeGiftList = 506,
  CUserObtainGiftList = 507,
  SUserObtainGiftList = 508,
  CSpaceGoodsList = 509,
  SSpaceGoodsList = 510,
  CPickSpaceGoods = 511,
  SPickSpaceGoods = 512,
  CSpaceAirVehicleList = 513,
  SSpaceAirVehicleList = 514,
  CSpaceAirVehicleTake = 515,
  SSpaceAirVehicleTake = 516,
  SSpaceAirVehicleDisappear = 517,
  SSpaceAirVehicle = 518,
  CInviteTeam = 519,
  SInviteTeam = 520,
  CReplyInviteTeam = 521,
  SReplyInviteTeam = 522,
  CTeamUserList = 523,
  STeamUserList = 524,
  CLeaveTeam = 525,
  SLeaveTeam = 526,
  CUsersTeamState = 527,
  SUsersTeamState = 528,
  CCreateVehicle = 529,
  SCreateVehicle = 530,
  CRideVehicle = 531,
  SRideVehicle = 532,
  CResetVehicle = 533,
  SResetVehicle = 534,
  CDestroyVehicle = 535,
  SDestroyVehicle = 536,
  CAllVehicle = 537,
  SAllVehicle = 538,
  COperateVehicle = 539,
  SVehiclePosSync = 540,
  SCrashNotice = 541,
  CUpdateMikeStatus = 542,
  SUpdateMikeStatus = 543,
  CGameStudioInstanceList = 544,
  SGameStudioInstanceList = 545,
  CSendInviteTrial = 546,
  SSendInviteTrial = 547,
  CCheckInviteTrial = 548,
  SCheckInviteTrial = 549,
  SInviteTrialEnd = 550,
  SCreatorBanNotice = 551,
  CXiangshanVisitLog = 552,
  SXiangshanVisitLog = 553,
  CXiangshanScreenSource = 554,
  SXiangshanScreenSource = 555,
  CXiangshanChairAction = 556,
  SXiangshanChairAction = 557,
  CXiangshanChairStateList = 558,
  SXiangshanChairStateList = 559,
  CBusinessCardSave = 560,
  SBusinessCardSave = 561,
  CBusinessCardList = 562,
  SBusinessCardList = 563,
  CNewUserSelectAvatar = 564,
  SNewUserSelectAvatar = 565,
  CSpaceHotList = 566,
  SSpaceHotList = 567,
  CActivityPartList = 568,
  SActivityPartList = 569,
  CSomeoneCopySpaceList = 570,
  SSomeoneCopySpaceList = 571,
  CQCZLLoverRelationshipOption = 572,
  SQCZLLoverRelationshipOption = 573,
  CQCZLLoverInviteResponse = 574,
  SQCZLLoverInviteResponse = 575,
  CDailyTreasureBoxStatus = 576,
  SDailyTreasureBoxStatus = 577,
  COpenDailyTreasureBox = 578,
  SOpenDailyTreasureBox = 579,
  CSpaceTreasureBoxList = 580,
  SSpaceTreasureBoxList = 581,
  COpenSpaceTreasureBox = 582,
  SOpenSpaceTreasureBox = 583,
  SSpaceTreasureBoxRefreshNotice = 584,
  CTaskList = 585,
  STaskList = 586,
  CClaimTask = 587,
  SClaimTask = 588,
  CCompleteTaskReporting = 589,
  SCompleteTaskReporting = 590,
  CClaimReward = 591,
  SClaimReward = 592,
  CRefreshDailyTasks = 593,
  SRefreshDailyTasks = 594,
  CObtainRewardList = 595,
  SObtainRewardList = 596,
  CBlindBoxLottery = 597,
  SBlindBoxLottery = 598,
  CObtainAwardRecords = 599,
  SObtainAwardRecords = 600,
  CPhysicalRewardExchange = 601,
  SPhysicalRewardExchange = 602,
  CShareCodeParse = 603,
  SShareCodeParse = 604,
  CLotteryBestProgress = 605,
  SLotteryBestProgress = 606,
  CJinrongForumVisitLog = 607,
  SJinrongForumVisitLog = 608,
  CGetLiuXiaTaskList = 609,
  SGetLiuXiaTaskList = 610,
  CLiuXiaCompleteTaskReporting = 611,
  SLiuXiaCompleteTaskReporting = 612,
  CLiuXiaClaimRewards = 613,
  SLiuXiaClaimRewards = 614,
  CCollectionSiKuQuanShu = 615,
  SCollectionSiKuQuanShu = 616,
  CStatCollectionSiKuQuanShu = 617,
  SStatCollectionSiKuQuanShu = 618,
  CGetUserSiKuQuanShuPageNum = 619,
  SGetUserSiKuQuanShuPageNum = 620,
  CGetJinrongForumFreeGift = 621,
  SGetJinrongForumFreeGift = 622,
  CGetLiuxiaFreeGift = 623,
  SGetLiuxiaFreeGift = 624,
  CGetLiuxiaSwitch = 625,
  SGetLiuxiaSwitch = 626,
  CHiphopWarmUp = 627,
  SHiphopWarmUp = 628,
  CHiphopListStarToken = 629,
  SHiphopListStarToken = 630,
  CHiphopGetStarToken = 631,
  SHiphopGetStarToken = 632,
  CHiphopUseStarToken = 633,
  SHiphopUseStarToken = 634,
  CHiphopAwardPrediction = 635,
  SHiphopAwardPrediction = 636,
  CHiphopNoteList = 637,
  SHiphopNoteList = 638,
  CHiphopNotePickup = 639,
  SHiphopNotePickup = 640,
  SHiphopSwitch = 641,
  CHiphopWarmupState = 642,
  SHiphopWarmupState = 643,
  SHiphopCeremonyProcess = 644,
  SHiphopStarSwitch = 645,
  CHiphopCeremonyState = 646,
  SHiphopCeremonyState = 647,
  SHiphopPhotoRain = 648,
  COnlineReminder = 649,
  SOnlineReminder = 650,
  CReminderInfo = 651,
  SReminderInfo = 652,
  CUserTitleList = 653,
  SUserTitleList = 654,
  CEquipUserTitle = 655,
  SEquipUserTitle = 656,
  CPushUserStatus = 657,
  SPushUserStatus = 658,
  CUserCertificationDetail = 659,
  SUserCertificationDetail = 660,
  SPushUserOnlineMessage = 661,
  SPushSpaceMessage = 662,
  CMjOfflineAfterimage = 663,
  SMjOfflineAfterimage = 664,
  CMjDancePosition = 665,
  SMjDancePosition = 666,
  CMjUserDanceAction = 667,
  SMjUserDanceAction = 668,
  CMjDanceStatus = 669,
  SMjDanceStatus = 670,
  CMjDanceScore = 671,
  SMjDanceScore = 672,
  CMjDanceRank = 673,
  SMjDanceRank = 674,
  CMjLeaveMessageTopic = 675,
  SMjLeaveMessageTopic = 676,
  CMjCreateLeaveMessage = 677,
  SMjCreateLeaveMessage = 678,
  CMjLikeLeaveMessage = 679,
  SMjLikeLeaveMessage = 680,
  CMjDeleteLeaveMessage = 681,
  SMjDeleteLeaveMessage = 682,
  CMjLeaveMessageList = 683,
  SMjLeaveMessageList = 684,
  CMjLeaveMessageDetail = 685,
  SMjLeaveMessageDetail = 686,
  CMjDrawCard = 687,
  SMjDrawCard = 688,
  CMjUserCardCollection = 689,
  SMjUserCardCollection = 690,
  CMjGetCardReward = 691,
  SMjGetCardReward = 692,
  CMjCardSynthesis = 693,
  SMjCardSynthesis = 694,
  CMjCardDecompose = 695,
  SMjCardDecompose = 696,
  CMjTaskProcess = 697,
  SMjTaskProcess = 698,
  CMjGetTaskReward = 699,
  SMjGetTaskReward = 700,
  CMjShareLeaveMessage = 701,
  SMjShareLeaveMessage = 702,
  SPushMjLeaveMsg = 703,
  PingACK = 1001,
  CVerify = 1002,
  SVerify = 1003,
  SRenderSwitchRoom = 1004,
  SRenderExitRoom = 1005,
  CRenderScale = 1006,
  SRenderScale = 1007,
  SRenderFrame = 1008,
  SSyncAllObj = 999,
  CBulletScreenUserList = 10001,
  SBulletScreenUserList = 10002,
  SBulletScreenUserCreate = 10003,
  SBulletScreenUserDelete = 10004,
  SBulletScreenUserTalk = 10005,
  EnumCmd_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EnumCmd_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EnumCmd_IsValid(int value);
constexpr EnumCmd EnumCmd_MIN = SError;
constexpr EnumCmd EnumCmd_MAX = SBulletScreenUserTalk;
constexpr int EnumCmd_ARRAYSIZE = EnumCmd_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EnumCmd_descriptor();
template<typename T>
inline const std::string& EnumCmd_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EnumCmd>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EnumCmd_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EnumCmd_descriptor(), enum_t_value);
}
inline bool EnumCmd_Parse(
    const std::string& name, EnumCmd* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EnumCmd>(
    EnumCmd_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace enumGame

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::enumGame::EnumCmd> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enumGame::EnumCmd>() {
  return ::enumGame::EnumCmd_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_EnumCmd_2eproto
