// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: actionStatusSyn.proto

#include "actionStatusSyn.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_actionStatusSyn_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LevelUpSkill_actionStatusSyn_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vector_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PVector3_vector_2eproto;
namespace actionStatusSyn {
class CActionStatusSynDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CActionStatusSyn> _instance;
} _CActionStatusSyn_default_instance_;
class LevelUpSkillDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LevelUpSkill> _instance;
} _LevelUpSkill_default_instance_;
class SActionStatusSynDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SActionStatusSyn> _instance;
} _SActionStatusSyn_default_instance_;
class CCheckActionStatusSynDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CCheckActionStatusSyn> _instance;
} _CCheckActionStatusSyn_default_instance_;
class SCheckActionStatusSynDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SCheckActionStatusSyn> _instance;
} _SCheckActionStatusSyn_default_instance_;
}  // namespace actionStatusSyn
static void InitDefaultsscc_info_CActionStatusSyn_actionStatusSyn_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::actionStatusSyn::_CActionStatusSyn_default_instance_;
    new (ptr) ::actionStatusSyn::CActionStatusSyn();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::actionStatusSyn::CActionStatusSyn::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CActionStatusSyn_actionStatusSyn_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CActionStatusSyn_actionStatusSyn_2eproto}, {
      &scc_info_PVector3_vector_2eproto.base,}};

static void InitDefaultsscc_info_CCheckActionStatusSyn_actionStatusSyn_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::actionStatusSyn::_CCheckActionStatusSyn_default_instance_;
    new (ptr) ::actionStatusSyn::CCheckActionStatusSyn();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::actionStatusSyn::CCheckActionStatusSyn::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CCheckActionStatusSyn_actionStatusSyn_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CCheckActionStatusSyn_actionStatusSyn_2eproto}, {}};

static void InitDefaultsscc_info_LevelUpSkill_actionStatusSyn_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::actionStatusSyn::_LevelUpSkill_default_instance_;
    new (ptr) ::actionStatusSyn::LevelUpSkill();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::actionStatusSyn::LevelUpSkill::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LevelUpSkill_actionStatusSyn_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LevelUpSkill_actionStatusSyn_2eproto}, {}};

static void InitDefaultsscc_info_SActionStatusSyn_actionStatusSyn_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::actionStatusSyn::_SActionStatusSyn_default_instance_;
    new (ptr) ::actionStatusSyn::SActionStatusSyn();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::actionStatusSyn::SActionStatusSyn::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SActionStatusSyn_actionStatusSyn_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SActionStatusSyn_actionStatusSyn_2eproto}, {
      &scc_info_LevelUpSkill_actionStatusSyn_2eproto.base,}};

static void InitDefaultsscc_info_SCheckActionStatusSyn_actionStatusSyn_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::actionStatusSyn::_SCheckActionStatusSyn_default_instance_;
    new (ptr) ::actionStatusSyn::SCheckActionStatusSyn();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::actionStatusSyn::SCheckActionStatusSyn::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SCheckActionStatusSyn_actionStatusSyn_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SCheckActionStatusSyn_actionStatusSyn_2eproto}, {
      &scc_info_LevelUpSkill_actionStatusSyn_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_actionStatusSyn_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_actionStatusSyn_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_actionStatusSyn_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_actionStatusSyn_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::CActionStatusSyn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::CActionStatusSyn, actionid_),
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::CActionStatusSyn, poslist_),
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::CActionStatusSyn, orientate_),
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::CActionStatusSyn, sendtoid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::LevelUpSkill, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::LevelUpSkill, changeskillid_),
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::LevelUpSkill, changeskillnum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::SActionStatusSyn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::SActionStatusSyn, code_),
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::SActionStatusSyn, actionid_),
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::SActionStatusSyn, lvupskill_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::CCheckActionStatusSyn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::SCheckActionStatusSyn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::SCheckActionStatusSyn, code_),
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::SCheckActionStatusSyn, actionid_),
  PROTOBUF_FIELD_OFFSET(::actionStatusSyn::SCheckActionStatusSyn, lvupskill_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::actionStatusSyn::CActionStatusSyn)},
  { 9, -1, sizeof(::actionStatusSyn::LevelUpSkill)},
  { 16, -1, sizeof(::actionStatusSyn::SActionStatusSyn)},
  { 24, -1, sizeof(::actionStatusSyn::CCheckActionStatusSyn)},
  { 29, -1, sizeof(::actionStatusSyn::SCheckActionStatusSyn)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::actionStatusSyn::_CActionStatusSyn_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::actionStatusSyn::_LevelUpSkill_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::actionStatusSyn::_SActionStatusSyn_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::actionStatusSyn::_CCheckActionStatusSyn_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::actionStatusSyn::_SCheckActionStatusSyn_default_instance_),
};

const char descriptor_table_protodef_actionStatusSyn_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025actionStatusSyn.proto\022\017actionStatusSyn"
  "\032\014vector.proto\"~\n\020CActionStatusSyn\022\020\n\010ac"
  "tionId\030\001 \001(\005\022!\n\007posList\030\002 \003(\0132\020.vector.P"
  "Vector3\022#\n\torientate\030\003 \001(\0132\020.vector.PVec"
  "tor3\022\020\n\010sendToId\030\004 \001(\005\"=\n\014LevelUpSkill\022\025"
  "\n\rchangeSkillId\030\001 \001(\005\022\026\n\016changeSkillNum\030"
  "\002 \001(\005\"d\n\020SActionStatusSyn\022\014\n\004code\030\001 \001(\005\022"
  "\020\n\010actionId\030\002 \001(\005\0220\n\tlvUpSkill\030\003 \003(\0132\035.a"
  "ctionStatusSyn.LevelUpSkill\"\027\n\025CCheckAct"
  "ionStatusSyn\"i\n\025SCheckActionStatusSyn\022\014\n"
  "\004code\030\001 \001(\005\022\020\n\010actionId\030\002 \001(\005\0220\n\tlvUpSki"
  "ll\030\003 \003(\0132\035.actionStatusSyn.LevelUpSkillB"
  "+\n\030com.dayou.space.protobufB\017ActionStatu"
  "sSynb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_actionStatusSyn_2eproto_deps[1] = {
  &::descriptor_table_vector_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_actionStatusSyn_2eproto_sccs[5] = {
  &scc_info_CActionStatusSyn_actionStatusSyn_2eproto.base,
  &scc_info_CCheckActionStatusSyn_actionStatusSyn_2eproto.base,
  &scc_info_LevelUpSkill_actionStatusSyn_2eproto.base,
  &scc_info_SActionStatusSyn_actionStatusSyn_2eproto.base,
  &scc_info_SCheckActionStatusSyn_actionStatusSyn_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_actionStatusSyn_2eproto_once;
static bool descriptor_table_actionStatusSyn_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_actionStatusSyn_2eproto = {
  &descriptor_table_actionStatusSyn_2eproto_initialized, descriptor_table_protodef_actionStatusSyn_2eproto, "actionStatusSyn.proto", 532,
  &descriptor_table_actionStatusSyn_2eproto_once, descriptor_table_actionStatusSyn_2eproto_sccs, descriptor_table_actionStatusSyn_2eproto_deps, 5, 1,
  schemas, file_default_instances, TableStruct_actionStatusSyn_2eproto::offsets,
  file_level_metadata_actionStatusSyn_2eproto, 5, file_level_enum_descriptors_actionStatusSyn_2eproto, file_level_service_descriptors_actionStatusSyn_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_actionStatusSyn_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_actionStatusSyn_2eproto), true);
namespace actionStatusSyn {

// ===================================================================

void CActionStatusSyn::InitAsDefaultInstance() {
  ::actionStatusSyn::_CActionStatusSyn_default_instance_._instance.get_mutable()->orientate_ = const_cast< ::vector::PVector3*>(
      ::vector::PVector3::internal_default_instance());
}
class CActionStatusSyn::_Internal {
 public:
  static const ::vector::PVector3& orientate(const CActionStatusSyn* msg);
};

const ::vector::PVector3&
CActionStatusSyn::_Internal::orientate(const CActionStatusSyn* msg) {
  return *msg->orientate_;
}
void CActionStatusSyn::clear_poslist() {
  poslist_.Clear();
}
void CActionStatusSyn::clear_orientate() {
  if (GetArenaNoVirtual() == nullptr && orientate_ != nullptr) {
    delete orientate_;
  }
  orientate_ = nullptr;
}
CActionStatusSyn::CActionStatusSyn()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:actionStatusSyn.CActionStatusSyn)
}
CActionStatusSyn::CActionStatusSyn(const CActionStatusSyn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      poslist_(from.poslist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_orientate()) {
    orientate_ = new ::vector::PVector3(*from.orientate_);
  } else {
    orientate_ = nullptr;
  }
  ::memcpy(&actionid_, &from.actionid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sendtoid_) -
    reinterpret_cast<char*>(&actionid_)) + sizeof(sendtoid_));
  // @@protoc_insertion_point(copy_constructor:actionStatusSyn.CActionStatusSyn)
}

void CActionStatusSyn::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CActionStatusSyn_actionStatusSyn_2eproto.base);
  ::memset(&orientate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sendtoid_) -
      reinterpret_cast<char*>(&orientate_)) + sizeof(sendtoid_));
}

CActionStatusSyn::~CActionStatusSyn() {
  // @@protoc_insertion_point(destructor:actionStatusSyn.CActionStatusSyn)
  SharedDtor();
}

void CActionStatusSyn::SharedDtor() {
  if (this != internal_default_instance()) delete orientate_;
}

void CActionStatusSyn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CActionStatusSyn& CActionStatusSyn::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CActionStatusSyn_actionStatusSyn_2eproto.base);
  return *internal_default_instance();
}


void CActionStatusSyn::Clear() {
// @@protoc_insertion_point(message_clear_start:actionStatusSyn.CActionStatusSyn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  poslist_.Clear();
  if (GetArenaNoVirtual() == nullptr && orientate_ != nullptr) {
    delete orientate_;
  }
  orientate_ = nullptr;
  ::memset(&actionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sendtoid_) -
      reinterpret_cast<char*>(&actionid_)) + sizeof(sendtoid_));
  _internal_metadata_.Clear();
}

const char* CActionStatusSyn::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 actionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          actionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .vector.PVector3 posList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_poslist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .vector.PVector3 orientate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_orientate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sendToId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          sendtoid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CActionStatusSyn::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:actionStatusSyn.CActionStatusSyn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 actionId = 1;
  if (this->actionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_actionid(), target);
  }

  // repeated .vector.PVector3 posList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_poslist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_poslist(i), target, stream);
  }

  // .vector.PVector3 orientate = 3;
  if (this->has_orientate()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::orientate(this), target, stream);
  }

  // int32 sendToId = 4;
  if (this->sendtoid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_sendtoid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:actionStatusSyn.CActionStatusSyn)
  return target;
}

size_t CActionStatusSyn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:actionStatusSyn.CActionStatusSyn)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vector.PVector3 posList = 2;
  total_size += 1UL * this->_internal_poslist_size();
  for (const auto& msg : this->poslist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .vector.PVector3 orientate = 3;
  if (this->has_orientate()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *orientate_);
  }

  // int32 actionId = 1;
  if (this->actionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_actionid());
  }

  // int32 sendToId = 4;
  if (this->sendtoid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sendtoid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CActionStatusSyn::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:actionStatusSyn.CActionStatusSyn)
  GOOGLE_DCHECK_NE(&from, this);
  const CActionStatusSyn* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CActionStatusSyn>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:actionStatusSyn.CActionStatusSyn)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:actionStatusSyn.CActionStatusSyn)
    MergeFrom(*source);
  }
}

void CActionStatusSyn::MergeFrom(const CActionStatusSyn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:actionStatusSyn.CActionStatusSyn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  poslist_.MergeFrom(from.poslist_);
  if (from.has_orientate()) {
    _internal_mutable_orientate()->::vector::PVector3::MergeFrom(from._internal_orientate());
  }
  if (from.actionid() != 0) {
    _internal_set_actionid(from._internal_actionid());
  }
  if (from.sendtoid() != 0) {
    _internal_set_sendtoid(from._internal_sendtoid());
  }
}

void CActionStatusSyn::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:actionStatusSyn.CActionStatusSyn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CActionStatusSyn::CopyFrom(const CActionStatusSyn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:actionStatusSyn.CActionStatusSyn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CActionStatusSyn::IsInitialized() const {
  return true;
}

void CActionStatusSyn::InternalSwap(CActionStatusSyn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  poslist_.InternalSwap(&other->poslist_);
  swap(orientate_, other->orientate_);
  swap(actionid_, other->actionid_);
  swap(sendtoid_, other->sendtoid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CActionStatusSyn::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LevelUpSkill::InitAsDefaultInstance() {
}
class LevelUpSkill::_Internal {
 public:
};

LevelUpSkill::LevelUpSkill()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:actionStatusSyn.LevelUpSkill)
}
LevelUpSkill::LevelUpSkill(const LevelUpSkill& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&changeskillid_, &from.changeskillid_,
    static_cast<size_t>(reinterpret_cast<char*>(&changeskillnum_) -
    reinterpret_cast<char*>(&changeskillid_)) + sizeof(changeskillnum_));
  // @@protoc_insertion_point(copy_constructor:actionStatusSyn.LevelUpSkill)
}

void LevelUpSkill::SharedCtor() {
  ::memset(&changeskillid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&changeskillnum_) -
      reinterpret_cast<char*>(&changeskillid_)) + sizeof(changeskillnum_));
}

LevelUpSkill::~LevelUpSkill() {
  // @@protoc_insertion_point(destructor:actionStatusSyn.LevelUpSkill)
  SharedDtor();
}

void LevelUpSkill::SharedDtor() {
}

void LevelUpSkill::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LevelUpSkill& LevelUpSkill::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LevelUpSkill_actionStatusSyn_2eproto.base);
  return *internal_default_instance();
}


void LevelUpSkill::Clear() {
// @@protoc_insertion_point(message_clear_start:actionStatusSyn.LevelUpSkill)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&changeskillid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&changeskillnum_) -
      reinterpret_cast<char*>(&changeskillid_)) + sizeof(changeskillnum_));
  _internal_metadata_.Clear();
}

const char* LevelUpSkill::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 changeSkillId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          changeskillid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 changeSkillNum = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          changeskillnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LevelUpSkill::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:actionStatusSyn.LevelUpSkill)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 changeSkillId = 1;
  if (this->changeskillid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_changeskillid(), target);
  }

  // int32 changeSkillNum = 2;
  if (this->changeskillnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_changeskillnum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:actionStatusSyn.LevelUpSkill)
  return target;
}

size_t LevelUpSkill::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:actionStatusSyn.LevelUpSkill)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 changeSkillId = 1;
  if (this->changeskillid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_changeskillid());
  }

  // int32 changeSkillNum = 2;
  if (this->changeskillnum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_changeskillnum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelUpSkill::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:actionStatusSyn.LevelUpSkill)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelUpSkill* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LevelUpSkill>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:actionStatusSyn.LevelUpSkill)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:actionStatusSyn.LevelUpSkill)
    MergeFrom(*source);
  }
}

void LevelUpSkill::MergeFrom(const LevelUpSkill& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:actionStatusSyn.LevelUpSkill)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.changeskillid() != 0) {
    _internal_set_changeskillid(from._internal_changeskillid());
  }
  if (from.changeskillnum() != 0) {
    _internal_set_changeskillnum(from._internal_changeskillnum());
  }
}

void LevelUpSkill::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:actionStatusSyn.LevelUpSkill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelUpSkill::CopyFrom(const LevelUpSkill& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:actionStatusSyn.LevelUpSkill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelUpSkill::IsInitialized() const {
  return true;
}

void LevelUpSkill::InternalSwap(LevelUpSkill* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(changeskillid_, other->changeskillid_);
  swap(changeskillnum_, other->changeskillnum_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LevelUpSkill::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SActionStatusSyn::InitAsDefaultInstance() {
}
class SActionStatusSyn::_Internal {
 public:
};

SActionStatusSyn::SActionStatusSyn()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:actionStatusSyn.SActionStatusSyn)
}
SActionStatusSyn::SActionStatusSyn(const SActionStatusSyn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      lvupskill_(from.lvupskill_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&actionid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(actionid_));
  // @@protoc_insertion_point(copy_constructor:actionStatusSyn.SActionStatusSyn)
}

void SActionStatusSyn::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SActionStatusSyn_actionStatusSyn_2eproto.base);
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actionid_) -
      reinterpret_cast<char*>(&code_)) + sizeof(actionid_));
}

SActionStatusSyn::~SActionStatusSyn() {
  // @@protoc_insertion_point(destructor:actionStatusSyn.SActionStatusSyn)
  SharedDtor();
}

void SActionStatusSyn::SharedDtor() {
}

void SActionStatusSyn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SActionStatusSyn& SActionStatusSyn::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SActionStatusSyn_actionStatusSyn_2eproto.base);
  return *internal_default_instance();
}


void SActionStatusSyn::Clear() {
// @@protoc_insertion_point(message_clear_start:actionStatusSyn.SActionStatusSyn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lvupskill_.Clear();
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actionid_) -
      reinterpret_cast<char*>(&code_)) + sizeof(actionid_));
  _internal_metadata_.Clear();
}

const char* SActionStatusSyn::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 actionId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          actionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .actionStatusSyn.LevelUpSkill lvUpSkill = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_lvupskill(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SActionStatusSyn::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:actionStatusSyn.SActionStatusSyn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 actionId = 2;
  if (this->actionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_actionid(), target);
  }

  // repeated .actionStatusSyn.LevelUpSkill lvUpSkill = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_lvupskill_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_lvupskill(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:actionStatusSyn.SActionStatusSyn)
  return target;
}

size_t SActionStatusSyn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:actionStatusSyn.SActionStatusSyn)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .actionStatusSyn.LevelUpSkill lvUpSkill = 3;
  total_size += 1UL * this->_internal_lvupskill_size();
  for (const auto& msg : this->lvupskill_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 actionId = 2;
  if (this->actionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_actionid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SActionStatusSyn::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:actionStatusSyn.SActionStatusSyn)
  GOOGLE_DCHECK_NE(&from, this);
  const SActionStatusSyn* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SActionStatusSyn>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:actionStatusSyn.SActionStatusSyn)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:actionStatusSyn.SActionStatusSyn)
    MergeFrom(*source);
  }
}

void SActionStatusSyn::MergeFrom(const SActionStatusSyn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:actionStatusSyn.SActionStatusSyn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lvupskill_.MergeFrom(from.lvupskill_);
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.actionid() != 0) {
    _internal_set_actionid(from._internal_actionid());
  }
}

void SActionStatusSyn::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:actionStatusSyn.SActionStatusSyn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SActionStatusSyn::CopyFrom(const SActionStatusSyn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:actionStatusSyn.SActionStatusSyn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SActionStatusSyn::IsInitialized() const {
  return true;
}

void SActionStatusSyn::InternalSwap(SActionStatusSyn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  lvupskill_.InternalSwap(&other->lvupskill_);
  swap(code_, other->code_);
  swap(actionid_, other->actionid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SActionStatusSyn::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CCheckActionStatusSyn::InitAsDefaultInstance() {
}
class CCheckActionStatusSyn::_Internal {
 public:
};

CCheckActionStatusSyn::CCheckActionStatusSyn()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:actionStatusSyn.CCheckActionStatusSyn)
}
CCheckActionStatusSyn::CCheckActionStatusSyn(const CCheckActionStatusSyn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:actionStatusSyn.CCheckActionStatusSyn)
}

void CCheckActionStatusSyn::SharedCtor() {
}

CCheckActionStatusSyn::~CCheckActionStatusSyn() {
  // @@protoc_insertion_point(destructor:actionStatusSyn.CCheckActionStatusSyn)
  SharedDtor();
}

void CCheckActionStatusSyn::SharedDtor() {
}

void CCheckActionStatusSyn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CCheckActionStatusSyn& CCheckActionStatusSyn::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CCheckActionStatusSyn_actionStatusSyn_2eproto.base);
  return *internal_default_instance();
}


void CCheckActionStatusSyn::Clear() {
// @@protoc_insertion_point(message_clear_start:actionStatusSyn.CCheckActionStatusSyn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* CCheckActionStatusSyn::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CCheckActionStatusSyn::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:actionStatusSyn.CCheckActionStatusSyn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:actionStatusSyn.CCheckActionStatusSyn)
  return target;
}

size_t CCheckActionStatusSyn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:actionStatusSyn.CCheckActionStatusSyn)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCheckActionStatusSyn::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:actionStatusSyn.CCheckActionStatusSyn)
  GOOGLE_DCHECK_NE(&from, this);
  const CCheckActionStatusSyn* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CCheckActionStatusSyn>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:actionStatusSyn.CCheckActionStatusSyn)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:actionStatusSyn.CCheckActionStatusSyn)
    MergeFrom(*source);
  }
}

void CCheckActionStatusSyn::MergeFrom(const CCheckActionStatusSyn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:actionStatusSyn.CCheckActionStatusSyn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CCheckActionStatusSyn::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:actionStatusSyn.CCheckActionStatusSyn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCheckActionStatusSyn::CopyFrom(const CCheckActionStatusSyn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:actionStatusSyn.CCheckActionStatusSyn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCheckActionStatusSyn::IsInitialized() const {
  return true;
}

void CCheckActionStatusSyn::InternalSwap(CCheckActionStatusSyn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CCheckActionStatusSyn::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SCheckActionStatusSyn::InitAsDefaultInstance() {
}
class SCheckActionStatusSyn::_Internal {
 public:
};

SCheckActionStatusSyn::SCheckActionStatusSyn()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:actionStatusSyn.SCheckActionStatusSyn)
}
SCheckActionStatusSyn::SCheckActionStatusSyn(const SCheckActionStatusSyn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      lvupskill_(from.lvupskill_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&actionid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(actionid_));
  // @@protoc_insertion_point(copy_constructor:actionStatusSyn.SCheckActionStatusSyn)
}

void SCheckActionStatusSyn::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SCheckActionStatusSyn_actionStatusSyn_2eproto.base);
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actionid_) -
      reinterpret_cast<char*>(&code_)) + sizeof(actionid_));
}

SCheckActionStatusSyn::~SCheckActionStatusSyn() {
  // @@protoc_insertion_point(destructor:actionStatusSyn.SCheckActionStatusSyn)
  SharedDtor();
}

void SCheckActionStatusSyn::SharedDtor() {
}

void SCheckActionStatusSyn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SCheckActionStatusSyn& SCheckActionStatusSyn::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SCheckActionStatusSyn_actionStatusSyn_2eproto.base);
  return *internal_default_instance();
}


void SCheckActionStatusSyn::Clear() {
// @@protoc_insertion_point(message_clear_start:actionStatusSyn.SCheckActionStatusSyn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lvupskill_.Clear();
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actionid_) -
      reinterpret_cast<char*>(&code_)) + sizeof(actionid_));
  _internal_metadata_.Clear();
}

const char* SCheckActionStatusSyn::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 actionId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          actionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .actionStatusSyn.LevelUpSkill lvUpSkill = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_lvupskill(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SCheckActionStatusSyn::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:actionStatusSyn.SCheckActionStatusSyn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 actionId = 2;
  if (this->actionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_actionid(), target);
  }

  // repeated .actionStatusSyn.LevelUpSkill lvUpSkill = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_lvupskill_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_lvupskill(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:actionStatusSyn.SCheckActionStatusSyn)
  return target;
}

size_t SCheckActionStatusSyn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:actionStatusSyn.SCheckActionStatusSyn)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .actionStatusSyn.LevelUpSkill lvUpSkill = 3;
  total_size += 1UL * this->_internal_lvupskill_size();
  for (const auto& msg : this->lvupskill_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 actionId = 2;
  if (this->actionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_actionid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SCheckActionStatusSyn::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:actionStatusSyn.SCheckActionStatusSyn)
  GOOGLE_DCHECK_NE(&from, this);
  const SCheckActionStatusSyn* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SCheckActionStatusSyn>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:actionStatusSyn.SCheckActionStatusSyn)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:actionStatusSyn.SCheckActionStatusSyn)
    MergeFrom(*source);
  }
}

void SCheckActionStatusSyn::MergeFrom(const SCheckActionStatusSyn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:actionStatusSyn.SCheckActionStatusSyn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lvupskill_.MergeFrom(from.lvupskill_);
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.actionid() != 0) {
    _internal_set_actionid(from._internal_actionid());
  }
}

void SCheckActionStatusSyn::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:actionStatusSyn.SCheckActionStatusSyn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SCheckActionStatusSyn::CopyFrom(const SCheckActionStatusSyn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:actionStatusSyn.SCheckActionStatusSyn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SCheckActionStatusSyn::IsInitialized() const {
  return true;
}

void SCheckActionStatusSyn::InternalSwap(SCheckActionStatusSyn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  lvupskill_.InternalSwap(&other->lvupskill_);
  swap(code_, other->code_);
  swap(actionid_, other->actionid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SCheckActionStatusSyn::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace actionStatusSyn
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::actionStatusSyn::CActionStatusSyn* Arena::CreateMaybeMessage< ::actionStatusSyn::CActionStatusSyn >(Arena* arena) {
  return Arena::CreateInternal< ::actionStatusSyn::CActionStatusSyn >(arena);
}
template<> PROTOBUF_NOINLINE ::actionStatusSyn::LevelUpSkill* Arena::CreateMaybeMessage< ::actionStatusSyn::LevelUpSkill >(Arena* arena) {
  return Arena::CreateInternal< ::actionStatusSyn::LevelUpSkill >(arena);
}
template<> PROTOBUF_NOINLINE ::actionStatusSyn::SActionStatusSyn* Arena::CreateMaybeMessage< ::actionStatusSyn::SActionStatusSyn >(Arena* arena) {
  return Arena::CreateInternal< ::actionStatusSyn::SActionStatusSyn >(arena);
}
template<> PROTOBUF_NOINLINE ::actionStatusSyn::CCheckActionStatusSyn* Arena::CreateMaybeMessage< ::actionStatusSyn::CCheckActionStatusSyn >(Arena* arena) {
  return Arena::CreateInternal< ::actionStatusSyn::CCheckActionStatusSyn >(arena);
}
template<> PROTOBUF_NOINLINE ::actionStatusSyn::SCheckActionStatusSyn* Arena::CreateMaybeMessage< ::actionStatusSyn::SCheckActionStatusSyn >(Arena* arena) {
  return Arena::CreateInternal< ::actionStatusSyn::SCheckActionStatusSyn >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
