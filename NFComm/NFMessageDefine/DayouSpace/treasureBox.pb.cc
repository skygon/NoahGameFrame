// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: treasureBox.proto

#include "treasureBox.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_treasureBox_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SpaceTreasureBoxInfo_treasureBox_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_treasureBox_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TreasureBoxRewardContent_treasureBox_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vector_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PVector3_vector_2eproto;
namespace treasureBox {
class CDailyTreasureBoxStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CDailyTreasureBoxStatus> _instance;
} _CDailyTreasureBoxStatus_default_instance_;
class SDailyTreasureBoxStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SDailyTreasureBoxStatus> _instance;
} _SDailyTreasureBoxStatus_default_instance_;
class COpenDailyTreasureBoxDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<COpenDailyTreasureBox> _instance;
} _COpenDailyTreasureBox_default_instance_;
class SOpenDailyTreasureBoxDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SOpenDailyTreasureBox> _instance;
} _SOpenDailyTreasureBox_default_instance_;
class CSpaceTreasureBoxListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CSpaceTreasureBoxList> _instance;
} _CSpaceTreasureBoxList_default_instance_;
class SSpaceTreasureBoxListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSpaceTreasureBoxList> _instance;
} _SSpaceTreasureBoxList_default_instance_;
class COpenSpaceTreasureBoxDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<COpenSpaceTreasureBox> _instance;
} _COpenSpaceTreasureBox_default_instance_;
class SOpenSpaceTreasureBoxDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SOpenSpaceTreasureBox> _instance;
} _SOpenSpaceTreasureBox_default_instance_;
class TreasureBoxRewardContentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TreasureBoxRewardContent> _instance;
} _TreasureBoxRewardContent_default_instance_;
class SpaceTreasureBoxInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SpaceTreasureBoxInfo> _instance;
} _SpaceTreasureBoxInfo_default_instance_;
class SSpaceTreasureBoxRefreshNoticeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSpaceTreasureBoxRefreshNotice> _instance;
} _SSpaceTreasureBoxRefreshNotice_default_instance_;
}  // namespace treasureBox
static void InitDefaultsscc_info_CDailyTreasureBoxStatus_treasureBox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::treasureBox::_CDailyTreasureBoxStatus_default_instance_;
    new (ptr) ::treasureBox::CDailyTreasureBoxStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::treasureBox::CDailyTreasureBoxStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CDailyTreasureBoxStatus_treasureBox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CDailyTreasureBoxStatus_treasureBox_2eproto}, {}};

static void InitDefaultsscc_info_COpenDailyTreasureBox_treasureBox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::treasureBox::_COpenDailyTreasureBox_default_instance_;
    new (ptr) ::treasureBox::COpenDailyTreasureBox();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::treasureBox::COpenDailyTreasureBox::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_COpenDailyTreasureBox_treasureBox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_COpenDailyTreasureBox_treasureBox_2eproto}, {}};

static void InitDefaultsscc_info_COpenSpaceTreasureBox_treasureBox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::treasureBox::_COpenSpaceTreasureBox_default_instance_;
    new (ptr) ::treasureBox::COpenSpaceTreasureBox();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::treasureBox::COpenSpaceTreasureBox::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_COpenSpaceTreasureBox_treasureBox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_COpenSpaceTreasureBox_treasureBox_2eproto}, {
      &scc_info_PVector3_vector_2eproto.base,}};

static void InitDefaultsscc_info_CSpaceTreasureBoxList_treasureBox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::treasureBox::_CSpaceTreasureBoxList_default_instance_;
    new (ptr) ::treasureBox::CSpaceTreasureBoxList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::treasureBox::CSpaceTreasureBoxList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CSpaceTreasureBoxList_treasureBox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CSpaceTreasureBoxList_treasureBox_2eproto}, {}};

static void InitDefaultsscc_info_SDailyTreasureBoxStatus_treasureBox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::treasureBox::_SDailyTreasureBoxStatus_default_instance_;
    new (ptr) ::treasureBox::SDailyTreasureBoxStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::treasureBox::SDailyTreasureBoxStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SDailyTreasureBoxStatus_treasureBox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SDailyTreasureBoxStatus_treasureBox_2eproto}, {
      &scc_info_PVector3_vector_2eproto.base,}};

static void InitDefaultsscc_info_SOpenDailyTreasureBox_treasureBox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::treasureBox::_SOpenDailyTreasureBox_default_instance_;
    new (ptr) ::treasureBox::SOpenDailyTreasureBox();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::treasureBox::SOpenDailyTreasureBox::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SOpenDailyTreasureBox_treasureBox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SOpenDailyTreasureBox_treasureBox_2eproto}, {
      &scc_info_TreasureBoxRewardContent_treasureBox_2eproto.base,}};

static void InitDefaultsscc_info_SOpenSpaceTreasureBox_treasureBox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::treasureBox::_SOpenSpaceTreasureBox_default_instance_;
    new (ptr) ::treasureBox::SOpenSpaceTreasureBox();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::treasureBox::SOpenSpaceTreasureBox::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SOpenSpaceTreasureBox_treasureBox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SOpenSpaceTreasureBox_treasureBox_2eproto}, {
      &scc_info_TreasureBoxRewardContent_treasureBox_2eproto.base,
      &scc_info_PVector3_vector_2eproto.base,}};

static void InitDefaultsscc_info_SSpaceTreasureBoxList_treasureBox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::treasureBox::_SSpaceTreasureBoxList_default_instance_;
    new (ptr) ::treasureBox::SSpaceTreasureBoxList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::treasureBox::SSpaceTreasureBoxList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSpaceTreasureBoxList_treasureBox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSpaceTreasureBoxList_treasureBox_2eproto}, {
      &scc_info_SpaceTreasureBoxInfo_treasureBox_2eproto.base,}};

static void InitDefaultsscc_info_SSpaceTreasureBoxRefreshNotice_treasureBox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::treasureBox::_SSpaceTreasureBoxRefreshNotice_default_instance_;
    new (ptr) ::treasureBox::SSpaceTreasureBoxRefreshNotice();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::treasureBox::SSpaceTreasureBoxRefreshNotice::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSpaceTreasureBoxRefreshNotice_treasureBox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSpaceTreasureBoxRefreshNotice_treasureBox_2eproto}, {
      &scc_info_PVector3_vector_2eproto.base,}};

static void InitDefaultsscc_info_SpaceTreasureBoxInfo_treasureBox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::treasureBox::_SpaceTreasureBoxInfo_default_instance_;
    new (ptr) ::treasureBox::SpaceTreasureBoxInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::treasureBox::SpaceTreasureBoxInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SpaceTreasureBoxInfo_treasureBox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SpaceTreasureBoxInfo_treasureBox_2eproto}, {
      &scc_info_PVector3_vector_2eproto.base,}};

static void InitDefaultsscc_info_TreasureBoxRewardContent_treasureBox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::treasureBox::_TreasureBoxRewardContent_default_instance_;
    new (ptr) ::treasureBox::TreasureBoxRewardContent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::treasureBox::TreasureBoxRewardContent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TreasureBoxRewardContent_treasureBox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TreasureBoxRewardContent_treasureBox_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_treasureBox_2eproto[11];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_treasureBox_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_treasureBox_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_treasureBox_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::treasureBox::CDailyTreasureBoxStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::treasureBox::SDailyTreasureBoxStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::treasureBox::SDailyTreasureBoxStatus, treasureboxtype_),
  PROTOBUF_FIELD_OFFSET(::treasureBox::SDailyTreasureBoxStatus, isopened_),
  PROTOBUF_FIELD_OFFSET(::treasureBox::SDailyTreasureBoxStatus, position_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::treasureBox::COpenDailyTreasureBox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::treasureBox::COpenDailyTreasureBox, treasureboxtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::treasureBox::SOpenDailyTreasureBox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::treasureBox::SOpenDailyTreasureBox, list_),
  PROTOBUF_FIELD_OFFSET(::treasureBox::SOpenDailyTreasureBox, state_),
  PROTOBUF_FIELD_OFFSET(::treasureBox::SOpenDailyTreasureBox, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::treasureBox::CSpaceTreasureBoxList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::treasureBox::SSpaceTreasureBoxList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::treasureBox::SSpaceTreasureBoxList, list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::treasureBox::COpenSpaceTreasureBox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::treasureBox::COpenSpaceTreasureBox, treasureboxtype_),
  PROTOBUF_FIELD_OFFSET(::treasureBox::COpenSpaceTreasureBox, position_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::treasureBox::SOpenSpaceTreasureBox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::treasureBox::SOpenSpaceTreasureBox, openeruid_),
  PROTOBUF_FIELD_OFFSET(::treasureBox::SOpenSpaceTreasureBox, list_),
  PROTOBUF_FIELD_OFFSET(::treasureBox::SOpenSpaceTreasureBox, state_),
  PROTOBUF_FIELD_OFFSET(::treasureBox::SOpenSpaceTreasureBox, msg_),
  PROTOBUF_FIELD_OFFSET(::treasureBox::SOpenSpaceTreasureBox, position_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::treasureBox::TreasureBoxRewardContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::treasureBox::TreasureBoxRewardContent, goodid_),
  PROTOBUF_FIELD_OFFSET(::treasureBox::TreasureBoxRewardContent, goodname_),
  PROTOBUF_FIELD_OFFSET(::treasureBox::TreasureBoxRewardContent, num_),
  PROTOBUF_FIELD_OFFSET(::treasureBox::TreasureBoxRewardContent, icon_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::treasureBox::SpaceTreasureBoxInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::treasureBox::SpaceTreasureBoxInfo, treasureboxtype_),
  PROTOBUF_FIELD_OFFSET(::treasureBox::SpaceTreasureBoxInfo, position_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::treasureBox::SSpaceTreasureBoxRefreshNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::treasureBox::SSpaceTreasureBoxRefreshNotice, treasureboxtype_),
  PROTOBUF_FIELD_OFFSET(::treasureBox::SSpaceTreasureBoxRefreshNotice, position_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::treasureBox::CDailyTreasureBoxStatus)},
  { 5, -1, sizeof(::treasureBox::SDailyTreasureBoxStatus)},
  { 13, -1, sizeof(::treasureBox::COpenDailyTreasureBox)},
  { 19, -1, sizeof(::treasureBox::SOpenDailyTreasureBox)},
  { 27, -1, sizeof(::treasureBox::CSpaceTreasureBoxList)},
  { 32, -1, sizeof(::treasureBox::SSpaceTreasureBoxList)},
  { 38, -1, sizeof(::treasureBox::COpenSpaceTreasureBox)},
  { 45, -1, sizeof(::treasureBox::SOpenSpaceTreasureBox)},
  { 55, -1, sizeof(::treasureBox::TreasureBoxRewardContent)},
  { 64, -1, sizeof(::treasureBox::SpaceTreasureBoxInfo)},
  { 71, -1, sizeof(::treasureBox::SSpaceTreasureBoxRefreshNotice)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::treasureBox::_CDailyTreasureBoxStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::treasureBox::_SDailyTreasureBoxStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::treasureBox::_COpenDailyTreasureBox_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::treasureBox::_SOpenDailyTreasureBox_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::treasureBox::_CSpaceTreasureBoxList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::treasureBox::_SSpaceTreasureBoxList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::treasureBox::_COpenSpaceTreasureBox_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::treasureBox::_SOpenSpaceTreasureBox_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::treasureBox::_TreasureBoxRewardContent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::treasureBox::_SpaceTreasureBoxInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::treasureBox::_SSpaceTreasureBoxRefreshNotice_default_instance_),
};

const char descriptor_table_protodef_treasureBox_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021treasureBox.proto\022\013treasureBox\032\014vector"
  ".proto\"\031\n\027CDailyTreasureBoxStatus\"h\n\027SDa"
  "ilyTreasureBoxStatus\022\027\n\017treasureBoxType\030"
  "\001 \001(\005\022\020\n\010isOpened\030\002 \001(\005\022\"\n\010position\030\003 \001("
  "\0132\020.vector.PVector3\"0\n\025COpenDailyTreasur"
  "eBox\022\027\n\017treasureBoxType\030\001 \001(\005\"h\n\025SOpenDa"
  "ilyTreasureBox\0223\n\004list\030\001 \003(\0132%.treasureB"
  "ox.TreasureBoxRewardContent\022\r\n\005state\030\002 \001"
  "(\005\022\013\n\003msg\030\003 \001(\t\"\027\n\025CSpaceTreasureBoxList"
  "\"H\n\025SSpaceTreasureBoxList\022/\n\004list\030\001 \003(\0132"
  "!.treasureBox.SpaceTreasureBoxInfo\"T\n\025CO"
  "penSpaceTreasureBox\022\027\n\017treasureBoxType\030\001"
  " \001(\005\022\"\n\010position\030\002 \001(\0132\020.vector.PVector3"
  "\"\237\001\n\025SOpenSpaceTreasureBox\022\021\n\tOpenerUid\030"
  "\001 \001(\005\0223\n\004list\030\002 \003(\0132%.treasureBox.Treasu"
  "reBoxRewardContent\022\r\n\005state\030\003 \001(\005\022\013\n\003msg"
  "\030\004 \001(\t\022\"\n\010position\030\005 \001(\0132\020.vector.PVecto"
  "r3\"W\n\030TreasureBoxRewardContent\022\016\n\006goodId"
  "\030\001 \001(\005\022\020\n\010goodName\030\002 \001(\t\022\013\n\003num\030\003 \001(\005\022\014\n"
  "\004icon\030\004 \001(\t\"S\n\024SpaceTreasureBoxInfo\022\027\n\017t"
  "reasureBoxType\030\001 \001(\005\022\"\n\010position\030\003 \001(\0132\020"
  ".vector.PVector3\"]\n\036SSpaceTreasureBoxRef"
  "reshNotice\022\027\n\017treasureBoxType\030\001 \001(\005\022\"\n\010p"
  "osition\030\003 \001(\0132\020.vector.PVector3B+\n\030com.d"
  "ayou.space.protobufB\013TreasureBoxZ\002./b\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_treasureBox_2eproto_deps[1] = {
  &::descriptor_table_vector_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_treasureBox_2eproto_sccs[11] = {
  &scc_info_CDailyTreasureBoxStatus_treasureBox_2eproto.base,
  &scc_info_COpenDailyTreasureBox_treasureBox_2eproto.base,
  &scc_info_COpenSpaceTreasureBox_treasureBox_2eproto.base,
  &scc_info_CSpaceTreasureBoxList_treasureBox_2eproto.base,
  &scc_info_SDailyTreasureBoxStatus_treasureBox_2eproto.base,
  &scc_info_SOpenDailyTreasureBox_treasureBox_2eproto.base,
  &scc_info_SOpenSpaceTreasureBox_treasureBox_2eproto.base,
  &scc_info_SSpaceTreasureBoxList_treasureBox_2eproto.base,
  &scc_info_SSpaceTreasureBoxRefreshNotice_treasureBox_2eproto.base,
  &scc_info_SpaceTreasureBoxInfo_treasureBox_2eproto.base,
  &scc_info_TreasureBoxRewardContent_treasureBox_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_treasureBox_2eproto_once;
static bool descriptor_table_treasureBox_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_treasureBox_2eproto = {
  &descriptor_table_treasureBox_2eproto_initialized, descriptor_table_protodef_treasureBox_2eproto, "treasureBox.proto", 1004,
  &descriptor_table_treasureBox_2eproto_once, descriptor_table_treasureBox_2eproto_sccs, descriptor_table_treasureBox_2eproto_deps, 11, 1,
  schemas, file_default_instances, TableStruct_treasureBox_2eproto::offsets,
  file_level_metadata_treasureBox_2eproto, 11, file_level_enum_descriptors_treasureBox_2eproto, file_level_service_descriptors_treasureBox_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_treasureBox_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_treasureBox_2eproto), true);
namespace treasureBox {

// ===================================================================

void CDailyTreasureBoxStatus::InitAsDefaultInstance() {
}
class CDailyTreasureBoxStatus::_Internal {
 public:
};

CDailyTreasureBoxStatus::CDailyTreasureBoxStatus()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:treasureBox.CDailyTreasureBoxStatus)
}
CDailyTreasureBoxStatus::CDailyTreasureBoxStatus(const CDailyTreasureBoxStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:treasureBox.CDailyTreasureBoxStatus)
}

void CDailyTreasureBoxStatus::SharedCtor() {
}

CDailyTreasureBoxStatus::~CDailyTreasureBoxStatus() {
  // @@protoc_insertion_point(destructor:treasureBox.CDailyTreasureBoxStatus)
  SharedDtor();
}

void CDailyTreasureBoxStatus::SharedDtor() {
}

void CDailyTreasureBoxStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CDailyTreasureBoxStatus& CDailyTreasureBoxStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CDailyTreasureBoxStatus_treasureBox_2eproto.base);
  return *internal_default_instance();
}


void CDailyTreasureBoxStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:treasureBox.CDailyTreasureBoxStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* CDailyTreasureBoxStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CDailyTreasureBoxStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:treasureBox.CDailyTreasureBoxStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:treasureBox.CDailyTreasureBoxStatus)
  return target;
}

size_t CDailyTreasureBoxStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:treasureBox.CDailyTreasureBoxStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDailyTreasureBoxStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:treasureBox.CDailyTreasureBoxStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CDailyTreasureBoxStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CDailyTreasureBoxStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:treasureBox.CDailyTreasureBoxStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:treasureBox.CDailyTreasureBoxStatus)
    MergeFrom(*source);
  }
}

void CDailyTreasureBoxStatus::MergeFrom(const CDailyTreasureBoxStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:treasureBox.CDailyTreasureBoxStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CDailyTreasureBoxStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:treasureBox.CDailyTreasureBoxStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDailyTreasureBoxStatus::CopyFrom(const CDailyTreasureBoxStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:treasureBox.CDailyTreasureBoxStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDailyTreasureBoxStatus::IsInitialized() const {
  return true;
}

void CDailyTreasureBoxStatus::InternalSwap(CDailyTreasureBoxStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CDailyTreasureBoxStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SDailyTreasureBoxStatus::InitAsDefaultInstance() {
  ::treasureBox::_SDailyTreasureBoxStatus_default_instance_._instance.get_mutable()->position_ = const_cast< ::vector::PVector3*>(
      ::vector::PVector3::internal_default_instance());
}
class SDailyTreasureBoxStatus::_Internal {
 public:
  static const ::vector::PVector3& position(const SDailyTreasureBoxStatus* msg);
};

const ::vector::PVector3&
SDailyTreasureBoxStatus::_Internal::position(const SDailyTreasureBoxStatus* msg) {
  return *msg->position_;
}
void SDailyTreasureBoxStatus::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
SDailyTreasureBoxStatus::SDailyTreasureBoxStatus()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:treasureBox.SDailyTreasureBoxStatus)
}
SDailyTreasureBoxStatus::SDailyTreasureBoxStatus(const SDailyTreasureBoxStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_position()) {
    position_ = new ::vector::PVector3(*from.position_);
  } else {
    position_ = nullptr;
  }
  ::memcpy(&treasureboxtype_, &from.treasureboxtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&isopened_) -
    reinterpret_cast<char*>(&treasureboxtype_)) + sizeof(isopened_));
  // @@protoc_insertion_point(copy_constructor:treasureBox.SDailyTreasureBoxStatus)
}

void SDailyTreasureBoxStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SDailyTreasureBoxStatus_treasureBox_2eproto.base);
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isopened_) -
      reinterpret_cast<char*>(&position_)) + sizeof(isopened_));
}

SDailyTreasureBoxStatus::~SDailyTreasureBoxStatus() {
  // @@protoc_insertion_point(destructor:treasureBox.SDailyTreasureBoxStatus)
  SharedDtor();
}

void SDailyTreasureBoxStatus::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void SDailyTreasureBoxStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SDailyTreasureBoxStatus& SDailyTreasureBoxStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SDailyTreasureBoxStatus_treasureBox_2eproto.base);
  return *internal_default_instance();
}


void SDailyTreasureBoxStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:treasureBox.SDailyTreasureBoxStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  ::memset(&treasureboxtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isopened_) -
      reinterpret_cast<char*>(&treasureboxtype_)) + sizeof(isopened_));
  _internal_metadata_.Clear();
}

const char* SDailyTreasureBoxStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 treasureBoxType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          treasureboxtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 isOpened = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          isopened_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vector.PVector3 position = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SDailyTreasureBoxStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:treasureBox.SDailyTreasureBoxStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 treasureBoxType = 1;
  if (this->treasureboxtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_treasureboxtype(), target);
  }

  // int32 isOpened = 2;
  if (this->isopened() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_isopened(), target);
  }

  // .vector.PVector3 position = 3;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::position(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:treasureBox.SDailyTreasureBoxStatus)
  return target;
}

size_t SDailyTreasureBoxStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:treasureBox.SDailyTreasureBoxStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .vector.PVector3 position = 3;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int32 treasureBoxType = 1;
  if (this->treasureboxtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_treasureboxtype());
  }

  // int32 isOpened = 2;
  if (this->isopened() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_isopened());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SDailyTreasureBoxStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:treasureBox.SDailyTreasureBoxStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const SDailyTreasureBoxStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SDailyTreasureBoxStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:treasureBox.SDailyTreasureBoxStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:treasureBox.SDailyTreasureBoxStatus)
    MergeFrom(*source);
  }
}

void SDailyTreasureBoxStatus::MergeFrom(const SDailyTreasureBoxStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:treasureBox.SDailyTreasureBoxStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    _internal_mutable_position()->::vector::PVector3::MergeFrom(from._internal_position());
  }
  if (from.treasureboxtype() != 0) {
    _internal_set_treasureboxtype(from._internal_treasureboxtype());
  }
  if (from.isopened() != 0) {
    _internal_set_isopened(from._internal_isopened());
  }
}

void SDailyTreasureBoxStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:treasureBox.SDailyTreasureBoxStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SDailyTreasureBoxStatus::CopyFrom(const SDailyTreasureBoxStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:treasureBox.SDailyTreasureBoxStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SDailyTreasureBoxStatus::IsInitialized() const {
  return true;
}

void SDailyTreasureBoxStatus::InternalSwap(SDailyTreasureBoxStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(position_, other->position_);
  swap(treasureboxtype_, other->treasureboxtype_);
  swap(isopened_, other->isopened_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SDailyTreasureBoxStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void COpenDailyTreasureBox::InitAsDefaultInstance() {
}
class COpenDailyTreasureBox::_Internal {
 public:
};

COpenDailyTreasureBox::COpenDailyTreasureBox()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:treasureBox.COpenDailyTreasureBox)
}
COpenDailyTreasureBox::COpenDailyTreasureBox(const COpenDailyTreasureBox& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  treasureboxtype_ = from.treasureboxtype_;
  // @@protoc_insertion_point(copy_constructor:treasureBox.COpenDailyTreasureBox)
}

void COpenDailyTreasureBox::SharedCtor() {
  treasureboxtype_ = 0;
}

COpenDailyTreasureBox::~COpenDailyTreasureBox() {
  // @@protoc_insertion_point(destructor:treasureBox.COpenDailyTreasureBox)
  SharedDtor();
}

void COpenDailyTreasureBox::SharedDtor() {
}

void COpenDailyTreasureBox::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const COpenDailyTreasureBox& COpenDailyTreasureBox::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_COpenDailyTreasureBox_treasureBox_2eproto.base);
  return *internal_default_instance();
}


void COpenDailyTreasureBox::Clear() {
// @@protoc_insertion_point(message_clear_start:treasureBox.COpenDailyTreasureBox)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  treasureboxtype_ = 0;
  _internal_metadata_.Clear();
}

const char* COpenDailyTreasureBox::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 treasureBoxType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          treasureboxtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* COpenDailyTreasureBox::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:treasureBox.COpenDailyTreasureBox)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 treasureBoxType = 1;
  if (this->treasureboxtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_treasureboxtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:treasureBox.COpenDailyTreasureBox)
  return target;
}

size_t COpenDailyTreasureBox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:treasureBox.COpenDailyTreasureBox)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 treasureBoxType = 1;
  if (this->treasureboxtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_treasureboxtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void COpenDailyTreasureBox::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:treasureBox.COpenDailyTreasureBox)
  GOOGLE_DCHECK_NE(&from, this);
  const COpenDailyTreasureBox* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<COpenDailyTreasureBox>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:treasureBox.COpenDailyTreasureBox)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:treasureBox.COpenDailyTreasureBox)
    MergeFrom(*source);
  }
}

void COpenDailyTreasureBox::MergeFrom(const COpenDailyTreasureBox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:treasureBox.COpenDailyTreasureBox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.treasureboxtype() != 0) {
    _internal_set_treasureboxtype(from._internal_treasureboxtype());
  }
}

void COpenDailyTreasureBox::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:treasureBox.COpenDailyTreasureBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void COpenDailyTreasureBox::CopyFrom(const COpenDailyTreasureBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:treasureBox.COpenDailyTreasureBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COpenDailyTreasureBox::IsInitialized() const {
  return true;
}

void COpenDailyTreasureBox::InternalSwap(COpenDailyTreasureBox* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(treasureboxtype_, other->treasureboxtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata COpenDailyTreasureBox::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SOpenDailyTreasureBox::InitAsDefaultInstance() {
}
class SOpenDailyTreasureBox::_Internal {
 public:
};

SOpenDailyTreasureBox::SOpenDailyTreasureBox()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:treasureBox.SOpenDailyTreasureBox)
}
SOpenDailyTreasureBox::SOpenDailyTreasureBox(const SOpenDailyTreasureBox& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:treasureBox.SOpenDailyTreasureBox)
}

void SOpenDailyTreasureBox::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SOpenDailyTreasureBox_treasureBox_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
}

SOpenDailyTreasureBox::~SOpenDailyTreasureBox() {
  // @@protoc_insertion_point(destructor:treasureBox.SOpenDailyTreasureBox)
  SharedDtor();
}

void SOpenDailyTreasureBox::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SOpenDailyTreasureBox::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SOpenDailyTreasureBox& SOpenDailyTreasureBox::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SOpenDailyTreasureBox_treasureBox_2eproto.base);
  return *internal_default_instance();
}


void SOpenDailyTreasureBox::Clear() {
// @@protoc_insertion_point(message_clear_start:treasureBox.SOpenDailyTreasureBox)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  _internal_metadata_.Clear();
}

const char* SOpenDailyTreasureBox::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .treasureBox.TreasureBoxRewardContent list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "treasureBox.SOpenDailyTreasureBox.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SOpenDailyTreasureBox::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:treasureBox.SOpenDailyTreasureBox)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .treasureBox.TreasureBoxRewardContent list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_list(i), target, stream);
  }

  // int32 state = 2;
  if (this->state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_state(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "treasureBox.SOpenDailyTreasureBox.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:treasureBox.SOpenDailyTreasureBox)
  return target;
}

size_t SOpenDailyTreasureBox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:treasureBox.SOpenDailyTreasureBox)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .treasureBox.TreasureBoxRewardContent list = 1;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SOpenDailyTreasureBox::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:treasureBox.SOpenDailyTreasureBox)
  GOOGLE_DCHECK_NE(&from, this);
  const SOpenDailyTreasureBox* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SOpenDailyTreasureBox>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:treasureBox.SOpenDailyTreasureBox)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:treasureBox.SOpenDailyTreasureBox)
    MergeFrom(*source);
  }
}

void SOpenDailyTreasureBox::MergeFrom(const SOpenDailyTreasureBox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:treasureBox.SOpenDailyTreasureBox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.state() != 0) {
    _internal_set_state(from._internal_state());
  }
}

void SOpenDailyTreasureBox::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:treasureBox.SOpenDailyTreasureBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SOpenDailyTreasureBox::CopyFrom(const SOpenDailyTreasureBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:treasureBox.SOpenDailyTreasureBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SOpenDailyTreasureBox::IsInitialized() const {
  return true;
}

void SOpenDailyTreasureBox::InternalSwap(SOpenDailyTreasureBox* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  list_.InternalSwap(&other->list_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_, other->state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SOpenDailyTreasureBox::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CSpaceTreasureBoxList::InitAsDefaultInstance() {
}
class CSpaceTreasureBoxList::_Internal {
 public:
};

CSpaceTreasureBoxList::CSpaceTreasureBoxList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:treasureBox.CSpaceTreasureBoxList)
}
CSpaceTreasureBoxList::CSpaceTreasureBoxList(const CSpaceTreasureBoxList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:treasureBox.CSpaceTreasureBoxList)
}

void CSpaceTreasureBoxList::SharedCtor() {
}

CSpaceTreasureBoxList::~CSpaceTreasureBoxList() {
  // @@protoc_insertion_point(destructor:treasureBox.CSpaceTreasureBoxList)
  SharedDtor();
}

void CSpaceTreasureBoxList::SharedDtor() {
}

void CSpaceTreasureBoxList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CSpaceTreasureBoxList& CSpaceTreasureBoxList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CSpaceTreasureBoxList_treasureBox_2eproto.base);
  return *internal_default_instance();
}


void CSpaceTreasureBoxList::Clear() {
// @@protoc_insertion_point(message_clear_start:treasureBox.CSpaceTreasureBoxList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* CSpaceTreasureBoxList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CSpaceTreasureBoxList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:treasureBox.CSpaceTreasureBoxList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:treasureBox.CSpaceTreasureBoxList)
  return target;
}

size_t CSpaceTreasureBoxList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:treasureBox.CSpaceTreasureBoxList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSpaceTreasureBoxList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:treasureBox.CSpaceTreasureBoxList)
  GOOGLE_DCHECK_NE(&from, this);
  const CSpaceTreasureBoxList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CSpaceTreasureBoxList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:treasureBox.CSpaceTreasureBoxList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:treasureBox.CSpaceTreasureBoxList)
    MergeFrom(*source);
  }
}

void CSpaceTreasureBoxList::MergeFrom(const CSpaceTreasureBoxList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:treasureBox.CSpaceTreasureBoxList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CSpaceTreasureBoxList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:treasureBox.CSpaceTreasureBoxList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSpaceTreasureBoxList::CopyFrom(const CSpaceTreasureBoxList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:treasureBox.CSpaceTreasureBoxList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSpaceTreasureBoxList::IsInitialized() const {
  return true;
}

void CSpaceTreasureBoxList::InternalSwap(CSpaceTreasureBoxList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CSpaceTreasureBoxList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SSpaceTreasureBoxList::InitAsDefaultInstance() {
}
class SSpaceTreasureBoxList::_Internal {
 public:
};

SSpaceTreasureBoxList::SSpaceTreasureBoxList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:treasureBox.SSpaceTreasureBoxList)
}
SSpaceTreasureBoxList::SSpaceTreasureBoxList(const SSpaceTreasureBoxList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:treasureBox.SSpaceTreasureBoxList)
}

void SSpaceTreasureBoxList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSpaceTreasureBoxList_treasureBox_2eproto.base);
}

SSpaceTreasureBoxList::~SSpaceTreasureBoxList() {
  // @@protoc_insertion_point(destructor:treasureBox.SSpaceTreasureBoxList)
  SharedDtor();
}

void SSpaceTreasureBoxList::SharedDtor() {
}

void SSpaceTreasureBoxList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSpaceTreasureBoxList& SSpaceTreasureBoxList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSpaceTreasureBoxList_treasureBox_2eproto.base);
  return *internal_default_instance();
}


void SSpaceTreasureBoxList::Clear() {
// @@protoc_insertion_point(message_clear_start:treasureBox.SSpaceTreasureBoxList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _internal_metadata_.Clear();
}

const char* SSpaceTreasureBoxList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .treasureBox.SpaceTreasureBoxInfo list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSpaceTreasureBoxList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:treasureBox.SSpaceTreasureBoxList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .treasureBox.SpaceTreasureBoxInfo list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:treasureBox.SSpaceTreasureBoxList)
  return target;
}

size_t SSpaceTreasureBoxList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:treasureBox.SSpaceTreasureBoxList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .treasureBox.SpaceTreasureBoxInfo list = 1;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSpaceTreasureBoxList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:treasureBox.SSpaceTreasureBoxList)
  GOOGLE_DCHECK_NE(&from, this);
  const SSpaceTreasureBoxList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSpaceTreasureBoxList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:treasureBox.SSpaceTreasureBoxList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:treasureBox.SSpaceTreasureBoxList)
    MergeFrom(*source);
  }
}

void SSpaceTreasureBoxList::MergeFrom(const SSpaceTreasureBoxList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:treasureBox.SSpaceTreasureBoxList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void SSpaceTreasureBoxList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:treasureBox.SSpaceTreasureBoxList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSpaceTreasureBoxList::CopyFrom(const SSpaceTreasureBoxList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:treasureBox.SSpaceTreasureBoxList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSpaceTreasureBoxList::IsInitialized() const {
  return true;
}

void SSpaceTreasureBoxList::InternalSwap(SSpaceTreasureBoxList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  list_.InternalSwap(&other->list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SSpaceTreasureBoxList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void COpenSpaceTreasureBox::InitAsDefaultInstance() {
  ::treasureBox::_COpenSpaceTreasureBox_default_instance_._instance.get_mutable()->position_ = const_cast< ::vector::PVector3*>(
      ::vector::PVector3::internal_default_instance());
}
class COpenSpaceTreasureBox::_Internal {
 public:
  static const ::vector::PVector3& position(const COpenSpaceTreasureBox* msg);
};

const ::vector::PVector3&
COpenSpaceTreasureBox::_Internal::position(const COpenSpaceTreasureBox* msg) {
  return *msg->position_;
}
void COpenSpaceTreasureBox::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
COpenSpaceTreasureBox::COpenSpaceTreasureBox()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:treasureBox.COpenSpaceTreasureBox)
}
COpenSpaceTreasureBox::COpenSpaceTreasureBox(const COpenSpaceTreasureBox& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_position()) {
    position_ = new ::vector::PVector3(*from.position_);
  } else {
    position_ = nullptr;
  }
  treasureboxtype_ = from.treasureboxtype_;
  // @@protoc_insertion_point(copy_constructor:treasureBox.COpenSpaceTreasureBox)
}

void COpenSpaceTreasureBox::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_COpenSpaceTreasureBox_treasureBox_2eproto.base);
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&treasureboxtype_) -
      reinterpret_cast<char*>(&position_)) + sizeof(treasureboxtype_));
}

COpenSpaceTreasureBox::~COpenSpaceTreasureBox() {
  // @@protoc_insertion_point(destructor:treasureBox.COpenSpaceTreasureBox)
  SharedDtor();
}

void COpenSpaceTreasureBox::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void COpenSpaceTreasureBox::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const COpenSpaceTreasureBox& COpenSpaceTreasureBox::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_COpenSpaceTreasureBox_treasureBox_2eproto.base);
  return *internal_default_instance();
}


void COpenSpaceTreasureBox::Clear() {
// @@protoc_insertion_point(message_clear_start:treasureBox.COpenSpaceTreasureBox)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  treasureboxtype_ = 0;
  _internal_metadata_.Clear();
}

const char* COpenSpaceTreasureBox::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 treasureBoxType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          treasureboxtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vector.PVector3 position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* COpenSpaceTreasureBox::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:treasureBox.COpenSpaceTreasureBox)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 treasureBoxType = 1;
  if (this->treasureboxtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_treasureboxtype(), target);
  }

  // .vector.PVector3 position = 2;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::position(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:treasureBox.COpenSpaceTreasureBox)
  return target;
}

size_t COpenSpaceTreasureBox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:treasureBox.COpenSpaceTreasureBox)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .vector.PVector3 position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int32 treasureBoxType = 1;
  if (this->treasureboxtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_treasureboxtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void COpenSpaceTreasureBox::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:treasureBox.COpenSpaceTreasureBox)
  GOOGLE_DCHECK_NE(&from, this);
  const COpenSpaceTreasureBox* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<COpenSpaceTreasureBox>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:treasureBox.COpenSpaceTreasureBox)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:treasureBox.COpenSpaceTreasureBox)
    MergeFrom(*source);
  }
}

void COpenSpaceTreasureBox::MergeFrom(const COpenSpaceTreasureBox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:treasureBox.COpenSpaceTreasureBox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    _internal_mutable_position()->::vector::PVector3::MergeFrom(from._internal_position());
  }
  if (from.treasureboxtype() != 0) {
    _internal_set_treasureboxtype(from._internal_treasureboxtype());
  }
}

void COpenSpaceTreasureBox::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:treasureBox.COpenSpaceTreasureBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void COpenSpaceTreasureBox::CopyFrom(const COpenSpaceTreasureBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:treasureBox.COpenSpaceTreasureBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COpenSpaceTreasureBox::IsInitialized() const {
  return true;
}

void COpenSpaceTreasureBox::InternalSwap(COpenSpaceTreasureBox* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(position_, other->position_);
  swap(treasureboxtype_, other->treasureboxtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata COpenSpaceTreasureBox::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SOpenSpaceTreasureBox::InitAsDefaultInstance() {
  ::treasureBox::_SOpenSpaceTreasureBox_default_instance_._instance.get_mutable()->position_ = const_cast< ::vector::PVector3*>(
      ::vector::PVector3::internal_default_instance());
}
class SOpenSpaceTreasureBox::_Internal {
 public:
  static const ::vector::PVector3& position(const SOpenSpaceTreasureBox* msg);
};

const ::vector::PVector3&
SOpenSpaceTreasureBox::_Internal::position(const SOpenSpaceTreasureBox* msg) {
  return *msg->position_;
}
void SOpenSpaceTreasureBox::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
SOpenSpaceTreasureBox::SOpenSpaceTreasureBox()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:treasureBox.SOpenSpaceTreasureBox)
}
SOpenSpaceTreasureBox::SOpenSpaceTreasureBox(const SOpenSpaceTreasureBox& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from._internal_has_position()) {
    position_ = new ::vector::PVector3(*from.position_);
  } else {
    position_ = nullptr;
  }
  ::memcpy(&openeruid_, &from.openeruid_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&openeruid_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:treasureBox.SOpenSpaceTreasureBox)
}

void SOpenSpaceTreasureBox::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SOpenSpaceTreasureBox_treasureBox_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&position_)) + sizeof(state_));
}

SOpenSpaceTreasureBox::~SOpenSpaceTreasureBox() {
  // @@protoc_insertion_point(destructor:treasureBox.SOpenSpaceTreasureBox)
  SharedDtor();
}

void SOpenSpaceTreasureBox::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
}

void SOpenSpaceTreasureBox::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SOpenSpaceTreasureBox& SOpenSpaceTreasureBox::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SOpenSpaceTreasureBox_treasureBox_2eproto.base);
  return *internal_default_instance();
}


void SOpenSpaceTreasureBox::Clear() {
// @@protoc_insertion_point(message_clear_start:treasureBox.SOpenSpaceTreasureBox)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  ::memset(&openeruid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&openeruid_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

const char* SOpenSpaceTreasureBox::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 OpenerUid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          openeruid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .treasureBox.TreasureBoxRewardContent list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "treasureBox.SOpenSpaceTreasureBox.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vector.PVector3 position = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SOpenSpaceTreasureBox::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:treasureBox.SOpenSpaceTreasureBox)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 OpenerUid = 1;
  if (this->openeruid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_openeruid(), target);
  }

  // repeated .treasureBox.TreasureBoxRewardContent list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_list(i), target, stream);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_state(), target);
  }

  // string msg = 4;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "treasureBox.SOpenSpaceTreasureBox.msg");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_msg(), target);
  }

  // .vector.PVector3 position = 5;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::position(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:treasureBox.SOpenSpaceTreasureBox)
  return target;
}

size_t SOpenSpaceTreasureBox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:treasureBox.SOpenSpaceTreasureBox)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .treasureBox.TreasureBoxRewardContent list = 2;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg = 4;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // .vector.PVector3 position = 5;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int32 OpenerUid = 1;
  if (this->openeruid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_openeruid());
  }

  // int32 state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SOpenSpaceTreasureBox::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:treasureBox.SOpenSpaceTreasureBox)
  GOOGLE_DCHECK_NE(&from, this);
  const SOpenSpaceTreasureBox* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SOpenSpaceTreasureBox>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:treasureBox.SOpenSpaceTreasureBox)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:treasureBox.SOpenSpaceTreasureBox)
    MergeFrom(*source);
  }
}

void SOpenSpaceTreasureBox::MergeFrom(const SOpenSpaceTreasureBox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:treasureBox.SOpenSpaceTreasureBox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_position()) {
    _internal_mutable_position()->::vector::PVector3::MergeFrom(from._internal_position());
  }
  if (from.openeruid() != 0) {
    _internal_set_openeruid(from._internal_openeruid());
  }
  if (from.state() != 0) {
    _internal_set_state(from._internal_state());
  }
}

void SOpenSpaceTreasureBox::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:treasureBox.SOpenSpaceTreasureBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SOpenSpaceTreasureBox::CopyFrom(const SOpenSpaceTreasureBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:treasureBox.SOpenSpaceTreasureBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SOpenSpaceTreasureBox::IsInitialized() const {
  return true;
}

void SOpenSpaceTreasureBox::InternalSwap(SOpenSpaceTreasureBox* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  list_.InternalSwap(&other->list_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  swap(openeruid_, other->openeruid_);
  swap(state_, other->state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SOpenSpaceTreasureBox::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TreasureBoxRewardContent::InitAsDefaultInstance() {
}
class TreasureBoxRewardContent::_Internal {
 public:
};

TreasureBoxRewardContent::TreasureBoxRewardContent()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:treasureBox.TreasureBoxRewardContent)
}
TreasureBoxRewardContent::TreasureBoxRewardContent(const TreasureBoxRewardContent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  goodname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_goodname().empty()) {
    goodname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.goodname_);
  }
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_icon().empty()) {
    icon_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  ::memcpy(&goodid_, &from.goodid_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&goodid_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:treasureBox.TreasureBoxRewardContent)
}

void TreasureBoxRewardContent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TreasureBoxRewardContent_treasureBox_2eproto.base);
  goodname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&goodid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&goodid_)) + sizeof(num_));
}

TreasureBoxRewardContent::~TreasureBoxRewardContent() {
  // @@protoc_insertion_point(destructor:treasureBox.TreasureBoxRewardContent)
  SharedDtor();
}

void TreasureBoxRewardContent::SharedDtor() {
  goodname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TreasureBoxRewardContent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TreasureBoxRewardContent& TreasureBoxRewardContent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TreasureBoxRewardContent_treasureBox_2eproto.base);
  return *internal_default_instance();
}


void TreasureBoxRewardContent::Clear() {
// @@protoc_insertion_point(message_clear_start:treasureBox.TreasureBoxRewardContent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  goodname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  icon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&goodid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&goodid_)) + sizeof(num_));
  _internal_metadata_.Clear();
}

const char* TreasureBoxRewardContent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 goodId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          goodid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string goodName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_goodname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "treasureBox.TreasureBoxRewardContent.goodName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string icon = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_icon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "treasureBox.TreasureBoxRewardContent.icon"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TreasureBoxRewardContent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:treasureBox.TreasureBoxRewardContent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 goodId = 1;
  if (this->goodid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_goodid(), target);
  }

  // string goodName = 2;
  if (this->goodname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_goodname().data(), static_cast<int>(this->_internal_goodname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "treasureBox.TreasureBoxRewardContent.goodName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_goodname(), target);
  }

  // int32 num = 3;
  if (this->num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_num(), target);
  }

  // string icon = 4;
  if (this->icon().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_icon().data(), static_cast<int>(this->_internal_icon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "treasureBox.TreasureBoxRewardContent.icon");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_icon(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:treasureBox.TreasureBoxRewardContent)
  return target;
}

size_t TreasureBoxRewardContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:treasureBox.TreasureBoxRewardContent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string goodName = 2;
  if (this->goodname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_goodname());
  }

  // string icon = 4;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_icon());
  }

  // int32 goodId = 1;
  if (this->goodid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_goodid());
  }

  // int32 num = 3;
  if (this->num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TreasureBoxRewardContent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:treasureBox.TreasureBoxRewardContent)
  GOOGLE_DCHECK_NE(&from, this);
  const TreasureBoxRewardContent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TreasureBoxRewardContent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:treasureBox.TreasureBoxRewardContent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:treasureBox.TreasureBoxRewardContent)
    MergeFrom(*source);
  }
}

void TreasureBoxRewardContent::MergeFrom(const TreasureBoxRewardContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:treasureBox.TreasureBoxRewardContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.goodname().size() > 0) {

    goodname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.goodname_);
  }
  if (from.icon().size() > 0) {

    icon_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  if (from.goodid() != 0) {
    _internal_set_goodid(from._internal_goodid());
  }
  if (from.num() != 0) {
    _internal_set_num(from._internal_num());
  }
}

void TreasureBoxRewardContent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:treasureBox.TreasureBoxRewardContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TreasureBoxRewardContent::CopyFrom(const TreasureBoxRewardContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:treasureBox.TreasureBoxRewardContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TreasureBoxRewardContent::IsInitialized() const {
  return true;
}

void TreasureBoxRewardContent::InternalSwap(TreasureBoxRewardContent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  goodname_.Swap(&other->goodname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  icon_.Swap(&other->icon_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(goodid_, other->goodid_);
  swap(num_, other->num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TreasureBoxRewardContent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SpaceTreasureBoxInfo::InitAsDefaultInstance() {
  ::treasureBox::_SpaceTreasureBoxInfo_default_instance_._instance.get_mutable()->position_ = const_cast< ::vector::PVector3*>(
      ::vector::PVector3::internal_default_instance());
}
class SpaceTreasureBoxInfo::_Internal {
 public:
  static const ::vector::PVector3& position(const SpaceTreasureBoxInfo* msg);
};

const ::vector::PVector3&
SpaceTreasureBoxInfo::_Internal::position(const SpaceTreasureBoxInfo* msg) {
  return *msg->position_;
}
void SpaceTreasureBoxInfo::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
SpaceTreasureBoxInfo::SpaceTreasureBoxInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:treasureBox.SpaceTreasureBoxInfo)
}
SpaceTreasureBoxInfo::SpaceTreasureBoxInfo(const SpaceTreasureBoxInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_position()) {
    position_ = new ::vector::PVector3(*from.position_);
  } else {
    position_ = nullptr;
  }
  treasureboxtype_ = from.treasureboxtype_;
  // @@protoc_insertion_point(copy_constructor:treasureBox.SpaceTreasureBoxInfo)
}

void SpaceTreasureBoxInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SpaceTreasureBoxInfo_treasureBox_2eproto.base);
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&treasureboxtype_) -
      reinterpret_cast<char*>(&position_)) + sizeof(treasureboxtype_));
}

SpaceTreasureBoxInfo::~SpaceTreasureBoxInfo() {
  // @@protoc_insertion_point(destructor:treasureBox.SpaceTreasureBoxInfo)
  SharedDtor();
}

void SpaceTreasureBoxInfo::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void SpaceTreasureBoxInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SpaceTreasureBoxInfo& SpaceTreasureBoxInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SpaceTreasureBoxInfo_treasureBox_2eproto.base);
  return *internal_default_instance();
}


void SpaceTreasureBoxInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:treasureBox.SpaceTreasureBoxInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  treasureboxtype_ = 0;
  _internal_metadata_.Clear();
}

const char* SpaceTreasureBoxInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 treasureBoxType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          treasureboxtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vector.PVector3 position = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpaceTreasureBoxInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:treasureBox.SpaceTreasureBoxInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 treasureBoxType = 1;
  if (this->treasureboxtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_treasureboxtype(), target);
  }

  // .vector.PVector3 position = 3;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::position(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:treasureBox.SpaceTreasureBoxInfo)
  return target;
}

size_t SpaceTreasureBoxInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:treasureBox.SpaceTreasureBoxInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .vector.PVector3 position = 3;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int32 treasureBoxType = 1;
  if (this->treasureboxtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_treasureboxtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpaceTreasureBoxInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:treasureBox.SpaceTreasureBoxInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SpaceTreasureBoxInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpaceTreasureBoxInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:treasureBox.SpaceTreasureBoxInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:treasureBox.SpaceTreasureBoxInfo)
    MergeFrom(*source);
  }
}

void SpaceTreasureBoxInfo::MergeFrom(const SpaceTreasureBoxInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:treasureBox.SpaceTreasureBoxInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    _internal_mutable_position()->::vector::PVector3::MergeFrom(from._internal_position());
  }
  if (from.treasureboxtype() != 0) {
    _internal_set_treasureboxtype(from._internal_treasureboxtype());
  }
}

void SpaceTreasureBoxInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:treasureBox.SpaceTreasureBoxInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpaceTreasureBoxInfo::CopyFrom(const SpaceTreasureBoxInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:treasureBox.SpaceTreasureBoxInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpaceTreasureBoxInfo::IsInitialized() const {
  return true;
}

void SpaceTreasureBoxInfo::InternalSwap(SpaceTreasureBoxInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(position_, other->position_);
  swap(treasureboxtype_, other->treasureboxtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpaceTreasureBoxInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SSpaceTreasureBoxRefreshNotice::InitAsDefaultInstance() {
  ::treasureBox::_SSpaceTreasureBoxRefreshNotice_default_instance_._instance.get_mutable()->position_ = const_cast< ::vector::PVector3*>(
      ::vector::PVector3::internal_default_instance());
}
class SSpaceTreasureBoxRefreshNotice::_Internal {
 public:
  static const ::vector::PVector3& position(const SSpaceTreasureBoxRefreshNotice* msg);
};

const ::vector::PVector3&
SSpaceTreasureBoxRefreshNotice::_Internal::position(const SSpaceTreasureBoxRefreshNotice* msg) {
  return *msg->position_;
}
void SSpaceTreasureBoxRefreshNotice::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
SSpaceTreasureBoxRefreshNotice::SSpaceTreasureBoxRefreshNotice()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:treasureBox.SSpaceTreasureBoxRefreshNotice)
}
SSpaceTreasureBoxRefreshNotice::SSpaceTreasureBoxRefreshNotice(const SSpaceTreasureBoxRefreshNotice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_position()) {
    position_ = new ::vector::PVector3(*from.position_);
  } else {
    position_ = nullptr;
  }
  treasureboxtype_ = from.treasureboxtype_;
  // @@protoc_insertion_point(copy_constructor:treasureBox.SSpaceTreasureBoxRefreshNotice)
}

void SSpaceTreasureBoxRefreshNotice::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSpaceTreasureBoxRefreshNotice_treasureBox_2eproto.base);
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&treasureboxtype_) -
      reinterpret_cast<char*>(&position_)) + sizeof(treasureboxtype_));
}

SSpaceTreasureBoxRefreshNotice::~SSpaceTreasureBoxRefreshNotice() {
  // @@protoc_insertion_point(destructor:treasureBox.SSpaceTreasureBoxRefreshNotice)
  SharedDtor();
}

void SSpaceTreasureBoxRefreshNotice::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void SSpaceTreasureBoxRefreshNotice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSpaceTreasureBoxRefreshNotice& SSpaceTreasureBoxRefreshNotice::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSpaceTreasureBoxRefreshNotice_treasureBox_2eproto.base);
  return *internal_default_instance();
}


void SSpaceTreasureBoxRefreshNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:treasureBox.SSpaceTreasureBoxRefreshNotice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  treasureboxtype_ = 0;
  _internal_metadata_.Clear();
}

const char* SSpaceTreasureBoxRefreshNotice::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 treasureBoxType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          treasureboxtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vector.PVector3 position = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSpaceTreasureBoxRefreshNotice::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:treasureBox.SSpaceTreasureBoxRefreshNotice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 treasureBoxType = 1;
  if (this->treasureboxtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_treasureboxtype(), target);
  }

  // .vector.PVector3 position = 3;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::position(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:treasureBox.SSpaceTreasureBoxRefreshNotice)
  return target;
}

size_t SSpaceTreasureBoxRefreshNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:treasureBox.SSpaceTreasureBoxRefreshNotice)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .vector.PVector3 position = 3;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int32 treasureBoxType = 1;
  if (this->treasureboxtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_treasureboxtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSpaceTreasureBoxRefreshNotice::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:treasureBox.SSpaceTreasureBoxRefreshNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const SSpaceTreasureBoxRefreshNotice* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSpaceTreasureBoxRefreshNotice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:treasureBox.SSpaceTreasureBoxRefreshNotice)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:treasureBox.SSpaceTreasureBoxRefreshNotice)
    MergeFrom(*source);
  }
}

void SSpaceTreasureBoxRefreshNotice::MergeFrom(const SSpaceTreasureBoxRefreshNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:treasureBox.SSpaceTreasureBoxRefreshNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    _internal_mutable_position()->::vector::PVector3::MergeFrom(from._internal_position());
  }
  if (from.treasureboxtype() != 0) {
    _internal_set_treasureboxtype(from._internal_treasureboxtype());
  }
}

void SSpaceTreasureBoxRefreshNotice::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:treasureBox.SSpaceTreasureBoxRefreshNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSpaceTreasureBoxRefreshNotice::CopyFrom(const SSpaceTreasureBoxRefreshNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:treasureBox.SSpaceTreasureBoxRefreshNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSpaceTreasureBoxRefreshNotice::IsInitialized() const {
  return true;
}

void SSpaceTreasureBoxRefreshNotice::InternalSwap(SSpaceTreasureBoxRefreshNotice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(position_, other->position_);
  swap(treasureboxtype_, other->treasureboxtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SSpaceTreasureBoxRefreshNotice::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace treasureBox
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::treasureBox::CDailyTreasureBoxStatus* Arena::CreateMaybeMessage< ::treasureBox::CDailyTreasureBoxStatus >(Arena* arena) {
  return Arena::CreateInternal< ::treasureBox::CDailyTreasureBoxStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::treasureBox::SDailyTreasureBoxStatus* Arena::CreateMaybeMessage< ::treasureBox::SDailyTreasureBoxStatus >(Arena* arena) {
  return Arena::CreateInternal< ::treasureBox::SDailyTreasureBoxStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::treasureBox::COpenDailyTreasureBox* Arena::CreateMaybeMessage< ::treasureBox::COpenDailyTreasureBox >(Arena* arena) {
  return Arena::CreateInternal< ::treasureBox::COpenDailyTreasureBox >(arena);
}
template<> PROTOBUF_NOINLINE ::treasureBox::SOpenDailyTreasureBox* Arena::CreateMaybeMessage< ::treasureBox::SOpenDailyTreasureBox >(Arena* arena) {
  return Arena::CreateInternal< ::treasureBox::SOpenDailyTreasureBox >(arena);
}
template<> PROTOBUF_NOINLINE ::treasureBox::CSpaceTreasureBoxList* Arena::CreateMaybeMessage< ::treasureBox::CSpaceTreasureBoxList >(Arena* arena) {
  return Arena::CreateInternal< ::treasureBox::CSpaceTreasureBoxList >(arena);
}
template<> PROTOBUF_NOINLINE ::treasureBox::SSpaceTreasureBoxList* Arena::CreateMaybeMessage< ::treasureBox::SSpaceTreasureBoxList >(Arena* arena) {
  return Arena::CreateInternal< ::treasureBox::SSpaceTreasureBoxList >(arena);
}
template<> PROTOBUF_NOINLINE ::treasureBox::COpenSpaceTreasureBox* Arena::CreateMaybeMessage< ::treasureBox::COpenSpaceTreasureBox >(Arena* arena) {
  return Arena::CreateInternal< ::treasureBox::COpenSpaceTreasureBox >(arena);
}
template<> PROTOBUF_NOINLINE ::treasureBox::SOpenSpaceTreasureBox* Arena::CreateMaybeMessage< ::treasureBox::SOpenSpaceTreasureBox >(Arena* arena) {
  return Arena::CreateInternal< ::treasureBox::SOpenSpaceTreasureBox >(arena);
}
template<> PROTOBUF_NOINLINE ::treasureBox::TreasureBoxRewardContent* Arena::CreateMaybeMessage< ::treasureBox::TreasureBoxRewardContent >(Arena* arena) {
  return Arena::CreateInternal< ::treasureBox::TreasureBoxRewardContent >(arena);
}
template<> PROTOBUF_NOINLINE ::treasureBox::SpaceTreasureBoxInfo* Arena::CreateMaybeMessage< ::treasureBox::SpaceTreasureBoxInfo >(Arena* arena) {
  return Arena::CreateInternal< ::treasureBox::SpaceTreasureBoxInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::treasureBox::SSpaceTreasureBoxRefreshNotice* Arena::CreateMaybeMessage< ::treasureBox::SSpaceTreasureBoxRefreshNotice >(Arena* arena) {
  return Arena::CreateInternal< ::treasureBox::SSpaceTreasureBoxRefreshNotice >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
