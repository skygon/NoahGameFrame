// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messagePush.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_messagePush_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_messagePush_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_messagePush_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_messagePush_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_messagePush_2eproto;
namespace push {
class CPushUserStatus;
class CPushUserStatusDefaultTypeInternal;
extern CPushUserStatusDefaultTypeInternal _CPushUserStatus_default_instance_;
class SPushMjLeaveMsg;
class SPushMjLeaveMsgDefaultTypeInternal;
extern SPushMjLeaveMsgDefaultTypeInternal _SPushMjLeaveMsg_default_instance_;
class SPushSpaceMessage;
class SPushSpaceMessageDefaultTypeInternal;
extern SPushSpaceMessageDefaultTypeInternal _SPushSpaceMessage_default_instance_;
class SPushUserOnlineMessage;
class SPushUserOnlineMessageDefaultTypeInternal;
extern SPushUserOnlineMessageDefaultTypeInternal _SPushUserOnlineMessage_default_instance_;
class SPushUserStatus;
class SPushUserStatusDefaultTypeInternal;
extern SPushUserStatusDefaultTypeInternal _SPushUserStatus_default_instance_;
}  // namespace push
PROTOBUF_NAMESPACE_OPEN
template<> ::push::CPushUserStatus* Arena::CreateMaybeMessage<::push::CPushUserStatus>(Arena*);
template<> ::push::SPushMjLeaveMsg* Arena::CreateMaybeMessage<::push::SPushMjLeaveMsg>(Arena*);
template<> ::push::SPushSpaceMessage* Arena::CreateMaybeMessage<::push::SPushSpaceMessage>(Arena*);
template<> ::push::SPushUserOnlineMessage* Arena::CreateMaybeMessage<::push::SPushUserOnlineMessage>(Arena*);
template<> ::push::SPushUserStatus* Arena::CreateMaybeMessage<::push::SPushUserStatus>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace push {

// ===================================================================

class CPushUserStatus :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:push.CPushUserStatus) */ {
 public:
  CPushUserStatus();
  virtual ~CPushUserStatus();

  CPushUserStatus(const CPushUserStatus& from);
  CPushUserStatus(CPushUserStatus&& from) noexcept
    : CPushUserStatus() {
    *this = ::std::move(from);
  }

  inline CPushUserStatus& operator=(const CPushUserStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPushUserStatus& operator=(CPushUserStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CPushUserStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPushUserStatus* internal_default_instance() {
    return reinterpret_cast<const CPushUserStatus*>(
               &_CPushUserStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CPushUserStatus& a, CPushUserStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(CPushUserStatus* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CPushUserStatus* New() const final {
    return CreateMaybeMessage<CPushUserStatus>(nullptr);
  }

  CPushUserStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CPushUserStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CPushUserStatus& from);
  void MergeFrom(const CPushUserStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPushUserStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "push.CPushUserStatus";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messagePush_2eproto);
    return ::descriptor_table_messagePush_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
  };
  // int32 uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:push.CPushUserStatus)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messagePush_2eproto;
};
// -------------------------------------------------------------------

class SPushUserStatus :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:push.SPushUserStatus) */ {
 public:
  SPushUserStatus();
  virtual ~SPushUserStatus();

  SPushUserStatus(const SPushUserStatus& from);
  SPushUserStatus(SPushUserStatus&& from) noexcept
    : SPushUserStatus() {
    *this = ::std::move(from);
  }

  inline SPushUserStatus& operator=(const SPushUserStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline SPushUserStatus& operator=(SPushUserStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SPushUserStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SPushUserStatus* internal_default_instance() {
    return reinterpret_cast<const SPushUserStatus*>(
               &_SPushUserStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SPushUserStatus& a, SPushUserStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(SPushUserStatus* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SPushUserStatus* New() const final {
    return CreateMaybeMessage<SPushUserStatus>(nullptr);
  }

  SPushUserStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SPushUserStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SPushUserStatus& from);
  void MergeFrom(const SPushUserStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SPushUserStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "push.SPushUserStatus";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messagePush_2eproto);
    return ::descriptor_table_messagePush_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserStatusFieldNumber = 1,
    kHouseIdFieldNumber = 2,
    kHouseTypeFieldNumber = 3,
    kSeqFieldNumber = 4,
  };
  // int32 userStatus = 1;
  void clear_userstatus();
  ::PROTOBUF_NAMESPACE_ID::int32 userstatus() const;
  void set_userstatus(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_userstatus() const;
  void _internal_set_userstatus(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 houseId = 2;
  void clear_houseid();
  ::PROTOBUF_NAMESPACE_ID::int32 houseid() const;
  void set_houseid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_houseid() const;
  void _internal_set_houseid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 houseType = 3;
  void clear_housetype();
  ::PROTOBUF_NAMESPACE_ID::int32 housetype() const;
  void set_housetype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_housetype() const;
  void _internal_set_housetype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 seq = 4;
  void clear_seq();
  ::PROTOBUF_NAMESPACE_ID::int32 seq() const;
  void set_seq(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_seq() const;
  void _internal_set_seq(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:push.SPushUserStatus)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 userstatus_;
  ::PROTOBUF_NAMESPACE_ID::int32 houseid_;
  ::PROTOBUF_NAMESPACE_ID::int32 housetype_;
  ::PROTOBUF_NAMESPACE_ID::int32 seq_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messagePush_2eproto;
};
// -------------------------------------------------------------------

class SPushUserOnlineMessage :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:push.SPushUserOnlineMessage) */ {
 public:
  SPushUserOnlineMessage();
  virtual ~SPushUserOnlineMessage();

  SPushUserOnlineMessage(const SPushUserOnlineMessage& from);
  SPushUserOnlineMessage(SPushUserOnlineMessage&& from) noexcept
    : SPushUserOnlineMessage() {
    *this = ::std::move(from);
  }

  inline SPushUserOnlineMessage& operator=(const SPushUserOnlineMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline SPushUserOnlineMessage& operator=(SPushUserOnlineMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SPushUserOnlineMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SPushUserOnlineMessage* internal_default_instance() {
    return reinterpret_cast<const SPushUserOnlineMessage*>(
               &_SPushUserOnlineMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SPushUserOnlineMessage& a, SPushUserOnlineMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(SPushUserOnlineMessage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SPushUserOnlineMessage* New() const final {
    return CreateMaybeMessage<SPushUserOnlineMessage>(nullptr);
  }

  SPushUserOnlineMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SPushUserOnlineMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SPushUserOnlineMessage& from);
  void MergeFrom(const SPushUserOnlineMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SPushUserOnlineMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "push.SPushUserOnlineMessage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messagePush_2eproto);
    return ::descriptor_table_messagePush_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNickFieldNumber = 3,
    kHeadPicFieldNumber = 4,
    kMsgTypeFieldNumber = 1,
    kUidFieldNumber = 2,
  };
  // string nick = 3;
  void clear_nick();
  const std::string& nick() const;
  void set_nick(const std::string& value);
  void set_nick(std::string&& value);
  void set_nick(const char* value);
  void set_nick(const char* value, size_t size);
  std::string* mutable_nick();
  std::string* release_nick();
  void set_allocated_nick(std::string* nick);
  private:
  const std::string& _internal_nick() const;
  void _internal_set_nick(const std::string& value);
  std::string* _internal_mutable_nick();
  public:

  // string headPic = 4;
  void clear_headpic();
  const std::string& headpic() const;
  void set_headpic(const std::string& value);
  void set_headpic(std::string&& value);
  void set_headpic(const char* value);
  void set_headpic(const char* value, size_t size);
  std::string* mutable_headpic();
  std::string* release_headpic();
  void set_allocated_headpic(std::string* headpic);
  private:
  const std::string& _internal_headpic() const;
  void _internal_set_headpic(const std::string& value);
  std::string* _internal_mutable_headpic();
  public:

  // int32 msgType = 1;
  void clear_msgtype();
  ::PROTOBUF_NAMESPACE_ID::int32 msgtype() const;
  void set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_msgtype() const;
  void _internal_set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 uid = 2;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:push.SPushUserOnlineMessage)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nick_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr headpic_;
  ::PROTOBUF_NAMESPACE_ID::int32 msgtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messagePush_2eproto;
};
// -------------------------------------------------------------------

class SPushSpaceMessage :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:push.SPushSpaceMessage) */ {
 public:
  SPushSpaceMessage();
  virtual ~SPushSpaceMessage();

  SPushSpaceMessage(const SPushSpaceMessage& from);
  SPushSpaceMessage(SPushSpaceMessage&& from) noexcept
    : SPushSpaceMessage() {
    *this = ::std::move(from);
  }

  inline SPushSpaceMessage& operator=(const SPushSpaceMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline SPushSpaceMessage& operator=(SPushSpaceMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SPushSpaceMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SPushSpaceMessage* internal_default_instance() {
    return reinterpret_cast<const SPushSpaceMessage*>(
               &_SPushSpaceMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SPushSpaceMessage& a, SPushSpaceMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(SPushSpaceMessage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SPushSpaceMessage* New() const final {
    return CreateMaybeMessage<SPushSpaceMessage>(nullptr);
  }

  SPushSpaceMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SPushSpaceMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SPushSpaceMessage& from);
  void MergeFrom(const SPushSpaceMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SPushSpaceMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "push.SPushSpaceMessage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messagePush_2eproto);
    return ::descriptor_table_messagePush_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTitleFieldNumber = 4,
    kInnerImgFieldNumber = 5,
    kMsgTypeFieldNumber = 1,
    kHouseTypeFieldNumber = 2,
    kHouseIdFieldNumber = 3,
  };
  // string innerTitle = 4;
  void clear_innertitle();
  const std::string& innertitle() const;
  void set_innertitle(const std::string& value);
  void set_innertitle(std::string&& value);
  void set_innertitle(const char* value);
  void set_innertitle(const char* value, size_t size);
  std::string* mutable_innertitle();
  std::string* release_innertitle();
  void set_allocated_innertitle(std::string* innertitle);
  private:
  const std::string& _internal_innertitle() const;
  void _internal_set_innertitle(const std::string& value);
  std::string* _internal_mutable_innertitle();
  public:

  // string innerImg = 5;
  void clear_innerimg();
  const std::string& innerimg() const;
  void set_innerimg(const std::string& value);
  void set_innerimg(std::string&& value);
  void set_innerimg(const char* value);
  void set_innerimg(const char* value, size_t size);
  std::string* mutable_innerimg();
  std::string* release_innerimg();
  void set_allocated_innerimg(std::string* innerimg);
  private:
  const std::string& _internal_innerimg() const;
  void _internal_set_innerimg(const std::string& value);
  std::string* _internal_mutable_innerimg();
  public:

  // int32 msgType = 1;
  void clear_msgtype();
  ::PROTOBUF_NAMESPACE_ID::int32 msgtype() const;
  void set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_msgtype() const;
  void _internal_set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 houseType = 2;
  void clear_housetype();
  ::PROTOBUF_NAMESPACE_ID::int32 housetype() const;
  void set_housetype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_housetype() const;
  void _internal_set_housetype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 houseId = 3;
  void clear_houseid();
  ::PROTOBUF_NAMESPACE_ID::int32 houseid() const;
  void set_houseid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_houseid() const;
  void _internal_set_houseid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:push.SPushSpaceMessage)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr innertitle_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr innerimg_;
  ::PROTOBUF_NAMESPACE_ID::int32 msgtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 housetype_;
  ::PROTOBUF_NAMESPACE_ID::int32 houseid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messagePush_2eproto;
};
// -------------------------------------------------------------------

class SPushMjLeaveMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:push.SPushMjLeaveMsg) */ {
 public:
  SPushMjLeaveMsg();
  virtual ~SPushMjLeaveMsg();

  SPushMjLeaveMsg(const SPushMjLeaveMsg& from);
  SPushMjLeaveMsg(SPushMjLeaveMsg&& from) noexcept
    : SPushMjLeaveMsg() {
    *this = ::std::move(from);
  }

  inline SPushMjLeaveMsg& operator=(const SPushMjLeaveMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline SPushMjLeaveMsg& operator=(SPushMjLeaveMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SPushMjLeaveMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SPushMjLeaveMsg* internal_default_instance() {
    return reinterpret_cast<const SPushMjLeaveMsg*>(
               &_SPushMjLeaveMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SPushMjLeaveMsg& a, SPushMjLeaveMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(SPushMjLeaveMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SPushMjLeaveMsg* New() const final {
    return CreateMaybeMessage<SPushMjLeaveMsg>(nullptr);
  }

  SPushMjLeaveMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SPushMjLeaveMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SPushMjLeaveMsg& from);
  void MergeFrom(const SPushMjLeaveMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SPushMjLeaveMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "push.SPushMjLeaveMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messagePush_2eproto);
    return ::descriptor_table_messagePush_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTitleFieldNumber = 4,
    kInnerImgFieldNumber = 5,
    kMsgTypeFieldNumber = 1,
    kHouseTypeFieldNumber = 2,
    kHouseIdFieldNumber = 3,
    kLeaveMsgIdFieldNumber = 6,
  };
  // string innerTitle = 4;
  void clear_innertitle();
  const std::string& innertitle() const;
  void set_innertitle(const std::string& value);
  void set_innertitle(std::string&& value);
  void set_innertitle(const char* value);
  void set_innertitle(const char* value, size_t size);
  std::string* mutable_innertitle();
  std::string* release_innertitle();
  void set_allocated_innertitle(std::string* innertitle);
  private:
  const std::string& _internal_innertitle() const;
  void _internal_set_innertitle(const std::string& value);
  std::string* _internal_mutable_innertitle();
  public:

  // string innerImg = 5;
  void clear_innerimg();
  const std::string& innerimg() const;
  void set_innerimg(const std::string& value);
  void set_innerimg(std::string&& value);
  void set_innerimg(const char* value);
  void set_innerimg(const char* value, size_t size);
  std::string* mutable_innerimg();
  std::string* release_innerimg();
  void set_allocated_innerimg(std::string* innerimg);
  private:
  const std::string& _internal_innerimg() const;
  void _internal_set_innerimg(const std::string& value);
  std::string* _internal_mutable_innerimg();
  public:

  // int32 msgType = 1;
  void clear_msgtype();
  ::PROTOBUF_NAMESPACE_ID::int32 msgtype() const;
  void set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_msgtype() const;
  void _internal_set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 houseType = 2;
  void clear_housetype();
  ::PROTOBUF_NAMESPACE_ID::int32 housetype() const;
  void set_housetype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_housetype() const;
  void _internal_set_housetype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 houseId = 3;
  void clear_houseid();
  ::PROTOBUF_NAMESPACE_ID::int32 houseid() const;
  void set_houseid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_houseid() const;
  void _internal_set_houseid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 leaveMsgId = 6;
  void clear_leavemsgid();
  ::PROTOBUF_NAMESPACE_ID::int32 leavemsgid() const;
  void set_leavemsgid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_leavemsgid() const;
  void _internal_set_leavemsgid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:push.SPushMjLeaveMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr innertitle_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr innerimg_;
  ::PROTOBUF_NAMESPACE_ID::int32 msgtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 housetype_;
  ::PROTOBUF_NAMESPACE_ID::int32 houseid_;
  ::PROTOBUF_NAMESPACE_ID::int32 leavemsgid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messagePush_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CPushUserStatus

// int32 uid = 1;
inline void CPushUserStatus::clear_uid() {
  uid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CPushUserStatus::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CPushUserStatus::uid() const {
  // @@protoc_insertion_point(field_get:push.CPushUserStatus.uid)
  return _internal_uid();
}
inline void CPushUserStatus::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  uid_ = value;
}
inline void CPushUserStatus::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:push.CPushUserStatus.uid)
}

// -------------------------------------------------------------------

// SPushUserStatus

// int32 userStatus = 1;
inline void SPushUserStatus::clear_userstatus() {
  userstatus_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushUserStatus::_internal_userstatus() const {
  return userstatus_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushUserStatus::userstatus() const {
  // @@protoc_insertion_point(field_get:push.SPushUserStatus.userStatus)
  return _internal_userstatus();
}
inline void SPushUserStatus::_internal_set_userstatus(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  userstatus_ = value;
}
inline void SPushUserStatus::set_userstatus(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_userstatus(value);
  // @@protoc_insertion_point(field_set:push.SPushUserStatus.userStatus)
}

// int32 houseId = 2;
inline void SPushUserStatus::clear_houseid() {
  houseid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushUserStatus::_internal_houseid() const {
  return houseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushUserStatus::houseid() const {
  // @@protoc_insertion_point(field_get:push.SPushUserStatus.houseId)
  return _internal_houseid();
}
inline void SPushUserStatus::_internal_set_houseid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  houseid_ = value;
}
inline void SPushUserStatus::set_houseid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_houseid(value);
  // @@protoc_insertion_point(field_set:push.SPushUserStatus.houseId)
}

// int32 houseType = 3;
inline void SPushUserStatus::clear_housetype() {
  housetype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushUserStatus::_internal_housetype() const {
  return housetype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushUserStatus::housetype() const {
  // @@protoc_insertion_point(field_get:push.SPushUserStatus.houseType)
  return _internal_housetype();
}
inline void SPushUserStatus::_internal_set_housetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  housetype_ = value;
}
inline void SPushUserStatus::set_housetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_housetype(value);
  // @@protoc_insertion_point(field_set:push.SPushUserStatus.houseType)
}

// int32 seq = 4;
inline void SPushUserStatus::clear_seq() {
  seq_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushUserStatus::_internal_seq() const {
  return seq_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushUserStatus::seq() const {
  // @@protoc_insertion_point(field_get:push.SPushUserStatus.seq)
  return _internal_seq();
}
inline void SPushUserStatus::_internal_set_seq(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  seq_ = value;
}
inline void SPushUserStatus::set_seq(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:push.SPushUserStatus.seq)
}

// -------------------------------------------------------------------

// SPushUserOnlineMessage

// int32 msgType = 1;
inline void SPushUserOnlineMessage::clear_msgtype() {
  msgtype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushUserOnlineMessage::_internal_msgtype() const {
  return msgtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushUserOnlineMessage::msgtype() const {
  // @@protoc_insertion_point(field_get:push.SPushUserOnlineMessage.msgType)
  return _internal_msgtype();
}
inline void SPushUserOnlineMessage::_internal_set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  msgtype_ = value;
}
inline void SPushUserOnlineMessage::set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_msgtype(value);
  // @@protoc_insertion_point(field_set:push.SPushUserOnlineMessage.msgType)
}

// int32 uid = 2;
inline void SPushUserOnlineMessage::clear_uid() {
  uid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushUserOnlineMessage::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushUserOnlineMessage::uid() const {
  // @@protoc_insertion_point(field_get:push.SPushUserOnlineMessage.uid)
  return _internal_uid();
}
inline void SPushUserOnlineMessage::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  uid_ = value;
}
inline void SPushUserOnlineMessage::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:push.SPushUserOnlineMessage.uid)
}

// string nick = 3;
inline void SPushUserOnlineMessage::clear_nick() {
  nick_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SPushUserOnlineMessage::nick() const {
  // @@protoc_insertion_point(field_get:push.SPushUserOnlineMessage.nick)
  return _internal_nick();
}
inline void SPushUserOnlineMessage::set_nick(const std::string& value) {
  _internal_set_nick(value);
  // @@protoc_insertion_point(field_set:push.SPushUserOnlineMessage.nick)
}
inline std::string* SPushUserOnlineMessage::mutable_nick() {
  // @@protoc_insertion_point(field_mutable:push.SPushUserOnlineMessage.nick)
  return _internal_mutable_nick();
}
inline const std::string& SPushUserOnlineMessage::_internal_nick() const {
  return nick_.GetNoArena();
}
inline void SPushUserOnlineMessage::_internal_set_nick(const std::string& value) {
  
  nick_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SPushUserOnlineMessage::set_nick(std::string&& value) {
  
  nick_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:push.SPushUserOnlineMessage.nick)
}
inline void SPushUserOnlineMessage::set_nick(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nick_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:push.SPushUserOnlineMessage.nick)
}
inline void SPushUserOnlineMessage::set_nick(const char* value, size_t size) {
  
  nick_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:push.SPushUserOnlineMessage.nick)
}
inline std::string* SPushUserOnlineMessage::_internal_mutable_nick() {
  
  return nick_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SPushUserOnlineMessage::release_nick() {
  // @@protoc_insertion_point(field_release:push.SPushUserOnlineMessage.nick)
  
  return nick_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SPushUserOnlineMessage::set_allocated_nick(std::string* nick) {
  if (nick != nullptr) {
    
  } else {
    
  }
  nick_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nick);
  // @@protoc_insertion_point(field_set_allocated:push.SPushUserOnlineMessage.nick)
}

// string headPic = 4;
inline void SPushUserOnlineMessage::clear_headpic() {
  headpic_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SPushUserOnlineMessage::headpic() const {
  // @@protoc_insertion_point(field_get:push.SPushUserOnlineMessage.headPic)
  return _internal_headpic();
}
inline void SPushUserOnlineMessage::set_headpic(const std::string& value) {
  _internal_set_headpic(value);
  // @@protoc_insertion_point(field_set:push.SPushUserOnlineMessage.headPic)
}
inline std::string* SPushUserOnlineMessage::mutable_headpic() {
  // @@protoc_insertion_point(field_mutable:push.SPushUserOnlineMessage.headPic)
  return _internal_mutable_headpic();
}
inline const std::string& SPushUserOnlineMessage::_internal_headpic() const {
  return headpic_.GetNoArena();
}
inline void SPushUserOnlineMessage::_internal_set_headpic(const std::string& value) {
  
  headpic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SPushUserOnlineMessage::set_headpic(std::string&& value) {
  
  headpic_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:push.SPushUserOnlineMessage.headPic)
}
inline void SPushUserOnlineMessage::set_headpic(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  headpic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:push.SPushUserOnlineMessage.headPic)
}
inline void SPushUserOnlineMessage::set_headpic(const char* value, size_t size) {
  
  headpic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:push.SPushUserOnlineMessage.headPic)
}
inline std::string* SPushUserOnlineMessage::_internal_mutable_headpic() {
  
  return headpic_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SPushUserOnlineMessage::release_headpic() {
  // @@protoc_insertion_point(field_release:push.SPushUserOnlineMessage.headPic)
  
  return headpic_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SPushUserOnlineMessage::set_allocated_headpic(std::string* headpic) {
  if (headpic != nullptr) {
    
  } else {
    
  }
  headpic_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), headpic);
  // @@protoc_insertion_point(field_set_allocated:push.SPushUserOnlineMessage.headPic)
}

// -------------------------------------------------------------------

// SPushSpaceMessage

// int32 msgType = 1;
inline void SPushSpaceMessage::clear_msgtype() {
  msgtype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushSpaceMessage::_internal_msgtype() const {
  return msgtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushSpaceMessage::msgtype() const {
  // @@protoc_insertion_point(field_get:push.SPushSpaceMessage.msgType)
  return _internal_msgtype();
}
inline void SPushSpaceMessage::_internal_set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  msgtype_ = value;
}
inline void SPushSpaceMessage::set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_msgtype(value);
  // @@protoc_insertion_point(field_set:push.SPushSpaceMessage.msgType)
}

// int32 houseType = 2;
inline void SPushSpaceMessage::clear_housetype() {
  housetype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushSpaceMessage::_internal_housetype() const {
  return housetype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushSpaceMessage::housetype() const {
  // @@protoc_insertion_point(field_get:push.SPushSpaceMessage.houseType)
  return _internal_housetype();
}
inline void SPushSpaceMessage::_internal_set_housetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  housetype_ = value;
}
inline void SPushSpaceMessage::set_housetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_housetype(value);
  // @@protoc_insertion_point(field_set:push.SPushSpaceMessage.houseType)
}

// int32 houseId = 3;
inline void SPushSpaceMessage::clear_houseid() {
  houseid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushSpaceMessage::_internal_houseid() const {
  return houseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushSpaceMessage::houseid() const {
  // @@protoc_insertion_point(field_get:push.SPushSpaceMessage.houseId)
  return _internal_houseid();
}
inline void SPushSpaceMessage::_internal_set_houseid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  houseid_ = value;
}
inline void SPushSpaceMessage::set_houseid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_houseid(value);
  // @@protoc_insertion_point(field_set:push.SPushSpaceMessage.houseId)
}

// string innerTitle = 4;
inline void SPushSpaceMessage::clear_innertitle() {
  innertitle_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SPushSpaceMessage::innertitle() const {
  // @@protoc_insertion_point(field_get:push.SPushSpaceMessage.innerTitle)
  return _internal_innertitle();
}
inline void SPushSpaceMessage::set_innertitle(const std::string& value) {
  _internal_set_innertitle(value);
  // @@protoc_insertion_point(field_set:push.SPushSpaceMessage.innerTitle)
}
inline std::string* SPushSpaceMessage::mutable_innertitle() {
  // @@protoc_insertion_point(field_mutable:push.SPushSpaceMessage.innerTitle)
  return _internal_mutable_innertitle();
}
inline const std::string& SPushSpaceMessage::_internal_innertitle() const {
  return innertitle_.GetNoArena();
}
inline void SPushSpaceMessage::_internal_set_innertitle(const std::string& value) {
  
  innertitle_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SPushSpaceMessage::set_innertitle(std::string&& value) {
  
  innertitle_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:push.SPushSpaceMessage.innerTitle)
}
inline void SPushSpaceMessage::set_innertitle(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  innertitle_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:push.SPushSpaceMessage.innerTitle)
}
inline void SPushSpaceMessage::set_innertitle(const char* value, size_t size) {
  
  innertitle_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:push.SPushSpaceMessage.innerTitle)
}
inline std::string* SPushSpaceMessage::_internal_mutable_innertitle() {
  
  return innertitle_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SPushSpaceMessage::release_innertitle() {
  // @@protoc_insertion_point(field_release:push.SPushSpaceMessage.innerTitle)
  
  return innertitle_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SPushSpaceMessage::set_allocated_innertitle(std::string* innertitle) {
  if (innertitle != nullptr) {
    
  } else {
    
  }
  innertitle_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), innertitle);
  // @@protoc_insertion_point(field_set_allocated:push.SPushSpaceMessage.innerTitle)
}

// string innerImg = 5;
inline void SPushSpaceMessage::clear_innerimg() {
  innerimg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SPushSpaceMessage::innerimg() const {
  // @@protoc_insertion_point(field_get:push.SPushSpaceMessage.innerImg)
  return _internal_innerimg();
}
inline void SPushSpaceMessage::set_innerimg(const std::string& value) {
  _internal_set_innerimg(value);
  // @@protoc_insertion_point(field_set:push.SPushSpaceMessage.innerImg)
}
inline std::string* SPushSpaceMessage::mutable_innerimg() {
  // @@protoc_insertion_point(field_mutable:push.SPushSpaceMessage.innerImg)
  return _internal_mutable_innerimg();
}
inline const std::string& SPushSpaceMessage::_internal_innerimg() const {
  return innerimg_.GetNoArena();
}
inline void SPushSpaceMessage::_internal_set_innerimg(const std::string& value) {
  
  innerimg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SPushSpaceMessage::set_innerimg(std::string&& value) {
  
  innerimg_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:push.SPushSpaceMessage.innerImg)
}
inline void SPushSpaceMessage::set_innerimg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  innerimg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:push.SPushSpaceMessage.innerImg)
}
inline void SPushSpaceMessage::set_innerimg(const char* value, size_t size) {
  
  innerimg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:push.SPushSpaceMessage.innerImg)
}
inline std::string* SPushSpaceMessage::_internal_mutable_innerimg() {
  
  return innerimg_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SPushSpaceMessage::release_innerimg() {
  // @@protoc_insertion_point(field_release:push.SPushSpaceMessage.innerImg)
  
  return innerimg_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SPushSpaceMessage::set_allocated_innerimg(std::string* innerimg) {
  if (innerimg != nullptr) {
    
  } else {
    
  }
  innerimg_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), innerimg);
  // @@protoc_insertion_point(field_set_allocated:push.SPushSpaceMessage.innerImg)
}

// -------------------------------------------------------------------

// SPushMjLeaveMsg

// int32 msgType = 1;
inline void SPushMjLeaveMsg::clear_msgtype() {
  msgtype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushMjLeaveMsg::_internal_msgtype() const {
  return msgtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushMjLeaveMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:push.SPushMjLeaveMsg.msgType)
  return _internal_msgtype();
}
inline void SPushMjLeaveMsg::_internal_set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  msgtype_ = value;
}
inline void SPushMjLeaveMsg::set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_msgtype(value);
  // @@protoc_insertion_point(field_set:push.SPushMjLeaveMsg.msgType)
}

// int32 houseType = 2;
inline void SPushMjLeaveMsg::clear_housetype() {
  housetype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushMjLeaveMsg::_internal_housetype() const {
  return housetype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushMjLeaveMsg::housetype() const {
  // @@protoc_insertion_point(field_get:push.SPushMjLeaveMsg.houseType)
  return _internal_housetype();
}
inline void SPushMjLeaveMsg::_internal_set_housetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  housetype_ = value;
}
inline void SPushMjLeaveMsg::set_housetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_housetype(value);
  // @@protoc_insertion_point(field_set:push.SPushMjLeaveMsg.houseType)
}

// int32 houseId = 3;
inline void SPushMjLeaveMsg::clear_houseid() {
  houseid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushMjLeaveMsg::_internal_houseid() const {
  return houseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushMjLeaveMsg::houseid() const {
  // @@protoc_insertion_point(field_get:push.SPushMjLeaveMsg.houseId)
  return _internal_houseid();
}
inline void SPushMjLeaveMsg::_internal_set_houseid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  houseid_ = value;
}
inline void SPushMjLeaveMsg::set_houseid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_houseid(value);
  // @@protoc_insertion_point(field_set:push.SPushMjLeaveMsg.houseId)
}

// string innerTitle = 4;
inline void SPushMjLeaveMsg::clear_innertitle() {
  innertitle_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SPushMjLeaveMsg::innertitle() const {
  // @@protoc_insertion_point(field_get:push.SPushMjLeaveMsg.innerTitle)
  return _internal_innertitle();
}
inline void SPushMjLeaveMsg::set_innertitle(const std::string& value) {
  _internal_set_innertitle(value);
  // @@protoc_insertion_point(field_set:push.SPushMjLeaveMsg.innerTitle)
}
inline std::string* SPushMjLeaveMsg::mutable_innertitle() {
  // @@protoc_insertion_point(field_mutable:push.SPushMjLeaveMsg.innerTitle)
  return _internal_mutable_innertitle();
}
inline const std::string& SPushMjLeaveMsg::_internal_innertitle() const {
  return innertitle_.GetNoArena();
}
inline void SPushMjLeaveMsg::_internal_set_innertitle(const std::string& value) {
  
  innertitle_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SPushMjLeaveMsg::set_innertitle(std::string&& value) {
  
  innertitle_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:push.SPushMjLeaveMsg.innerTitle)
}
inline void SPushMjLeaveMsg::set_innertitle(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  innertitle_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:push.SPushMjLeaveMsg.innerTitle)
}
inline void SPushMjLeaveMsg::set_innertitle(const char* value, size_t size) {
  
  innertitle_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:push.SPushMjLeaveMsg.innerTitle)
}
inline std::string* SPushMjLeaveMsg::_internal_mutable_innertitle() {
  
  return innertitle_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SPushMjLeaveMsg::release_innertitle() {
  // @@protoc_insertion_point(field_release:push.SPushMjLeaveMsg.innerTitle)
  
  return innertitle_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SPushMjLeaveMsg::set_allocated_innertitle(std::string* innertitle) {
  if (innertitle != nullptr) {
    
  } else {
    
  }
  innertitle_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), innertitle);
  // @@protoc_insertion_point(field_set_allocated:push.SPushMjLeaveMsg.innerTitle)
}

// string innerImg = 5;
inline void SPushMjLeaveMsg::clear_innerimg() {
  innerimg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SPushMjLeaveMsg::innerimg() const {
  // @@protoc_insertion_point(field_get:push.SPushMjLeaveMsg.innerImg)
  return _internal_innerimg();
}
inline void SPushMjLeaveMsg::set_innerimg(const std::string& value) {
  _internal_set_innerimg(value);
  // @@protoc_insertion_point(field_set:push.SPushMjLeaveMsg.innerImg)
}
inline std::string* SPushMjLeaveMsg::mutable_innerimg() {
  // @@protoc_insertion_point(field_mutable:push.SPushMjLeaveMsg.innerImg)
  return _internal_mutable_innerimg();
}
inline const std::string& SPushMjLeaveMsg::_internal_innerimg() const {
  return innerimg_.GetNoArena();
}
inline void SPushMjLeaveMsg::_internal_set_innerimg(const std::string& value) {
  
  innerimg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SPushMjLeaveMsg::set_innerimg(std::string&& value) {
  
  innerimg_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:push.SPushMjLeaveMsg.innerImg)
}
inline void SPushMjLeaveMsg::set_innerimg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  innerimg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:push.SPushMjLeaveMsg.innerImg)
}
inline void SPushMjLeaveMsg::set_innerimg(const char* value, size_t size) {
  
  innerimg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:push.SPushMjLeaveMsg.innerImg)
}
inline std::string* SPushMjLeaveMsg::_internal_mutable_innerimg() {
  
  return innerimg_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SPushMjLeaveMsg::release_innerimg() {
  // @@protoc_insertion_point(field_release:push.SPushMjLeaveMsg.innerImg)
  
  return innerimg_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SPushMjLeaveMsg::set_allocated_innerimg(std::string* innerimg) {
  if (innerimg != nullptr) {
    
  } else {
    
  }
  innerimg_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), innerimg);
  // @@protoc_insertion_point(field_set_allocated:push.SPushMjLeaveMsg.innerImg)
}

// int32 leaveMsgId = 6;
inline void SPushMjLeaveMsg::clear_leavemsgid() {
  leavemsgid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushMjLeaveMsg::_internal_leavemsgid() const {
  return leavemsgid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SPushMjLeaveMsg::leavemsgid() const {
  // @@protoc_insertion_point(field_get:push.SPushMjLeaveMsg.leaveMsgId)
  return _internal_leavemsgid();
}
inline void SPushMjLeaveMsg::_internal_set_leavemsgid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  leavemsgid_ = value;
}
inline void SPushMjLeaveMsg::set_leavemsgid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_leavemsgid(value);
  // @@protoc_insertion_point(field_set:push.SPushMjLeaveMsg.leaveMsgId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace push

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_messagePush_2eproto
