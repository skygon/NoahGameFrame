// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: roomUsersPosition.proto

#include "roomUsersPosition.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_userPosition_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UPosition_userPosition_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_userPosition_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_VrPosition_userPosition_2eproto;
namespace roomUsersPosition {
class CRoomUsersPositionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CRoomUsersPosition> _instance;
} _CRoomUsersPosition_default_instance_;
class SRoomUsersPositionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SRoomUsersPosition> _instance;
} _SRoomUsersPosition_default_instance_;
}  // namespace roomUsersPosition
static void InitDefaultsscc_info_CRoomUsersPosition_roomUsersPosition_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::roomUsersPosition::_CRoomUsersPosition_default_instance_;
    new (ptr) ::roomUsersPosition::CRoomUsersPosition();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::roomUsersPosition::CRoomUsersPosition::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CRoomUsersPosition_roomUsersPosition_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CRoomUsersPosition_roomUsersPosition_2eproto}, {}};

static void InitDefaultsscc_info_SRoomUsersPosition_roomUsersPosition_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::roomUsersPosition::_SRoomUsersPosition_default_instance_;
    new (ptr) ::roomUsersPosition::SRoomUsersPosition();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::roomUsersPosition::SRoomUsersPosition::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SRoomUsersPosition_roomUsersPosition_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SRoomUsersPosition_roomUsersPosition_2eproto}, {
      &scc_info_UPosition_userPosition_2eproto.base,
      &scc_info_VrPosition_userPosition_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_roomUsersPosition_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_roomUsersPosition_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_roomUsersPosition_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_roomUsersPosition_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::roomUsersPosition::CRoomUsersPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::roomUsersPosition::CRoomUsersPosition, uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::roomUsersPosition::SRoomUsersPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::roomUsersPosition::SRoomUsersPosition, positions_),
  PROTOBUF_FIELD_OFFSET(::roomUsersPosition::SRoomUsersPosition, vrpostlists_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::roomUsersPosition::CRoomUsersPosition)},
  { 6, -1, sizeof(::roomUsersPosition::SRoomUsersPosition)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::roomUsersPosition::_CRoomUsersPosition_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::roomUsersPosition::_SRoomUsersPosition_default_instance_),
};

const char descriptor_table_protodef_roomUsersPosition_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027roomUsersPosition.proto\022\021roomUsersPosi"
  "tion\032\022userPosition.proto\"!\n\022CRoomUsersPo"
  "sition\022\013\n\003uid\030\001 \001(\005\"o\n\022SRoomUsersPositio"
  "n\022*\n\tpositions\030\001 \003(\0132\027.userPosition.UPos"
  "ition\022-\n\013vrPostLists\030\002 \003(\0132\030.userPositio"
  "n.VrPositionB-\n\030com.dayou.space.protobuf"
  "B\021RoomUsersPositionb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_roomUsersPosition_2eproto_deps[1] = {
  &::descriptor_table_userPosition_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_roomUsersPosition_2eproto_sccs[2] = {
  &scc_info_CRoomUsersPosition_roomUsersPosition_2eproto.base,
  &scc_info_SRoomUsersPosition_roomUsersPosition_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_roomUsersPosition_2eproto_once;
static bool descriptor_table_roomUsersPosition_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_roomUsersPosition_2eproto = {
  &descriptor_table_roomUsersPosition_2eproto_initialized, descriptor_table_protodef_roomUsersPosition_2eproto, "roomUsersPosition.proto", 267,
  &descriptor_table_roomUsersPosition_2eproto_once, descriptor_table_roomUsersPosition_2eproto_sccs, descriptor_table_roomUsersPosition_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_roomUsersPosition_2eproto::offsets,
  file_level_metadata_roomUsersPosition_2eproto, 2, file_level_enum_descriptors_roomUsersPosition_2eproto, file_level_service_descriptors_roomUsersPosition_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_roomUsersPosition_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_roomUsersPosition_2eproto), true);
namespace roomUsersPosition {

// ===================================================================

void CRoomUsersPosition::InitAsDefaultInstance() {
}
class CRoomUsersPosition::_Internal {
 public:
};

CRoomUsersPosition::CRoomUsersPosition()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:roomUsersPosition.CRoomUsersPosition)
}
CRoomUsersPosition::CRoomUsersPosition(const CRoomUsersPosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:roomUsersPosition.CRoomUsersPosition)
}

void CRoomUsersPosition::SharedCtor() {
  uid_ = 0;
}

CRoomUsersPosition::~CRoomUsersPosition() {
  // @@protoc_insertion_point(destructor:roomUsersPosition.CRoomUsersPosition)
  SharedDtor();
}

void CRoomUsersPosition::SharedDtor() {
}

void CRoomUsersPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CRoomUsersPosition& CRoomUsersPosition::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CRoomUsersPosition_roomUsersPosition_2eproto.base);
  return *internal_default_instance();
}


void CRoomUsersPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:roomUsersPosition.CRoomUsersPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = 0;
  _internal_metadata_.Clear();
}

const char* CRoomUsersPosition::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CRoomUsersPosition::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:roomUsersPosition.CRoomUsersPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roomUsersPosition.CRoomUsersPosition)
  return target;
}

size_t CRoomUsersPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roomUsersPosition.CRoomUsersPosition)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CRoomUsersPosition::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roomUsersPosition.CRoomUsersPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const CRoomUsersPosition* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CRoomUsersPosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roomUsersPosition.CRoomUsersPosition)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roomUsersPosition.CRoomUsersPosition)
    MergeFrom(*source);
  }
}

void CRoomUsersPosition::MergeFrom(const CRoomUsersPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roomUsersPosition.CRoomUsersPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
}

void CRoomUsersPosition::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roomUsersPosition.CRoomUsersPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CRoomUsersPosition::CopyFrom(const CRoomUsersPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roomUsersPosition.CRoomUsersPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CRoomUsersPosition::IsInitialized() const {
  return true;
}

void CRoomUsersPosition::InternalSwap(CRoomUsersPosition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(uid_, other->uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CRoomUsersPosition::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SRoomUsersPosition::InitAsDefaultInstance() {
}
class SRoomUsersPosition::_Internal {
 public:
};

void SRoomUsersPosition::clear_positions() {
  positions_.Clear();
}
void SRoomUsersPosition::clear_vrpostlists() {
  vrpostlists_.Clear();
}
SRoomUsersPosition::SRoomUsersPosition()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:roomUsersPosition.SRoomUsersPosition)
}
SRoomUsersPosition::SRoomUsersPosition(const SRoomUsersPosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      positions_(from.positions_),
      vrpostlists_(from.vrpostlists_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:roomUsersPosition.SRoomUsersPosition)
}

void SRoomUsersPosition::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SRoomUsersPosition_roomUsersPosition_2eproto.base);
}

SRoomUsersPosition::~SRoomUsersPosition() {
  // @@protoc_insertion_point(destructor:roomUsersPosition.SRoomUsersPosition)
  SharedDtor();
}

void SRoomUsersPosition::SharedDtor() {
}

void SRoomUsersPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SRoomUsersPosition& SRoomUsersPosition::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SRoomUsersPosition_roomUsersPosition_2eproto.base);
  return *internal_default_instance();
}


void SRoomUsersPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:roomUsersPosition.SRoomUsersPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  positions_.Clear();
  vrpostlists_.Clear();
  _internal_metadata_.Clear();
}

const char* SRoomUsersPosition::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .userPosition.UPosition positions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_positions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .userPosition.VrPosition vrPostLists = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vrpostlists(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SRoomUsersPosition::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:roomUsersPosition.SRoomUsersPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .userPosition.UPosition positions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_positions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_positions(i), target, stream);
  }

  // repeated .userPosition.VrPosition vrPostLists = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_vrpostlists_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_vrpostlists(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roomUsersPosition.SRoomUsersPosition)
  return target;
}

size_t SRoomUsersPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roomUsersPosition.SRoomUsersPosition)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .userPosition.UPosition positions = 1;
  total_size += 1UL * this->_internal_positions_size();
  for (const auto& msg : this->positions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .userPosition.VrPosition vrPostLists = 2;
  total_size += 1UL * this->_internal_vrpostlists_size();
  for (const auto& msg : this->vrpostlists_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SRoomUsersPosition::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roomUsersPosition.SRoomUsersPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const SRoomUsersPosition* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SRoomUsersPosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roomUsersPosition.SRoomUsersPosition)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roomUsersPosition.SRoomUsersPosition)
    MergeFrom(*source);
  }
}

void SRoomUsersPosition::MergeFrom(const SRoomUsersPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roomUsersPosition.SRoomUsersPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  positions_.MergeFrom(from.positions_);
  vrpostlists_.MergeFrom(from.vrpostlists_);
}

void SRoomUsersPosition::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roomUsersPosition.SRoomUsersPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SRoomUsersPosition::CopyFrom(const SRoomUsersPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roomUsersPosition.SRoomUsersPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SRoomUsersPosition::IsInitialized() const {
  return true;
}

void SRoomUsersPosition::InternalSwap(SRoomUsersPosition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  positions_.InternalSwap(&other->positions_);
  vrpostlists_.InternalSwap(&other->vrpostlists_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SRoomUsersPosition::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace roomUsersPosition
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::roomUsersPosition::CRoomUsersPosition* Arena::CreateMaybeMessage< ::roomUsersPosition::CRoomUsersPosition >(Arena* arena) {
  return Arena::CreateInternal< ::roomUsersPosition::CRoomUsersPosition >(arena);
}
template<> PROTOBUF_NOINLINE ::roomUsersPosition::SRoomUsersPosition* Arena::CreateMaybeMessage< ::roomUsersPosition::SRoomUsersPosition >(Arena* arena) {
  return Arena::CreateInternal< ::roomUsersPosition::SRoomUsersPosition >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
