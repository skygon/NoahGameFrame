// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mjWarmup.proto

#include "mjWarmup.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_mjWarmup_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BMjAfterimage_mjWarmup_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_userPosition_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UPosition_userPosition_2eproto;
namespace mj {
class CMjOfflineAfterimageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CMjOfflineAfterimage> _instance;
} _CMjOfflineAfterimage_default_instance_;
class BMjAfterimageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BMjAfterimage> _instance;
} _BMjAfterimage_default_instance_;
class SMjOfflineAfterimageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SMjOfflineAfterimage> _instance;
} _SMjOfflineAfterimage_default_instance_;
class CMjLeaveMessageTopicDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CMjLeaveMessageTopic> _instance;
} _CMjLeaveMessageTopic_default_instance_;
class SMjLeaveMessageTopicDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SMjLeaveMessageTopic> _instance;
} _SMjLeaveMessageTopic_default_instance_;
class CMjCreateLeaveMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CMjCreateLeaveMessage> _instance;
} _CMjCreateLeaveMessage_default_instance_;
class SMjCreateLeaveMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SMjCreateLeaveMessage> _instance;
} _SMjCreateLeaveMessage_default_instance_;
class CMjLikeLeaveMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CMjLikeLeaveMessage> _instance;
} _CMjLikeLeaveMessage_default_instance_;
class SMjLikeLeaveMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SMjLikeLeaveMessage> _instance;
} _SMjLikeLeaveMessage_default_instance_;
class CMjDeleteLeaveMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CMjDeleteLeaveMessage> _instance;
} _CMjDeleteLeaveMessage_default_instance_;
class SMjDeleteLeaveMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SMjDeleteLeaveMessage> _instance;
} _SMjDeleteLeaveMessage_default_instance_;
class CMjLeaveMessageListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CMjLeaveMessageList> _instance;
} _CMjLeaveMessageList_default_instance_;
class SMjLeaveMessageListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SMjLeaveMessageList> _instance;
} _SMjLeaveMessageList_default_instance_;
class CMjLeaveMessageDetailDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CMjLeaveMessageDetail> _instance;
} _CMjLeaveMessageDetail_default_instance_;
class SMjLeaveMessageDetailDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SMjLeaveMessageDetail> _instance;
} _SMjLeaveMessageDetail_default_instance_;
class CMjShareLeaveMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CMjShareLeaveMessage> _instance;
} _CMjShareLeaveMessage_default_instance_;
class SMjShareLeaveMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SMjShareLeaveMessage> _instance;
} _SMjShareLeaveMessage_default_instance_;
}  // namespace mj
static void InitDefaultsscc_info_BMjAfterimage_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_BMjAfterimage_default_instance_;
    new (ptr) ::mj::BMjAfterimage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::BMjAfterimage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BMjAfterimage_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_BMjAfterimage_mjWarmup_2eproto}, {
      &scc_info_UPosition_userPosition_2eproto.base,}};

static void InitDefaultsscc_info_CMjCreateLeaveMessage_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_CMjCreateLeaveMessage_default_instance_;
    new (ptr) ::mj::CMjCreateLeaveMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::CMjCreateLeaveMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CMjCreateLeaveMessage_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CMjCreateLeaveMessage_mjWarmup_2eproto}, {}};

static void InitDefaultsscc_info_CMjDeleteLeaveMessage_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_CMjDeleteLeaveMessage_default_instance_;
    new (ptr) ::mj::CMjDeleteLeaveMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::CMjDeleteLeaveMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CMjDeleteLeaveMessage_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CMjDeleteLeaveMessage_mjWarmup_2eproto}, {}};

static void InitDefaultsscc_info_CMjLeaveMessageDetail_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_CMjLeaveMessageDetail_default_instance_;
    new (ptr) ::mj::CMjLeaveMessageDetail();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::CMjLeaveMessageDetail::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CMjLeaveMessageDetail_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CMjLeaveMessageDetail_mjWarmup_2eproto}, {}};

static void InitDefaultsscc_info_CMjLeaveMessageList_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_CMjLeaveMessageList_default_instance_;
    new (ptr) ::mj::CMjLeaveMessageList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::CMjLeaveMessageList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CMjLeaveMessageList_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CMjLeaveMessageList_mjWarmup_2eproto}, {}};

static void InitDefaultsscc_info_CMjLeaveMessageTopic_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_CMjLeaveMessageTopic_default_instance_;
    new (ptr) ::mj::CMjLeaveMessageTopic();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::CMjLeaveMessageTopic::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CMjLeaveMessageTopic_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CMjLeaveMessageTopic_mjWarmup_2eproto}, {}};

static void InitDefaultsscc_info_CMjLikeLeaveMessage_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_CMjLikeLeaveMessage_default_instance_;
    new (ptr) ::mj::CMjLikeLeaveMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::CMjLikeLeaveMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CMjLikeLeaveMessage_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CMjLikeLeaveMessage_mjWarmup_2eproto}, {}};

static void InitDefaultsscc_info_CMjOfflineAfterimage_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_CMjOfflineAfterimage_default_instance_;
    new (ptr) ::mj::CMjOfflineAfterimage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::CMjOfflineAfterimage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CMjOfflineAfterimage_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CMjOfflineAfterimage_mjWarmup_2eproto}, {}};

static void InitDefaultsscc_info_CMjShareLeaveMessage_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_CMjShareLeaveMessage_default_instance_;
    new (ptr) ::mj::CMjShareLeaveMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::CMjShareLeaveMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CMjShareLeaveMessage_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CMjShareLeaveMessage_mjWarmup_2eproto}, {}};

static void InitDefaultsscc_info_SMjCreateLeaveMessage_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_SMjCreateLeaveMessage_default_instance_;
    new (ptr) ::mj::SMjCreateLeaveMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::SMjCreateLeaveMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SMjCreateLeaveMessage_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SMjCreateLeaveMessage_mjWarmup_2eproto}, {}};

static void InitDefaultsscc_info_SMjDeleteLeaveMessage_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_SMjDeleteLeaveMessage_default_instance_;
    new (ptr) ::mj::SMjDeleteLeaveMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::SMjDeleteLeaveMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SMjDeleteLeaveMessage_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SMjDeleteLeaveMessage_mjWarmup_2eproto}, {}};

static void InitDefaultsscc_info_SMjLeaveMessageDetail_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_SMjLeaveMessageDetail_default_instance_;
    new (ptr) ::mj::SMjLeaveMessageDetail();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::SMjLeaveMessageDetail::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SMjLeaveMessageDetail_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SMjLeaveMessageDetail_mjWarmup_2eproto}, {}};

static void InitDefaultsscc_info_SMjLeaveMessageList_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_SMjLeaveMessageList_default_instance_;
    new (ptr) ::mj::SMjLeaveMessageList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::SMjLeaveMessageList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SMjLeaveMessageList_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SMjLeaveMessageList_mjWarmup_2eproto}, {}};

static void InitDefaultsscc_info_SMjLeaveMessageTopic_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_SMjLeaveMessageTopic_default_instance_;
    new (ptr) ::mj::SMjLeaveMessageTopic();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::SMjLeaveMessageTopic::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SMjLeaveMessageTopic_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SMjLeaveMessageTopic_mjWarmup_2eproto}, {}};

static void InitDefaultsscc_info_SMjLikeLeaveMessage_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_SMjLikeLeaveMessage_default_instance_;
    new (ptr) ::mj::SMjLikeLeaveMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::SMjLikeLeaveMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SMjLikeLeaveMessage_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SMjLikeLeaveMessage_mjWarmup_2eproto}, {}};

static void InitDefaultsscc_info_SMjOfflineAfterimage_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_SMjOfflineAfterimage_default_instance_;
    new (ptr) ::mj::SMjOfflineAfterimage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::SMjOfflineAfterimage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SMjOfflineAfterimage_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SMjOfflineAfterimage_mjWarmup_2eproto}, {
      &scc_info_BMjAfterimage_mjWarmup_2eproto.base,}};

static void InitDefaultsscc_info_SMjShareLeaveMessage_mjWarmup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mj::_SMjShareLeaveMessage_default_instance_;
    new (ptr) ::mj::SMjShareLeaveMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mj::SMjShareLeaveMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SMjShareLeaveMessage_mjWarmup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SMjShareLeaveMessage_mjWarmup_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mjWarmup_2eproto[17];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mjWarmup_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mjWarmup_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mjWarmup_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::CMjOfflineAfterimage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::BMjAfterimage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mj::BMjAfterimage, position_),
  PROTOBUF_FIELD_OFFSET(::mj::BMjAfterimage, uid_),
  PROTOBUF_FIELD_OFFSET(::mj::BMjAfterimage, avatarkey_),
  PROTOBUF_FIELD_OFFSET(::mj::BMjAfterimage, nick_),
  PROTOBUF_FIELD_OFFSET(::mj::BMjAfterimage, usericon_),
  PROTOBUF_FIELD_OFFSET(::mj::BMjAfterimage, ipcity_),
  PROTOBUF_FIELD_OFFSET(::mj::BMjAfterimage, gender_),
  PROTOBUF_FIELD_OFFSET(::mj::BMjAfterimage, title_),
  PROTOBUF_FIELD_OFFSET(::mj::BMjAfterimage, certification_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::SMjOfflineAfterimage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mj::SMjOfflineAfterimage, afterimages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::CMjLeaveMessageTopic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageTopic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageTopic, topic_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::CMjCreateLeaveMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mj::CMjCreateLeaveMessage, type_),
  PROTOBUF_FIELD_OFFSET(::mj::CMjCreateLeaveMessage, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::SMjCreateLeaveMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mj::SMjCreateLeaveMessage, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::CMjLikeLeaveMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mj::CMjLikeLeaveMessage, id_),
  PROTOBUF_FIELD_OFFSET(::mj::CMjLikeLeaveMessage, like_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::SMjLikeLeaveMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mj::SMjLikeLeaveMessage, id_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjLikeLeaveMessage, code_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjLikeLeaveMessage, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::CMjDeleteLeaveMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mj::CMjDeleteLeaveMessage, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::SMjDeleteLeaveMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mj::SMjDeleteLeaveMessage, id_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjDeleteLeaveMessage, code_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjDeleteLeaveMessage, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::CMjLeaveMessageList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mj::CMjLeaveMessageList, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageList, msgidlist_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageList, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::CMjLeaveMessageDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mj::CMjLeaveMessageDetail, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageDetail, id_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageDetail, type_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageDetail, content_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageDetail, checkstatus_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageDetail, replyaudio_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageDetail, replychs_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageDetail, replyeng_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageDetail, likenum_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageDetail, uid_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageDetail, nick_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageDetail, headpic_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjLeaveMessageDetail, likestatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::CMjShareLeaveMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mj::CMjShareLeaveMessage, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mj::SMjShareLeaveMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mj::SMjShareLeaveMessage, title_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjShareLeaveMessage, url_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjShareLeaveMessage, content_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjShareLeaveMessage, spacename_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjShareLeaveMessage, cover_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjShareLeaveMessage, wechatcontent_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjShareLeaveMessage, sharetime_),
  PROTOBUF_FIELD_OFFSET(::mj::SMjShareLeaveMessage, visitcount_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mj::CMjOfflineAfterimage)},
  { 5, -1, sizeof(::mj::BMjAfterimage)},
  { 19, -1, sizeof(::mj::SMjOfflineAfterimage)},
  { 25, -1, sizeof(::mj::CMjLeaveMessageTopic)},
  { 30, -1, sizeof(::mj::SMjLeaveMessageTopic)},
  { 36, -1, sizeof(::mj::CMjCreateLeaveMessage)},
  { 43, -1, sizeof(::mj::SMjCreateLeaveMessage)},
  { 49, -1, sizeof(::mj::CMjLikeLeaveMessage)},
  { 56, -1, sizeof(::mj::SMjLikeLeaveMessage)},
  { 64, -1, sizeof(::mj::CMjDeleteLeaveMessage)},
  { 70, -1, sizeof(::mj::SMjDeleteLeaveMessage)},
  { 78, -1, sizeof(::mj::CMjLeaveMessageList)},
  { 84, -1, sizeof(::mj::SMjLeaveMessageList)},
  { 91, -1, sizeof(::mj::CMjLeaveMessageDetail)},
  { 97, -1, sizeof(::mj::SMjLeaveMessageDetail)},
  { 114, -1, sizeof(::mj::CMjShareLeaveMessage)},
  { 120, -1, sizeof(::mj::SMjShareLeaveMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_CMjOfflineAfterimage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_BMjAfterimage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_SMjOfflineAfterimage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_CMjLeaveMessageTopic_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_SMjLeaveMessageTopic_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_CMjCreateLeaveMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_SMjCreateLeaveMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_CMjLikeLeaveMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_SMjLikeLeaveMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_CMjDeleteLeaveMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_SMjDeleteLeaveMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_CMjLeaveMessageList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_SMjLeaveMessageList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_CMjLeaveMessageDetail_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_SMjLeaveMessageDetail_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_CMjShareLeaveMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mj::_SMjShareLeaveMessage_default_instance_),
};

const char descriptor_table_protodef_mjWarmup_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016mjWarmup.proto\022\002mj\032\022userPosition.proto"
  "\"\026\n\024CMjOfflineAfterimage\"\300\001\n\rBMjAfterima"
  "ge\022)\n\010position\030\001 \001(\0132\027.userPosition.UPos"
  "ition\022\013\n\003uid\030\002 \001(\005\022\021\n\tavatarKey\030\003 \001(\005\022\014\n"
  "\004nick\030\004 \001(\t\022\020\n\010userIcon\030\005 \001(\t\022\016\n\006ipCity\030"
  "\006 \001(\t\022\016\n\006gender\030\007 \001(\005\022\r\n\005title\030\010 \001(\t\022\025\n\r"
  "certification\030\t \001(\t\">\n\024SMjOfflineAfterim"
  "age\022&\n\013afterimages\030\001 \003(\0132\021.mj.BMjAfterim"
  "age\"\026\n\024CMjLeaveMessageTopic\"%\n\024SMjLeaveM"
  "essageTopic\022\r\n\005topic\030\001 \001(\t\"6\n\025CMjCreateL"
  "eaveMessage\022\014\n\004type\030\001 \001(\005\022\017\n\007content\030\002 \001"
  "(\t\"%\n\025SMjCreateLeaveMessage\022\014\n\004code\030\001 \001("
  "\005\"/\n\023CMjLikeLeaveMessage\022\n\n\002id\030\001 \001(\005\022\014\n\004"
  "like\030\002 \001(\005\"<\n\023SMjLikeLeaveMessage\022\n\n\002id\030"
  "\001 \001(\005\022\014\n\004code\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\"#\n\025CMjD"
  "eleteLeaveMessage\022\n\n\002id\030\001 \001(\005\">\n\025SMjDele"
  "teLeaveMessage\022\n\n\002id\030\001 \001(\005\022\014\n\004code\030\002 \001(\005"
  "\022\013\n\003msg\030\003 \001(\t\"#\n\023CMjLeaveMessageList\022\014\n\004"
  "type\030\001 \001(\005\"6\n\023SMjLeaveMessageList\022\021\n\tmsg"
  "IdList\030\001 \003(\005\022\014\n\004type\030\002 \001(\005\"#\n\025CMjLeaveMe"
  "ssageDetail\022\n\n\002id\030\001 \001(\005\"\340\001\n\025SMjLeaveMess"
  "ageDetail\022\n\n\002id\030\001 \001(\005\022\014\n\004type\030\002 \001(\005\022\017\n\007c"
  "ontent\030\003 \001(\t\022\023\n\013checkStatus\030\004 \001(\005\022\022\n\nrep"
  "lyAudio\030\005 \001(\t\022\020\n\010replyChs\030\006 \001(\t\022\020\n\010reply"
  "Eng\030\007 \001(\t\022\017\n\007likeNum\030\010 \001(\005\022\013\n\003uid\030\t \001(\005\022"
  "\014\n\004nick\030\n \001(\t\022\017\n\007headPic\030\013 \001(\t\022\022\n\nlikeSt"
  "atus\030\014 \001(\010\"\"\n\024CMjShareLeaveMessage\022\n\n\002id"
  "\030\001 \001(\005\"\243\001\n\024SMjShareLeaveMessage\022\r\n\005title"
  "\030\001 \001(\t\022\013\n\003url\030\002 \001(\t\022\017\n\007content\030\003 \001(\t\022\021\n\t"
  "spaceName\030\004 \001(\t\022\r\n\005cover\030\005 \001(\t\022\025\n\rwechat"
  "Content\030\006 \001(\t\022\021\n\tshareTime\030\007 \001(\t\022\022\n\nvisi"
  "tCount\030\010 \001(\005B$\n\030com.dayou.space.protobuf"
  "B\010MJWarmupb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mjWarmup_2eproto_deps[1] = {
  &::descriptor_table_userPosition_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mjWarmup_2eproto_sccs[17] = {
  &scc_info_BMjAfterimage_mjWarmup_2eproto.base,
  &scc_info_CMjCreateLeaveMessage_mjWarmup_2eproto.base,
  &scc_info_CMjDeleteLeaveMessage_mjWarmup_2eproto.base,
  &scc_info_CMjLeaveMessageDetail_mjWarmup_2eproto.base,
  &scc_info_CMjLeaveMessageList_mjWarmup_2eproto.base,
  &scc_info_CMjLeaveMessageTopic_mjWarmup_2eproto.base,
  &scc_info_CMjLikeLeaveMessage_mjWarmup_2eproto.base,
  &scc_info_CMjOfflineAfterimage_mjWarmup_2eproto.base,
  &scc_info_CMjShareLeaveMessage_mjWarmup_2eproto.base,
  &scc_info_SMjCreateLeaveMessage_mjWarmup_2eproto.base,
  &scc_info_SMjDeleteLeaveMessage_mjWarmup_2eproto.base,
  &scc_info_SMjLeaveMessageDetail_mjWarmup_2eproto.base,
  &scc_info_SMjLeaveMessageList_mjWarmup_2eproto.base,
  &scc_info_SMjLeaveMessageTopic_mjWarmup_2eproto.base,
  &scc_info_SMjLikeLeaveMessage_mjWarmup_2eproto.base,
  &scc_info_SMjOfflineAfterimage_mjWarmup_2eproto.base,
  &scc_info_SMjShareLeaveMessage_mjWarmup_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mjWarmup_2eproto_once;
static bool descriptor_table_mjWarmup_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mjWarmup_2eproto = {
  &descriptor_table_mjWarmup_2eproto_initialized, descriptor_table_protodef_mjWarmup_2eproto, "mjWarmup.proto", 1298,
  &descriptor_table_mjWarmup_2eproto_once, descriptor_table_mjWarmup_2eproto_sccs, descriptor_table_mjWarmup_2eproto_deps, 17, 1,
  schemas, file_default_instances, TableStruct_mjWarmup_2eproto::offsets,
  file_level_metadata_mjWarmup_2eproto, 17, file_level_enum_descriptors_mjWarmup_2eproto, file_level_service_descriptors_mjWarmup_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mjWarmup_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mjWarmup_2eproto), true);
namespace mj {

// ===================================================================

void CMjOfflineAfterimage::InitAsDefaultInstance() {
}
class CMjOfflineAfterimage::_Internal {
 public:
};

CMjOfflineAfterimage::CMjOfflineAfterimage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.CMjOfflineAfterimage)
}
CMjOfflineAfterimage::CMjOfflineAfterimage(const CMjOfflineAfterimage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mj.CMjOfflineAfterimage)
}

void CMjOfflineAfterimage::SharedCtor() {
}

CMjOfflineAfterimage::~CMjOfflineAfterimage() {
  // @@protoc_insertion_point(destructor:mj.CMjOfflineAfterimage)
  SharedDtor();
}

void CMjOfflineAfterimage::SharedDtor() {
}

void CMjOfflineAfterimage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMjOfflineAfterimage& CMjOfflineAfterimage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CMjOfflineAfterimage_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void CMjOfflineAfterimage::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.CMjOfflineAfterimage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* CMjOfflineAfterimage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMjOfflineAfterimage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.CMjOfflineAfterimage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.CMjOfflineAfterimage)
  return target;
}

size_t CMjOfflineAfterimage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.CMjOfflineAfterimage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMjOfflineAfterimage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.CMjOfflineAfterimage)
  GOOGLE_DCHECK_NE(&from, this);
  const CMjOfflineAfterimage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMjOfflineAfterimage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.CMjOfflineAfterimage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.CMjOfflineAfterimage)
    MergeFrom(*source);
  }
}

void CMjOfflineAfterimage::MergeFrom(const CMjOfflineAfterimage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.CMjOfflineAfterimage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMjOfflineAfterimage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.CMjOfflineAfterimage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMjOfflineAfterimage::CopyFrom(const CMjOfflineAfterimage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.CMjOfflineAfterimage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMjOfflineAfterimage::IsInitialized() const {
  return true;
}

void CMjOfflineAfterimage::InternalSwap(CMjOfflineAfterimage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMjOfflineAfterimage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BMjAfterimage::InitAsDefaultInstance() {
  ::mj::_BMjAfterimage_default_instance_._instance.get_mutable()->position_ = const_cast< ::userPosition::UPosition*>(
      ::userPosition::UPosition::internal_default_instance());
}
class BMjAfterimage::_Internal {
 public:
  static const ::userPosition::UPosition& position(const BMjAfterimage* msg);
};

const ::userPosition::UPosition&
BMjAfterimage::_Internal::position(const BMjAfterimage* msg) {
  return *msg->position_;
}
void BMjAfterimage::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
BMjAfterimage::BMjAfterimage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.BMjAfterimage)
}
BMjAfterimage::BMjAfterimage(const BMjAfterimage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nick_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nick().empty()) {
    nick_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  usericon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_usericon().empty()) {
    usericon_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.usericon_);
  }
  ipcity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ipcity().empty()) {
    ipcity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ipcity_);
  }
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_title().empty()) {
    title_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  certification_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_certification().empty()) {
    certification_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.certification_);
  }
  if (from._internal_has_position()) {
    position_ = new ::userPosition::UPosition(*from.position_);
  } else {
    position_ = nullptr;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gender_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(gender_));
  // @@protoc_insertion_point(copy_constructor:mj.BMjAfterimage)
}

void BMjAfterimage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BMjAfterimage_mjWarmup_2eproto.base);
  nick_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  usericon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ipcity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  certification_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gender_) -
      reinterpret_cast<char*>(&position_)) + sizeof(gender_));
}

BMjAfterimage::~BMjAfterimage() {
  // @@protoc_insertion_point(destructor:mj.BMjAfterimage)
  SharedDtor();
}

void BMjAfterimage::SharedDtor() {
  nick_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  usericon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ipcity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  certification_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
}

void BMjAfterimage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BMjAfterimage& BMjAfterimage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BMjAfterimage_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void BMjAfterimage::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.BMjAfterimage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nick_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  usericon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ipcity_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  certification_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gender_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(gender_));
  _internal_metadata_.Clear();
}

const char* BMjAfterimage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .userPosition.UPosition position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 avatarKey = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          avatarkey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string nick = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_nick();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.BMjAfterimage.nick"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string userIcon = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_usericon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.BMjAfterimage.userIcon"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ipCity = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_ipcity();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.BMjAfterimage.ipCity"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 gender = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          gender_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string title = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.BMjAfterimage.title"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string certification = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_certification();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.BMjAfterimage.certification"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BMjAfterimage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.BMjAfterimage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .userPosition.UPosition position = 1;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::position(this), target, stream);
  }

  // int32 uid = 2;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_uid(), target);
  }

  // int32 avatarKey = 3;
  if (this->avatarkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_avatarkey(), target);
  }

  // string nick = 4;
  if (this->nick().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nick().data(), static_cast<int>(this->_internal_nick().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.BMjAfterimage.nick");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_nick(), target);
  }

  // string userIcon = 5;
  if (this->usericon().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_usericon().data(), static_cast<int>(this->_internal_usericon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.BMjAfterimage.userIcon");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_usericon(), target);
  }

  // string ipCity = 6;
  if (this->ipcity().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ipcity().data(), static_cast<int>(this->_internal_ipcity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.BMjAfterimage.ipCity");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_ipcity(), target);
  }

  // int32 gender = 7;
  if (this->gender() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_gender(), target);
  }

  // string title = 8;
  if (this->title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.BMjAfterimage.title");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_title(), target);
  }

  // string certification = 9;
  if (this->certification().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_certification().data(), static_cast<int>(this->_internal_certification().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.BMjAfterimage.certification");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_certification(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.BMjAfterimage)
  return target;
}

size_t BMjAfterimage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.BMjAfterimage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nick = 4;
  if (this->nick().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nick());
  }

  // string userIcon = 5;
  if (this->usericon().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_usericon());
  }

  // string ipCity = 6;
  if (this->ipcity().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ipcity());
  }

  // string title = 8;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string certification = 9;
  if (this->certification().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_certification());
  }

  // .userPosition.UPosition position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int32 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  // int32 avatarKey = 3;
  if (this->avatarkey() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_avatarkey());
  }

  // int32 gender = 7;
  if (this->gender() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gender());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BMjAfterimage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.BMjAfterimage)
  GOOGLE_DCHECK_NE(&from, this);
  const BMjAfterimage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BMjAfterimage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.BMjAfterimage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.BMjAfterimage)
    MergeFrom(*source);
  }
}

void BMjAfterimage::MergeFrom(const BMjAfterimage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.BMjAfterimage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nick().size() > 0) {

    nick_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  if (from.usericon().size() > 0) {

    usericon_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.usericon_);
  }
  if (from.ipcity().size() > 0) {

    ipcity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ipcity_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.certification().size() > 0) {

    certification_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.certification_);
  }
  if (from.has_position()) {
    _internal_mutable_position()->::userPosition::UPosition::MergeFrom(from._internal_position());
  }
  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  if (from.avatarkey() != 0) {
    _internal_set_avatarkey(from._internal_avatarkey());
  }
  if (from.gender() != 0) {
    _internal_set_gender(from._internal_gender());
  }
}

void BMjAfterimage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.BMjAfterimage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BMjAfterimage::CopyFrom(const BMjAfterimage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.BMjAfterimage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BMjAfterimage::IsInitialized() const {
  return true;
}

void BMjAfterimage::InternalSwap(BMjAfterimage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  nick_.Swap(&other->nick_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  usericon_.Swap(&other->usericon_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ipcity_.Swap(&other->ipcity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  certification_.Swap(&other->certification_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  swap(uid_, other->uid_);
  swap(avatarkey_, other->avatarkey_);
  swap(gender_, other->gender_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BMjAfterimage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SMjOfflineAfterimage::InitAsDefaultInstance() {
}
class SMjOfflineAfterimage::_Internal {
 public:
};

SMjOfflineAfterimage::SMjOfflineAfterimage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.SMjOfflineAfterimage)
}
SMjOfflineAfterimage::SMjOfflineAfterimage(const SMjOfflineAfterimage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      afterimages_(from.afterimages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mj.SMjOfflineAfterimage)
}

void SMjOfflineAfterimage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SMjOfflineAfterimage_mjWarmup_2eproto.base);
}

SMjOfflineAfterimage::~SMjOfflineAfterimage() {
  // @@protoc_insertion_point(destructor:mj.SMjOfflineAfterimage)
  SharedDtor();
}

void SMjOfflineAfterimage::SharedDtor() {
}

void SMjOfflineAfterimage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SMjOfflineAfterimage& SMjOfflineAfterimage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SMjOfflineAfterimage_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void SMjOfflineAfterimage::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.SMjOfflineAfterimage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  afterimages_.Clear();
  _internal_metadata_.Clear();
}

const char* SMjOfflineAfterimage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .mj.BMjAfterimage afterimages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_afterimages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SMjOfflineAfterimage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.SMjOfflineAfterimage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mj.BMjAfterimage afterimages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_afterimages_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_afterimages(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.SMjOfflineAfterimage)
  return target;
}

size_t SMjOfflineAfterimage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.SMjOfflineAfterimage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mj.BMjAfterimage afterimages = 1;
  total_size += 1UL * this->_internal_afterimages_size();
  for (const auto& msg : this->afterimages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMjOfflineAfterimage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.SMjOfflineAfterimage)
  GOOGLE_DCHECK_NE(&from, this);
  const SMjOfflineAfterimage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SMjOfflineAfterimage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.SMjOfflineAfterimage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.SMjOfflineAfterimage)
    MergeFrom(*source);
  }
}

void SMjOfflineAfterimage::MergeFrom(const SMjOfflineAfterimage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.SMjOfflineAfterimage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  afterimages_.MergeFrom(from.afterimages_);
}

void SMjOfflineAfterimage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.SMjOfflineAfterimage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMjOfflineAfterimage::CopyFrom(const SMjOfflineAfterimage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.SMjOfflineAfterimage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMjOfflineAfterimage::IsInitialized() const {
  return true;
}

void SMjOfflineAfterimage::InternalSwap(SMjOfflineAfterimage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  afterimages_.InternalSwap(&other->afterimages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SMjOfflineAfterimage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CMjLeaveMessageTopic::InitAsDefaultInstance() {
}
class CMjLeaveMessageTopic::_Internal {
 public:
};

CMjLeaveMessageTopic::CMjLeaveMessageTopic()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.CMjLeaveMessageTopic)
}
CMjLeaveMessageTopic::CMjLeaveMessageTopic(const CMjLeaveMessageTopic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mj.CMjLeaveMessageTopic)
}

void CMjLeaveMessageTopic::SharedCtor() {
}

CMjLeaveMessageTopic::~CMjLeaveMessageTopic() {
  // @@protoc_insertion_point(destructor:mj.CMjLeaveMessageTopic)
  SharedDtor();
}

void CMjLeaveMessageTopic::SharedDtor() {
}

void CMjLeaveMessageTopic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMjLeaveMessageTopic& CMjLeaveMessageTopic::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CMjLeaveMessageTopic_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void CMjLeaveMessageTopic::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.CMjLeaveMessageTopic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* CMjLeaveMessageTopic::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMjLeaveMessageTopic::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.CMjLeaveMessageTopic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.CMjLeaveMessageTopic)
  return target;
}

size_t CMjLeaveMessageTopic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.CMjLeaveMessageTopic)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMjLeaveMessageTopic::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.CMjLeaveMessageTopic)
  GOOGLE_DCHECK_NE(&from, this);
  const CMjLeaveMessageTopic* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMjLeaveMessageTopic>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.CMjLeaveMessageTopic)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.CMjLeaveMessageTopic)
    MergeFrom(*source);
  }
}

void CMjLeaveMessageTopic::MergeFrom(const CMjLeaveMessageTopic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.CMjLeaveMessageTopic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMjLeaveMessageTopic::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.CMjLeaveMessageTopic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMjLeaveMessageTopic::CopyFrom(const CMjLeaveMessageTopic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.CMjLeaveMessageTopic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMjLeaveMessageTopic::IsInitialized() const {
  return true;
}

void CMjLeaveMessageTopic::InternalSwap(CMjLeaveMessageTopic* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMjLeaveMessageTopic::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SMjLeaveMessageTopic::InitAsDefaultInstance() {
}
class SMjLeaveMessageTopic::_Internal {
 public:
};

SMjLeaveMessageTopic::SMjLeaveMessageTopic()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.SMjLeaveMessageTopic)
}
SMjLeaveMessageTopic::SMjLeaveMessageTopic(const SMjLeaveMessageTopic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_topic().empty()) {
    topic_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  // @@protoc_insertion_point(copy_constructor:mj.SMjLeaveMessageTopic)
}

void SMjLeaveMessageTopic::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SMjLeaveMessageTopic_mjWarmup_2eproto.base);
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SMjLeaveMessageTopic::~SMjLeaveMessageTopic() {
  // @@protoc_insertion_point(destructor:mj.SMjLeaveMessageTopic)
  SharedDtor();
}

void SMjLeaveMessageTopic::SharedDtor() {
  topic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SMjLeaveMessageTopic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SMjLeaveMessageTopic& SMjLeaveMessageTopic::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SMjLeaveMessageTopic_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void SMjLeaveMessageTopic::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.SMjLeaveMessageTopic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* SMjLeaveMessageTopic::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string topic = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_topic();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjLeaveMessageTopic.topic"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SMjLeaveMessageTopic::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.SMjLeaveMessageTopic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_topic().data(), static_cast<int>(this->_internal_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjLeaveMessageTopic.topic");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_topic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.SMjLeaveMessageTopic)
  return target;
}

size_t SMjLeaveMessageTopic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.SMjLeaveMessageTopic)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_topic());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMjLeaveMessageTopic::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.SMjLeaveMessageTopic)
  GOOGLE_DCHECK_NE(&from, this);
  const SMjLeaveMessageTopic* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SMjLeaveMessageTopic>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.SMjLeaveMessageTopic)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.SMjLeaveMessageTopic)
    MergeFrom(*source);
  }
}

void SMjLeaveMessageTopic::MergeFrom(const SMjLeaveMessageTopic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.SMjLeaveMessageTopic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
}

void SMjLeaveMessageTopic::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.SMjLeaveMessageTopic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMjLeaveMessageTopic::CopyFrom(const SMjLeaveMessageTopic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.SMjLeaveMessageTopic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMjLeaveMessageTopic::IsInitialized() const {
  return true;
}

void SMjLeaveMessageTopic::InternalSwap(SMjLeaveMessageTopic* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  topic_.Swap(&other->topic_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata SMjLeaveMessageTopic::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CMjCreateLeaveMessage::InitAsDefaultInstance() {
}
class CMjCreateLeaveMessage::_Internal {
 public:
};

CMjCreateLeaveMessage::CMjCreateLeaveMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.CMjCreateLeaveMessage)
}
CMjCreateLeaveMessage::CMjCreateLeaveMessage(const CMjCreateLeaveMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:mj.CMjCreateLeaveMessage)
}

void CMjCreateLeaveMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CMjCreateLeaveMessage_mjWarmup_2eproto.base);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

CMjCreateLeaveMessage::~CMjCreateLeaveMessage() {
  // @@protoc_insertion_point(destructor:mj.CMjCreateLeaveMessage)
  SharedDtor();
}

void CMjCreateLeaveMessage::SharedDtor() {
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMjCreateLeaveMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMjCreateLeaveMessage& CMjCreateLeaveMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CMjCreateLeaveMessage_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void CMjCreateLeaveMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.CMjCreateLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

const char* CMjCreateLeaveMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.CMjCreateLeaveMessage.content"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMjCreateLeaveMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.CMjCreateLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.CMjCreateLeaveMessage.content");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.CMjCreateLeaveMessage)
  return target;
}

size_t CMjCreateLeaveMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.CMjCreateLeaveMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMjCreateLeaveMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.CMjCreateLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CMjCreateLeaveMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMjCreateLeaveMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.CMjCreateLeaveMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.CMjCreateLeaveMessage)
    MergeFrom(*source);
  }
}

void CMjCreateLeaveMessage::MergeFrom(const CMjCreateLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.CMjCreateLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void CMjCreateLeaveMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.CMjCreateLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMjCreateLeaveMessage::CopyFrom(const CMjCreateLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.CMjCreateLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMjCreateLeaveMessage::IsInitialized() const {
  return true;
}

void CMjCreateLeaveMessage::InternalSwap(CMjCreateLeaveMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMjCreateLeaveMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SMjCreateLeaveMessage::InitAsDefaultInstance() {
}
class SMjCreateLeaveMessage::_Internal {
 public:
};

SMjCreateLeaveMessage::SMjCreateLeaveMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.SMjCreateLeaveMessage)
}
SMjCreateLeaveMessage::SMjCreateLeaveMessage(const SMjCreateLeaveMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:mj.SMjCreateLeaveMessage)
}

void SMjCreateLeaveMessage::SharedCtor() {
  code_ = 0;
}

SMjCreateLeaveMessage::~SMjCreateLeaveMessage() {
  // @@protoc_insertion_point(destructor:mj.SMjCreateLeaveMessage)
  SharedDtor();
}

void SMjCreateLeaveMessage::SharedDtor() {
}

void SMjCreateLeaveMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SMjCreateLeaveMessage& SMjCreateLeaveMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SMjCreateLeaveMessage_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void SMjCreateLeaveMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.SMjCreateLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear();
}

const char* SMjCreateLeaveMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SMjCreateLeaveMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.SMjCreateLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.SMjCreateLeaveMessage)
  return target;
}

size_t SMjCreateLeaveMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.SMjCreateLeaveMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMjCreateLeaveMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.SMjCreateLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SMjCreateLeaveMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SMjCreateLeaveMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.SMjCreateLeaveMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.SMjCreateLeaveMessage)
    MergeFrom(*source);
  }
}

void SMjCreateLeaveMessage::MergeFrom(const SMjCreateLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.SMjCreateLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void SMjCreateLeaveMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.SMjCreateLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMjCreateLeaveMessage::CopyFrom(const SMjCreateLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.SMjCreateLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMjCreateLeaveMessage::IsInitialized() const {
  return true;
}

void SMjCreateLeaveMessage::InternalSwap(SMjCreateLeaveMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SMjCreateLeaveMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CMjLikeLeaveMessage::InitAsDefaultInstance() {
}
class CMjLikeLeaveMessage::_Internal {
 public:
};

CMjLikeLeaveMessage::CMjLikeLeaveMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.CMjLikeLeaveMessage)
}
CMjLikeLeaveMessage::CMjLikeLeaveMessage(const CMjLikeLeaveMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&like_) -
    reinterpret_cast<char*>(&id_)) + sizeof(like_));
  // @@protoc_insertion_point(copy_constructor:mj.CMjLikeLeaveMessage)
}

void CMjLikeLeaveMessage::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&like_) -
      reinterpret_cast<char*>(&id_)) + sizeof(like_));
}

CMjLikeLeaveMessage::~CMjLikeLeaveMessage() {
  // @@protoc_insertion_point(destructor:mj.CMjLikeLeaveMessage)
  SharedDtor();
}

void CMjLikeLeaveMessage::SharedDtor() {
}

void CMjLikeLeaveMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMjLikeLeaveMessage& CMjLikeLeaveMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CMjLikeLeaveMessage_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void CMjLikeLeaveMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.CMjLikeLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&like_) -
      reinterpret_cast<char*>(&id_)) + sizeof(like_));
  _internal_metadata_.Clear();
}

const char* CMjLikeLeaveMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 like = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          like_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMjLikeLeaveMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.CMjLikeLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 like = 2;
  if (this->like() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_like(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.CMjLikeLeaveMessage)
  return target;
}

size_t CMjLikeLeaveMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.CMjLikeLeaveMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 like = 2;
  if (this->like() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_like());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMjLikeLeaveMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.CMjLikeLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CMjLikeLeaveMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMjLikeLeaveMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.CMjLikeLeaveMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.CMjLikeLeaveMessage)
    MergeFrom(*source);
  }
}

void CMjLikeLeaveMessage::MergeFrom(const CMjLikeLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.CMjLikeLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.like() != 0) {
    _internal_set_like(from._internal_like());
  }
}

void CMjLikeLeaveMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.CMjLikeLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMjLikeLeaveMessage::CopyFrom(const CMjLikeLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.CMjLikeLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMjLikeLeaveMessage::IsInitialized() const {
  return true;
}

void CMjLikeLeaveMessage::InternalSwap(CMjLikeLeaveMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
  swap(like_, other->like_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMjLikeLeaveMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SMjLikeLeaveMessage::InitAsDefaultInstance() {
}
class SMjLikeLeaveMessage::_Internal {
 public:
};

SMjLikeLeaveMessage::SMjLikeLeaveMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.SMjLikeLeaveMessage)
}
SMjLikeLeaveMessage::SMjLikeLeaveMessage(const SMjLikeLeaveMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&id_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:mj.SMjLikeLeaveMessage)
}

void SMjLikeLeaveMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SMjLikeLeaveMessage_mjWarmup_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&id_)) + sizeof(code_));
}

SMjLikeLeaveMessage::~SMjLikeLeaveMessage() {
  // @@protoc_insertion_point(destructor:mj.SMjLikeLeaveMessage)
  SharedDtor();
}

void SMjLikeLeaveMessage::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SMjLikeLeaveMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SMjLikeLeaveMessage& SMjLikeLeaveMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SMjLikeLeaveMessage_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void SMjLikeLeaveMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.SMjLikeLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&id_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

const char* SMjLikeLeaveMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjLikeLeaveMessage.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SMjLikeLeaveMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.SMjLikeLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjLikeLeaveMessage.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.SMjLikeLeaveMessage)
  return target;
}

size_t SMjLikeLeaveMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.SMjLikeLeaveMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMjLikeLeaveMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.SMjLikeLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SMjLikeLeaveMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SMjLikeLeaveMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.SMjLikeLeaveMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.SMjLikeLeaveMessage)
    MergeFrom(*source);
  }
}

void SMjLikeLeaveMessage::MergeFrom(const SMjLikeLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.SMjLikeLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void SMjLikeLeaveMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.SMjLikeLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMjLikeLeaveMessage::CopyFrom(const SMjLikeLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.SMjLikeLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMjLikeLeaveMessage::IsInitialized() const {
  return true;
}

void SMjLikeLeaveMessage::InternalSwap(SMjLikeLeaveMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SMjLikeLeaveMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CMjDeleteLeaveMessage::InitAsDefaultInstance() {
}
class CMjDeleteLeaveMessage::_Internal {
 public:
};

CMjDeleteLeaveMessage::CMjDeleteLeaveMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.CMjDeleteLeaveMessage)
}
CMjDeleteLeaveMessage::CMjDeleteLeaveMessage(const CMjDeleteLeaveMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mj.CMjDeleteLeaveMessage)
}

void CMjDeleteLeaveMessage::SharedCtor() {
  id_ = 0;
}

CMjDeleteLeaveMessage::~CMjDeleteLeaveMessage() {
  // @@protoc_insertion_point(destructor:mj.CMjDeleteLeaveMessage)
  SharedDtor();
}

void CMjDeleteLeaveMessage::SharedDtor() {
}

void CMjDeleteLeaveMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMjDeleteLeaveMessage& CMjDeleteLeaveMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CMjDeleteLeaveMessage_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void CMjDeleteLeaveMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.CMjDeleteLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear();
}

const char* CMjDeleteLeaveMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMjDeleteLeaveMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.CMjDeleteLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.CMjDeleteLeaveMessage)
  return target;
}

size_t CMjDeleteLeaveMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.CMjDeleteLeaveMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMjDeleteLeaveMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.CMjDeleteLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CMjDeleteLeaveMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMjDeleteLeaveMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.CMjDeleteLeaveMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.CMjDeleteLeaveMessage)
    MergeFrom(*source);
  }
}

void CMjDeleteLeaveMessage::MergeFrom(const CMjDeleteLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.CMjDeleteLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void CMjDeleteLeaveMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.CMjDeleteLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMjDeleteLeaveMessage::CopyFrom(const CMjDeleteLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.CMjDeleteLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMjDeleteLeaveMessage::IsInitialized() const {
  return true;
}

void CMjDeleteLeaveMessage::InternalSwap(CMjDeleteLeaveMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMjDeleteLeaveMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SMjDeleteLeaveMessage::InitAsDefaultInstance() {
}
class SMjDeleteLeaveMessage::_Internal {
 public:
};

SMjDeleteLeaveMessage::SMjDeleteLeaveMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.SMjDeleteLeaveMessage)
}
SMjDeleteLeaveMessage::SMjDeleteLeaveMessage(const SMjDeleteLeaveMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&id_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:mj.SMjDeleteLeaveMessage)
}

void SMjDeleteLeaveMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SMjDeleteLeaveMessage_mjWarmup_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&id_)) + sizeof(code_));
}

SMjDeleteLeaveMessage::~SMjDeleteLeaveMessage() {
  // @@protoc_insertion_point(destructor:mj.SMjDeleteLeaveMessage)
  SharedDtor();
}

void SMjDeleteLeaveMessage::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SMjDeleteLeaveMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SMjDeleteLeaveMessage& SMjDeleteLeaveMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SMjDeleteLeaveMessage_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void SMjDeleteLeaveMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.SMjDeleteLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&id_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

const char* SMjDeleteLeaveMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjDeleteLeaveMessage.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SMjDeleteLeaveMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.SMjDeleteLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjDeleteLeaveMessage.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.SMjDeleteLeaveMessage)
  return target;
}

size_t SMjDeleteLeaveMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.SMjDeleteLeaveMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMjDeleteLeaveMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.SMjDeleteLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SMjDeleteLeaveMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SMjDeleteLeaveMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.SMjDeleteLeaveMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.SMjDeleteLeaveMessage)
    MergeFrom(*source);
  }
}

void SMjDeleteLeaveMessage::MergeFrom(const SMjDeleteLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.SMjDeleteLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void SMjDeleteLeaveMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.SMjDeleteLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMjDeleteLeaveMessage::CopyFrom(const SMjDeleteLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.SMjDeleteLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMjDeleteLeaveMessage::IsInitialized() const {
  return true;
}

void SMjDeleteLeaveMessage::InternalSwap(SMjDeleteLeaveMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SMjDeleteLeaveMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CMjLeaveMessageList::InitAsDefaultInstance() {
}
class CMjLeaveMessageList::_Internal {
 public:
};

CMjLeaveMessageList::CMjLeaveMessageList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.CMjLeaveMessageList)
}
CMjLeaveMessageList::CMjLeaveMessageList(const CMjLeaveMessageList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:mj.CMjLeaveMessageList)
}

void CMjLeaveMessageList::SharedCtor() {
  type_ = 0;
}

CMjLeaveMessageList::~CMjLeaveMessageList() {
  // @@protoc_insertion_point(destructor:mj.CMjLeaveMessageList)
  SharedDtor();
}

void CMjLeaveMessageList::SharedDtor() {
}

void CMjLeaveMessageList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMjLeaveMessageList& CMjLeaveMessageList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CMjLeaveMessageList_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void CMjLeaveMessageList::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.CMjLeaveMessageList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear();
}

const char* CMjLeaveMessageList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMjLeaveMessageList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.CMjLeaveMessageList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.CMjLeaveMessageList)
  return target;
}

size_t CMjLeaveMessageList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.CMjLeaveMessageList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMjLeaveMessageList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.CMjLeaveMessageList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMjLeaveMessageList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMjLeaveMessageList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.CMjLeaveMessageList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.CMjLeaveMessageList)
    MergeFrom(*source);
  }
}

void CMjLeaveMessageList::MergeFrom(const CMjLeaveMessageList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.CMjLeaveMessageList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void CMjLeaveMessageList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.CMjLeaveMessageList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMjLeaveMessageList::CopyFrom(const CMjLeaveMessageList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.CMjLeaveMessageList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMjLeaveMessageList::IsInitialized() const {
  return true;
}

void CMjLeaveMessageList::InternalSwap(CMjLeaveMessageList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMjLeaveMessageList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SMjLeaveMessageList::InitAsDefaultInstance() {
}
class SMjLeaveMessageList::_Internal {
 public:
};

SMjLeaveMessageList::SMjLeaveMessageList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.SMjLeaveMessageList)
}
SMjLeaveMessageList::SMjLeaveMessageList(const SMjLeaveMessageList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      msgidlist_(from.msgidlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:mj.SMjLeaveMessageList)
}

void SMjLeaveMessageList::SharedCtor() {
  type_ = 0;
}

SMjLeaveMessageList::~SMjLeaveMessageList() {
  // @@protoc_insertion_point(destructor:mj.SMjLeaveMessageList)
  SharedDtor();
}

void SMjLeaveMessageList::SharedDtor() {
}

void SMjLeaveMessageList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SMjLeaveMessageList& SMjLeaveMessageList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SMjLeaveMessageList_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void SMjLeaveMessageList::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.SMjLeaveMessageList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgidlist_.Clear();
  type_ = 0;
  _internal_metadata_.Clear();
}

const char* SMjLeaveMessageList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 msgIdList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_msgidlist(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_msgidlist(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SMjLeaveMessageList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.SMjLeaveMessageList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 msgIdList = 1;
  {
    int byte_size = _msgidlist_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_msgidlist(), byte_size, target);
    }
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.SMjLeaveMessageList)
  return target;
}

size_t SMjLeaveMessageList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.SMjLeaveMessageList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 msgIdList = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->msgidlist_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _msgidlist_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMjLeaveMessageList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.SMjLeaveMessageList)
  GOOGLE_DCHECK_NE(&from, this);
  const SMjLeaveMessageList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SMjLeaveMessageList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.SMjLeaveMessageList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.SMjLeaveMessageList)
    MergeFrom(*source);
  }
}

void SMjLeaveMessageList::MergeFrom(const SMjLeaveMessageList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.SMjLeaveMessageList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msgidlist_.MergeFrom(from.msgidlist_);
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void SMjLeaveMessageList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.SMjLeaveMessageList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMjLeaveMessageList::CopyFrom(const SMjLeaveMessageList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.SMjLeaveMessageList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMjLeaveMessageList::IsInitialized() const {
  return true;
}

void SMjLeaveMessageList::InternalSwap(SMjLeaveMessageList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msgidlist_.InternalSwap(&other->msgidlist_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SMjLeaveMessageList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CMjLeaveMessageDetail::InitAsDefaultInstance() {
}
class CMjLeaveMessageDetail::_Internal {
 public:
};

CMjLeaveMessageDetail::CMjLeaveMessageDetail()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.CMjLeaveMessageDetail)
}
CMjLeaveMessageDetail::CMjLeaveMessageDetail(const CMjLeaveMessageDetail& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mj.CMjLeaveMessageDetail)
}

void CMjLeaveMessageDetail::SharedCtor() {
  id_ = 0;
}

CMjLeaveMessageDetail::~CMjLeaveMessageDetail() {
  // @@protoc_insertion_point(destructor:mj.CMjLeaveMessageDetail)
  SharedDtor();
}

void CMjLeaveMessageDetail::SharedDtor() {
}

void CMjLeaveMessageDetail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMjLeaveMessageDetail& CMjLeaveMessageDetail::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CMjLeaveMessageDetail_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void CMjLeaveMessageDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.CMjLeaveMessageDetail)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear();
}

const char* CMjLeaveMessageDetail::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMjLeaveMessageDetail::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.CMjLeaveMessageDetail)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.CMjLeaveMessageDetail)
  return target;
}

size_t CMjLeaveMessageDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.CMjLeaveMessageDetail)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMjLeaveMessageDetail::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.CMjLeaveMessageDetail)
  GOOGLE_DCHECK_NE(&from, this);
  const CMjLeaveMessageDetail* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMjLeaveMessageDetail>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.CMjLeaveMessageDetail)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.CMjLeaveMessageDetail)
    MergeFrom(*source);
  }
}

void CMjLeaveMessageDetail::MergeFrom(const CMjLeaveMessageDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.CMjLeaveMessageDetail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void CMjLeaveMessageDetail::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.CMjLeaveMessageDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMjLeaveMessageDetail::CopyFrom(const CMjLeaveMessageDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.CMjLeaveMessageDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMjLeaveMessageDetail::IsInitialized() const {
  return true;
}

void CMjLeaveMessageDetail::InternalSwap(CMjLeaveMessageDetail* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMjLeaveMessageDetail::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SMjLeaveMessageDetail::InitAsDefaultInstance() {
}
class SMjLeaveMessageDetail::_Internal {
 public:
};

SMjLeaveMessageDetail::SMjLeaveMessageDetail()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.SMjLeaveMessageDetail)
}
SMjLeaveMessageDetail::SMjLeaveMessageDetail(const SMjLeaveMessageDetail& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  replyaudio_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_replyaudio().empty()) {
    replyaudio_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.replyaudio_);
  }
  replychs_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_replychs().empty()) {
    replychs_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.replychs_);
  }
  replyeng_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_replyeng().empty()) {
    replyeng_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.replyeng_);
  }
  nick_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nick().empty()) {
    nick_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  headpic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_headpic().empty()) {
    headpic_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.headpic_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&likestatus_) -
    reinterpret_cast<char*>(&id_)) + sizeof(likestatus_));
  // @@protoc_insertion_point(copy_constructor:mj.SMjLeaveMessageDetail)
}

void SMjLeaveMessageDetail::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SMjLeaveMessageDetail_mjWarmup_2eproto.base);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replyaudio_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replychs_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replyeng_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  headpic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&likestatus_) -
      reinterpret_cast<char*>(&id_)) + sizeof(likestatus_));
}

SMjLeaveMessageDetail::~SMjLeaveMessageDetail() {
  // @@protoc_insertion_point(destructor:mj.SMjLeaveMessageDetail)
  SharedDtor();
}

void SMjLeaveMessageDetail::SharedDtor() {
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replyaudio_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replychs_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replyeng_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  headpic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SMjLeaveMessageDetail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SMjLeaveMessageDetail& SMjLeaveMessageDetail::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SMjLeaveMessageDetail_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void SMjLeaveMessageDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.SMjLeaveMessageDetail)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replyaudio_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replychs_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replyeng_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nick_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  headpic_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&likestatus_) -
      reinterpret_cast<char*>(&id_)) + sizeof(likestatus_));
  _internal_metadata_.Clear();
}

const char* SMjLeaveMessageDetail::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string content = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjLeaveMessageDetail.content"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 checkStatus = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          checkstatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string replyAudio = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_replyaudio();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjLeaveMessageDetail.replyAudio"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string replyChs = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_replychs();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjLeaveMessageDetail.replyChs"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string replyEng = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_replyeng();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjLeaveMessageDetail.replyEng"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 likeNum = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          likenum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 uid = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string nick = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_nick();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjLeaveMessageDetail.nick"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string headPic = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_headpic();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjLeaveMessageDetail.headPic"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool likeStatus = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          likestatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SMjLeaveMessageDetail::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.SMjLeaveMessageDetail)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_type(), target);
  }

  // string content = 3;
  if (this->content().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjLeaveMessageDetail.content");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_content(), target);
  }

  // int32 checkStatus = 4;
  if (this->checkstatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_checkstatus(), target);
  }

  // string replyAudio = 5;
  if (this->replyaudio().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_replyaudio().data(), static_cast<int>(this->_internal_replyaudio().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjLeaveMessageDetail.replyAudio");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_replyaudio(), target);
  }

  // string replyChs = 6;
  if (this->replychs().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_replychs().data(), static_cast<int>(this->_internal_replychs().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjLeaveMessageDetail.replyChs");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_replychs(), target);
  }

  // string replyEng = 7;
  if (this->replyeng().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_replyeng().data(), static_cast<int>(this->_internal_replyeng().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjLeaveMessageDetail.replyEng");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_replyeng(), target);
  }

  // int32 likeNum = 8;
  if (this->likenum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_likenum(), target);
  }

  // int32 uid = 9;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_uid(), target);
  }

  // string nick = 10;
  if (this->nick().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nick().data(), static_cast<int>(this->_internal_nick().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjLeaveMessageDetail.nick");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_nick(), target);
  }

  // string headPic = 11;
  if (this->headpic().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_headpic().data(), static_cast<int>(this->_internal_headpic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjLeaveMessageDetail.headPic");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_headpic(), target);
  }

  // bool likeStatus = 12;
  if (this->likestatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_likestatus(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.SMjLeaveMessageDetail)
  return target;
}

size_t SMjLeaveMessageDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.SMjLeaveMessageDetail)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 3;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // string replyAudio = 5;
  if (this->replyaudio().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_replyaudio());
  }

  // string replyChs = 6;
  if (this->replychs().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_replychs());
  }

  // string replyEng = 7;
  if (this->replyeng().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_replyeng());
  }

  // string nick = 10;
  if (this->nick().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nick());
  }

  // string headPic = 11;
  if (this->headpic().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_headpic());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // int32 checkStatus = 4;
  if (this->checkstatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_checkstatus());
  }

  // int32 likeNum = 8;
  if (this->likenum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_likenum());
  }

  // int32 uid = 9;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  // bool likeStatus = 12;
  if (this->likestatus() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMjLeaveMessageDetail::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.SMjLeaveMessageDetail)
  GOOGLE_DCHECK_NE(&from, this);
  const SMjLeaveMessageDetail* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SMjLeaveMessageDetail>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.SMjLeaveMessageDetail)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.SMjLeaveMessageDetail)
    MergeFrom(*source);
  }
}

void SMjLeaveMessageDetail::MergeFrom(const SMjLeaveMessageDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.SMjLeaveMessageDetail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.replyaudio().size() > 0) {

    replyaudio_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.replyaudio_);
  }
  if (from.replychs().size() > 0) {

    replychs_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.replychs_);
  }
  if (from.replyeng().size() > 0) {

    replyeng_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.replyeng_);
  }
  if (from.nick().size() > 0) {

    nick_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  if (from.headpic().size() > 0) {

    headpic_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.headpic_);
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.checkstatus() != 0) {
    _internal_set_checkstatus(from._internal_checkstatus());
  }
  if (from.likenum() != 0) {
    _internal_set_likenum(from._internal_likenum());
  }
  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  if (from.likestatus() != 0) {
    _internal_set_likestatus(from._internal_likestatus());
  }
}

void SMjLeaveMessageDetail::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.SMjLeaveMessageDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMjLeaveMessageDetail::CopyFrom(const SMjLeaveMessageDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.SMjLeaveMessageDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMjLeaveMessageDetail::IsInitialized() const {
  return true;
}

void SMjLeaveMessageDetail::InternalSwap(SMjLeaveMessageDetail* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  replyaudio_.Swap(&other->replyaudio_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  replychs_.Swap(&other->replychs_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  replyeng_.Swap(&other->replyeng_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nick_.Swap(&other->nick_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  headpic_.Swap(&other->headpic_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(checkstatus_, other->checkstatus_);
  swap(likenum_, other->likenum_);
  swap(uid_, other->uid_);
  swap(likestatus_, other->likestatus_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SMjLeaveMessageDetail::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CMjShareLeaveMessage::InitAsDefaultInstance() {
}
class CMjShareLeaveMessage::_Internal {
 public:
};

CMjShareLeaveMessage::CMjShareLeaveMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.CMjShareLeaveMessage)
}
CMjShareLeaveMessage::CMjShareLeaveMessage(const CMjShareLeaveMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mj.CMjShareLeaveMessage)
}

void CMjShareLeaveMessage::SharedCtor() {
  id_ = 0;
}

CMjShareLeaveMessage::~CMjShareLeaveMessage() {
  // @@protoc_insertion_point(destructor:mj.CMjShareLeaveMessage)
  SharedDtor();
}

void CMjShareLeaveMessage::SharedDtor() {
}

void CMjShareLeaveMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMjShareLeaveMessage& CMjShareLeaveMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CMjShareLeaveMessage_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void CMjShareLeaveMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.CMjShareLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear();
}

const char* CMjShareLeaveMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMjShareLeaveMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.CMjShareLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.CMjShareLeaveMessage)
  return target;
}

size_t CMjShareLeaveMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.CMjShareLeaveMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMjShareLeaveMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.CMjShareLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CMjShareLeaveMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMjShareLeaveMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.CMjShareLeaveMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.CMjShareLeaveMessage)
    MergeFrom(*source);
  }
}

void CMjShareLeaveMessage::MergeFrom(const CMjShareLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.CMjShareLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void CMjShareLeaveMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.CMjShareLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMjShareLeaveMessage::CopyFrom(const CMjShareLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.CMjShareLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMjShareLeaveMessage::IsInitialized() const {
  return true;
}

void CMjShareLeaveMessage::InternalSwap(CMjShareLeaveMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMjShareLeaveMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SMjShareLeaveMessage::InitAsDefaultInstance() {
}
class SMjShareLeaveMessage::_Internal {
 public:
};

SMjShareLeaveMessage::SMjShareLeaveMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mj.SMjShareLeaveMessage)
}
SMjShareLeaveMessage::SMjShareLeaveMessage(const SMjShareLeaveMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_title().empty()) {
    title_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  spacename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_spacename().empty()) {
    spacename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.spacename_);
  }
  cover_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cover().empty()) {
    cover_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cover_);
  }
  wechatcontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_wechatcontent().empty()) {
    wechatcontent_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.wechatcontent_);
  }
  sharetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sharetime().empty()) {
    sharetime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sharetime_);
  }
  visitcount_ = from.visitcount_;
  // @@protoc_insertion_point(copy_constructor:mj.SMjShareLeaveMessage)
}

void SMjShareLeaveMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SMjShareLeaveMessage_mjWarmup_2eproto.base);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  spacename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cover_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  wechatcontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sharetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  visitcount_ = 0;
}

SMjShareLeaveMessage::~SMjShareLeaveMessage() {
  // @@protoc_insertion_point(destructor:mj.SMjShareLeaveMessage)
  SharedDtor();
}

void SMjShareLeaveMessage::SharedDtor() {
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  spacename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cover_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  wechatcontent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sharetime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SMjShareLeaveMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SMjShareLeaveMessage& SMjShareLeaveMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SMjShareLeaveMessage_mjWarmup_2eproto.base);
  return *internal_default_instance();
}


void SMjShareLeaveMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mj.SMjShareLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  spacename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cover_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  wechatcontent_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sharetime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  visitcount_ = 0;
  _internal_metadata_.Clear();
}

const char* SMjShareLeaveMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string title = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjShareLeaveMessage.title"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjShareLeaveMessage.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string content = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjShareLeaveMessage.content"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string spaceName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_spacename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjShareLeaveMessage.spaceName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cover = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_cover();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjShareLeaveMessage.cover"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string wechatContent = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_wechatcontent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjShareLeaveMessage.wechatContent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string shareTime = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_sharetime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mj.SMjShareLeaveMessage.shareTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 visitCount = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          visitcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SMjShareLeaveMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mj.SMjShareLeaveMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjShareLeaveMessage.title");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_title(), target);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjShareLeaveMessage.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  // string content = 3;
  if (this->content().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjShareLeaveMessage.content");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_content(), target);
  }

  // string spaceName = 4;
  if (this->spacename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_spacename().data(), static_cast<int>(this->_internal_spacename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjShareLeaveMessage.spaceName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_spacename(), target);
  }

  // string cover = 5;
  if (this->cover().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cover().data(), static_cast<int>(this->_internal_cover().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjShareLeaveMessage.cover");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_cover(), target);
  }

  // string wechatContent = 6;
  if (this->wechatcontent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_wechatcontent().data(), static_cast<int>(this->_internal_wechatcontent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjShareLeaveMessage.wechatContent");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_wechatcontent(), target);
  }

  // string shareTime = 7;
  if (this->sharetime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sharetime().data(), static_cast<int>(this->_internal_sharetime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mj.SMjShareLeaveMessage.shareTime");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_sharetime(), target);
  }

  // int32 visitCount = 8;
  if (this->visitcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_visitcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mj.SMjShareLeaveMessage)
  return target;
}

size_t SMjShareLeaveMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mj.SMjShareLeaveMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string content = 3;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // string spaceName = 4;
  if (this->spacename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_spacename());
  }

  // string cover = 5;
  if (this->cover().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cover());
  }

  // string wechatContent = 6;
  if (this->wechatcontent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_wechatcontent());
  }

  // string shareTime = 7;
  if (this->sharetime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sharetime());
  }

  // int32 visitCount = 8;
  if (this->visitcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_visitcount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMjShareLeaveMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mj.SMjShareLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SMjShareLeaveMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SMjShareLeaveMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mj.SMjShareLeaveMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mj.SMjShareLeaveMessage)
    MergeFrom(*source);
  }
}

void SMjShareLeaveMessage::MergeFrom(const SMjShareLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mj.SMjShareLeaveMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.spacename().size() > 0) {

    spacename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.spacename_);
  }
  if (from.cover().size() > 0) {

    cover_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cover_);
  }
  if (from.wechatcontent().size() > 0) {

    wechatcontent_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.wechatcontent_);
  }
  if (from.sharetime().size() > 0) {

    sharetime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sharetime_);
  }
  if (from.visitcount() != 0) {
    _internal_set_visitcount(from._internal_visitcount());
  }
}

void SMjShareLeaveMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mj.SMjShareLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMjShareLeaveMessage::CopyFrom(const SMjShareLeaveMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mj.SMjShareLeaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMjShareLeaveMessage::IsInitialized() const {
  return true;
}

void SMjShareLeaveMessage::InternalSwap(SMjShareLeaveMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  spacename_.Swap(&other->spacename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cover_.Swap(&other->cover_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  wechatcontent_.Swap(&other->wechatcontent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sharetime_.Swap(&other->sharetime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(visitcount_, other->visitcount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SMjShareLeaveMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mj
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mj::CMjOfflineAfterimage* Arena::CreateMaybeMessage< ::mj::CMjOfflineAfterimage >(Arena* arena) {
  return Arena::CreateInternal< ::mj::CMjOfflineAfterimage >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::BMjAfterimage* Arena::CreateMaybeMessage< ::mj::BMjAfterimage >(Arena* arena) {
  return Arena::CreateInternal< ::mj::BMjAfterimage >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::SMjOfflineAfterimage* Arena::CreateMaybeMessage< ::mj::SMjOfflineAfterimage >(Arena* arena) {
  return Arena::CreateInternal< ::mj::SMjOfflineAfterimage >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::CMjLeaveMessageTopic* Arena::CreateMaybeMessage< ::mj::CMjLeaveMessageTopic >(Arena* arena) {
  return Arena::CreateInternal< ::mj::CMjLeaveMessageTopic >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::SMjLeaveMessageTopic* Arena::CreateMaybeMessage< ::mj::SMjLeaveMessageTopic >(Arena* arena) {
  return Arena::CreateInternal< ::mj::SMjLeaveMessageTopic >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::CMjCreateLeaveMessage* Arena::CreateMaybeMessage< ::mj::CMjCreateLeaveMessage >(Arena* arena) {
  return Arena::CreateInternal< ::mj::CMjCreateLeaveMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::SMjCreateLeaveMessage* Arena::CreateMaybeMessage< ::mj::SMjCreateLeaveMessage >(Arena* arena) {
  return Arena::CreateInternal< ::mj::SMjCreateLeaveMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::CMjLikeLeaveMessage* Arena::CreateMaybeMessage< ::mj::CMjLikeLeaveMessage >(Arena* arena) {
  return Arena::CreateInternal< ::mj::CMjLikeLeaveMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::SMjLikeLeaveMessage* Arena::CreateMaybeMessage< ::mj::SMjLikeLeaveMessage >(Arena* arena) {
  return Arena::CreateInternal< ::mj::SMjLikeLeaveMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::CMjDeleteLeaveMessage* Arena::CreateMaybeMessage< ::mj::CMjDeleteLeaveMessage >(Arena* arena) {
  return Arena::CreateInternal< ::mj::CMjDeleteLeaveMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::SMjDeleteLeaveMessage* Arena::CreateMaybeMessage< ::mj::SMjDeleteLeaveMessage >(Arena* arena) {
  return Arena::CreateInternal< ::mj::SMjDeleteLeaveMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::CMjLeaveMessageList* Arena::CreateMaybeMessage< ::mj::CMjLeaveMessageList >(Arena* arena) {
  return Arena::CreateInternal< ::mj::CMjLeaveMessageList >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::SMjLeaveMessageList* Arena::CreateMaybeMessage< ::mj::SMjLeaveMessageList >(Arena* arena) {
  return Arena::CreateInternal< ::mj::SMjLeaveMessageList >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::CMjLeaveMessageDetail* Arena::CreateMaybeMessage< ::mj::CMjLeaveMessageDetail >(Arena* arena) {
  return Arena::CreateInternal< ::mj::CMjLeaveMessageDetail >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::SMjLeaveMessageDetail* Arena::CreateMaybeMessage< ::mj::SMjLeaveMessageDetail >(Arena* arena) {
  return Arena::CreateInternal< ::mj::SMjLeaveMessageDetail >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::CMjShareLeaveMessage* Arena::CreateMaybeMessage< ::mj::CMjShareLeaveMessage >(Arena* arena) {
  return Arena::CreateInternal< ::mj::CMjShareLeaveMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::mj::SMjShareLeaveMessage* Arena::CreateMaybeMessage< ::mj::SMjShareLeaveMessage >(Arena* arena) {
  return Arena::CreateInternal< ::mj::SMjShareLeaveMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
