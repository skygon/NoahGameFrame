// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spaceScenesBackpack.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_spaceScenesBackpack_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_spaceScenesBackpack_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_spaceScenesBackpack_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_spaceScenesBackpack_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_spaceScenesBackpack_2eproto;
namespace spaceScenesBackpack {
class CspaceScenesBackpackList;
class CspaceScenesBackpackListDefaultTypeInternal;
extern CspaceScenesBackpackListDefaultTypeInternal _CspaceScenesBackpackList_default_instance_;
class SpaceScenes;
class SpaceScenesDefaultTypeInternal;
extern SpaceScenesDefaultTypeInternal _SpaceScenes_default_instance_;
class SspaceScenesBackpackList;
class SspaceScenesBackpackListDefaultTypeInternal;
extern SspaceScenesBackpackListDefaultTypeInternal _SspaceScenesBackpackList_default_instance_;
}  // namespace spaceScenesBackpack
PROTOBUF_NAMESPACE_OPEN
template<> ::spaceScenesBackpack::CspaceScenesBackpackList* Arena::CreateMaybeMessage<::spaceScenesBackpack::CspaceScenesBackpackList>(Arena*);
template<> ::spaceScenesBackpack::SpaceScenes* Arena::CreateMaybeMessage<::spaceScenesBackpack::SpaceScenes>(Arena*);
template<> ::spaceScenesBackpack::SspaceScenesBackpackList* Arena::CreateMaybeMessage<::spaceScenesBackpack::SspaceScenesBackpackList>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace spaceScenesBackpack {

// ===================================================================

class CspaceScenesBackpackList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:spaceScenesBackpack.CspaceScenesBackpackList) */ {
 public:
  CspaceScenesBackpackList();
  virtual ~CspaceScenesBackpackList();

  CspaceScenesBackpackList(const CspaceScenesBackpackList& from);
  CspaceScenesBackpackList(CspaceScenesBackpackList&& from) noexcept
    : CspaceScenesBackpackList() {
    *this = ::std::move(from);
  }

  inline CspaceScenesBackpackList& operator=(const CspaceScenesBackpackList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CspaceScenesBackpackList& operator=(CspaceScenesBackpackList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CspaceScenesBackpackList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CspaceScenesBackpackList* internal_default_instance() {
    return reinterpret_cast<const CspaceScenesBackpackList*>(
               &_CspaceScenesBackpackList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CspaceScenesBackpackList& a, CspaceScenesBackpackList& b) {
    a.Swap(&b);
  }
  inline void Swap(CspaceScenesBackpackList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CspaceScenesBackpackList* New() const final {
    return CreateMaybeMessage<CspaceScenesBackpackList>(nullptr);
  }

  CspaceScenesBackpackList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CspaceScenesBackpackList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CspaceScenesBackpackList& from);
  void MergeFrom(const CspaceScenesBackpackList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CspaceScenesBackpackList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "spaceScenesBackpack.CspaceScenesBackpackList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_spaceScenesBackpack_2eproto);
    return ::descriptor_table_spaceScenesBackpack_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurPageFieldNumber = 1,
    kPageLimitFieldNumber = 2,
  };
  // int32 curPage = 1;
  void clear_curpage();
  ::PROTOBUF_NAMESPACE_ID::int32 curpage() const;
  void set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_curpage() const;
  void _internal_set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 pageLimit = 2;
  void clear_pagelimit();
  ::PROTOBUF_NAMESPACE_ID::int32 pagelimit() const;
  void set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pagelimit() const;
  void _internal_set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:spaceScenesBackpack.CspaceScenesBackpackList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 curpage_;
  ::PROTOBUF_NAMESPACE_ID::int32 pagelimit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_spaceScenesBackpack_2eproto;
};
// -------------------------------------------------------------------

class SpaceScenes :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:spaceScenesBackpack.SpaceScenes) */ {
 public:
  SpaceScenes();
  virtual ~SpaceScenes();

  SpaceScenes(const SpaceScenes& from);
  SpaceScenes(SpaceScenes&& from) noexcept
    : SpaceScenes() {
    *this = ::std::move(from);
  }

  inline SpaceScenes& operator=(const SpaceScenes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpaceScenes& operator=(SpaceScenes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SpaceScenes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SpaceScenes* internal_default_instance() {
    return reinterpret_cast<const SpaceScenes*>(
               &_SpaceScenes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SpaceScenes& a, SpaceScenes& b) {
    a.Swap(&b);
  }
  inline void Swap(SpaceScenes* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpaceScenes* New() const final {
    return CreateMaybeMessage<SpaceScenes>(nullptr);
  }

  SpaceScenes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpaceScenes>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SpaceScenes& from);
  void MergeFrom(const SpaceScenes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpaceScenes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "spaceScenesBackpack.SpaceScenes";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_spaceScenesBackpack_2eproto);
    return ::descriptor_table_spaceScenesBackpack_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpaceScenBaIdsFieldNumber = 11,
    kNameFieldNumber = 2,
    kCoverFieldNumber = 3,
    kResourceFieldNumber = 6,
    kIdFieldNumber = 1,
    kCreateUidFieldNumber = 4,
    kCheckStatusFieldNumber = 5,
    kIsSaleFieldNumber = 7,
    kPriceFieldNumber = 8,
    kTroveGoodsIdFieldNumber = 9,
    kShoppingIdFieldNumber = 10,
    kNumFieldNumber = 12,
  };
  // repeated int32 spaceScenBaIds = 11;
  int spacescenbaids_size() const;
  private:
  int _internal_spacescenbaids_size() const;
  public:
  void clear_spacescenbaids();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_spacescenbaids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_spacescenbaids() const;
  void _internal_add_spacescenbaids(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_spacescenbaids();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 spacescenbaids(int index) const;
  void set_spacescenbaids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_spacescenbaids(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      spacescenbaids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_spacescenbaids();

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string cover = 3;
  void clear_cover();
  const std::string& cover() const;
  void set_cover(const std::string& value);
  void set_cover(std::string&& value);
  void set_cover(const char* value);
  void set_cover(const char* value, size_t size);
  std::string* mutable_cover();
  std::string* release_cover();
  void set_allocated_cover(std::string* cover);
  private:
  const std::string& _internal_cover() const;
  void _internal_set_cover(const std::string& value);
  std::string* _internal_mutable_cover();
  public:

  // string resource = 6;
  void clear_resource();
  const std::string& resource() const;
  void set_resource(const std::string& value);
  void set_resource(std::string&& value);
  void set_resource(const char* value);
  void set_resource(const char* value, size_t size);
  std::string* mutable_resource();
  std::string* release_resource();
  void set_allocated_resource(std::string* resource);
  private:
  const std::string& _internal_resource() const;
  void _internal_set_resource(const std::string& value);
  std::string* _internal_mutable_resource();
  public:

  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 createUid = 4;
  void clear_createuid();
  ::PROTOBUF_NAMESPACE_ID::int32 createuid() const;
  void set_createuid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_createuid() const;
  void _internal_set_createuid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 checkStatus = 5;
  void clear_checkstatus();
  ::PROTOBUF_NAMESPACE_ID::int32 checkstatus() const;
  void set_checkstatus(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_checkstatus() const;
  void _internal_set_checkstatus(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 isSale = 7;
  void clear_issale();
  ::PROTOBUF_NAMESPACE_ID::int32 issale() const;
  void set_issale(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_issale() const;
  void _internal_set_issale(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 price = 8;
  void clear_price();
  ::PROTOBUF_NAMESPACE_ID::int32 price() const;
  void set_price(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_price() const;
  void _internal_set_price(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 troveGoodsId = 9;
  void clear_trovegoodsid();
  ::PROTOBUF_NAMESPACE_ID::int32 trovegoodsid() const;
  void set_trovegoodsid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_trovegoodsid() const;
  void _internal_set_trovegoodsid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 shoppingId = 10;
  void clear_shoppingid();
  ::PROTOBUF_NAMESPACE_ID::int32 shoppingid() const;
  void set_shoppingid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_shoppingid() const;
  void _internal_set_shoppingid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 num = 12;
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::int32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:spaceScenesBackpack.SpaceScenes)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > spacescenbaids_;
  mutable std::atomic<int> _spacescenbaids_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cover_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr resource_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 createuid_;
  ::PROTOBUF_NAMESPACE_ID::int32 checkstatus_;
  ::PROTOBUF_NAMESPACE_ID::int32 issale_;
  ::PROTOBUF_NAMESPACE_ID::int32 price_;
  ::PROTOBUF_NAMESPACE_ID::int32 trovegoodsid_;
  ::PROTOBUF_NAMESPACE_ID::int32 shoppingid_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_spaceScenesBackpack_2eproto;
};
// -------------------------------------------------------------------

class SspaceScenesBackpackList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:spaceScenesBackpack.SspaceScenesBackpackList) */ {
 public:
  SspaceScenesBackpackList();
  virtual ~SspaceScenesBackpackList();

  SspaceScenesBackpackList(const SspaceScenesBackpackList& from);
  SspaceScenesBackpackList(SspaceScenesBackpackList&& from) noexcept
    : SspaceScenesBackpackList() {
    *this = ::std::move(from);
  }

  inline SspaceScenesBackpackList& operator=(const SspaceScenesBackpackList& from) {
    CopyFrom(from);
    return *this;
  }
  inline SspaceScenesBackpackList& operator=(SspaceScenesBackpackList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SspaceScenesBackpackList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SspaceScenesBackpackList* internal_default_instance() {
    return reinterpret_cast<const SspaceScenesBackpackList*>(
               &_SspaceScenesBackpackList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SspaceScenesBackpackList& a, SspaceScenesBackpackList& b) {
    a.Swap(&b);
  }
  inline void Swap(SspaceScenesBackpackList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SspaceScenesBackpackList* New() const final {
    return CreateMaybeMessage<SspaceScenesBackpackList>(nullptr);
  }

  SspaceScenesBackpackList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SspaceScenesBackpackList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SspaceScenesBackpackList& from);
  void MergeFrom(const SspaceScenesBackpackList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SspaceScenesBackpackList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "spaceScenesBackpack.SspaceScenesBackpackList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_spaceScenesBackpack_2eproto);
    return ::descriptor_table_spaceScenesBackpack_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kListFieldNumber = 1,
    kTotalFieldNumber = 2,
    kCurPageFieldNumber = 3,
    kPageLimitFieldNumber = 4,
  };
  // repeated .spaceScenesBackpack.SpaceScenes list = 1;
  int list_size() const;
  private:
  int _internal_list_size() const;
  public:
  void clear_list();
  ::spaceScenesBackpack::SpaceScenes* mutable_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::spaceScenesBackpack::SpaceScenes >*
      mutable_list();
  private:
  const ::spaceScenesBackpack::SpaceScenes& _internal_list(int index) const;
  ::spaceScenesBackpack::SpaceScenes* _internal_add_list();
  public:
  const ::spaceScenesBackpack::SpaceScenes& list(int index) const;
  ::spaceScenesBackpack::SpaceScenes* add_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::spaceScenesBackpack::SpaceScenes >&
      list() const;

  // int32 total = 2;
  void clear_total();
  ::PROTOBUF_NAMESPACE_ID::int32 total() const;
  void set_total(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_total() const;
  void _internal_set_total(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 curPage = 3;
  void clear_curpage();
  ::PROTOBUF_NAMESPACE_ID::int32 curpage() const;
  void set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_curpage() const;
  void _internal_set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 pageLimit = 4;
  void clear_pagelimit();
  ::PROTOBUF_NAMESPACE_ID::int32 pagelimit() const;
  void set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pagelimit() const;
  void _internal_set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:spaceScenesBackpack.SspaceScenesBackpackList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::spaceScenesBackpack::SpaceScenes > list_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_;
  ::PROTOBUF_NAMESPACE_ID::int32 curpage_;
  ::PROTOBUF_NAMESPACE_ID::int32 pagelimit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_spaceScenesBackpack_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CspaceScenesBackpackList

// int32 curPage = 1;
inline void CspaceScenesBackpackList::clear_curpage() {
  curpage_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CspaceScenesBackpackList::_internal_curpage() const {
  return curpage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CspaceScenesBackpackList::curpage() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.CspaceScenesBackpackList.curPage)
  return _internal_curpage();
}
inline void CspaceScenesBackpackList::_internal_set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  curpage_ = value;
}
inline void CspaceScenesBackpackList::set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_curpage(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.CspaceScenesBackpackList.curPage)
}

// int32 pageLimit = 2;
inline void CspaceScenesBackpackList::clear_pagelimit() {
  pagelimit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CspaceScenesBackpackList::_internal_pagelimit() const {
  return pagelimit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CspaceScenesBackpackList::pagelimit() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.CspaceScenesBackpackList.pageLimit)
  return _internal_pagelimit();
}
inline void CspaceScenesBackpackList::_internal_set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pagelimit_ = value;
}
inline void CspaceScenesBackpackList::set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pagelimit(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.CspaceScenesBackpackList.pageLimit)
}

// -------------------------------------------------------------------

// SpaceScenes

// int32 id = 1;
inline void SpaceScenes::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::id() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SpaceScenes.id)
  return _internal_id();
}
inline void SpaceScenes::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void SpaceScenes::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.SpaceScenes.id)
}

// string name = 2;
inline void SpaceScenes::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SpaceScenes::name() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SpaceScenes.name)
  return _internal_name();
}
inline void SpaceScenes::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.SpaceScenes.name)
}
inline std::string* SpaceScenes::mutable_name() {
  // @@protoc_insertion_point(field_mutable:spaceScenesBackpack.SpaceScenes.name)
  return _internal_mutable_name();
}
inline const std::string& SpaceScenes::_internal_name() const {
  return name_.GetNoArena();
}
inline void SpaceScenes::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SpaceScenes::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:spaceScenesBackpack.SpaceScenes.name)
}
inline void SpaceScenes::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:spaceScenesBackpack.SpaceScenes.name)
}
inline void SpaceScenes::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:spaceScenesBackpack.SpaceScenes.name)
}
inline std::string* SpaceScenes::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SpaceScenes::release_name() {
  // @@protoc_insertion_point(field_release:spaceScenesBackpack.SpaceScenes.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SpaceScenes::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:spaceScenesBackpack.SpaceScenes.name)
}

// string cover = 3;
inline void SpaceScenes::clear_cover() {
  cover_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SpaceScenes::cover() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SpaceScenes.cover)
  return _internal_cover();
}
inline void SpaceScenes::set_cover(const std::string& value) {
  _internal_set_cover(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.SpaceScenes.cover)
}
inline std::string* SpaceScenes::mutable_cover() {
  // @@protoc_insertion_point(field_mutable:spaceScenesBackpack.SpaceScenes.cover)
  return _internal_mutable_cover();
}
inline const std::string& SpaceScenes::_internal_cover() const {
  return cover_.GetNoArena();
}
inline void SpaceScenes::_internal_set_cover(const std::string& value) {
  
  cover_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SpaceScenes::set_cover(std::string&& value) {
  
  cover_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:spaceScenesBackpack.SpaceScenes.cover)
}
inline void SpaceScenes::set_cover(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cover_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:spaceScenesBackpack.SpaceScenes.cover)
}
inline void SpaceScenes::set_cover(const char* value, size_t size) {
  
  cover_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:spaceScenesBackpack.SpaceScenes.cover)
}
inline std::string* SpaceScenes::_internal_mutable_cover() {
  
  return cover_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SpaceScenes::release_cover() {
  // @@protoc_insertion_point(field_release:spaceScenesBackpack.SpaceScenes.cover)
  
  return cover_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SpaceScenes::set_allocated_cover(std::string* cover) {
  if (cover != nullptr) {
    
  } else {
    
  }
  cover_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cover);
  // @@protoc_insertion_point(field_set_allocated:spaceScenesBackpack.SpaceScenes.cover)
}

// int32 createUid = 4;
inline void SpaceScenes::clear_createuid() {
  createuid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::_internal_createuid() const {
  return createuid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::createuid() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SpaceScenes.createUid)
  return _internal_createuid();
}
inline void SpaceScenes::_internal_set_createuid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  createuid_ = value;
}
inline void SpaceScenes::set_createuid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_createuid(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.SpaceScenes.createUid)
}

// int32 checkStatus = 5;
inline void SpaceScenes::clear_checkstatus() {
  checkstatus_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::_internal_checkstatus() const {
  return checkstatus_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::checkstatus() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SpaceScenes.checkStatus)
  return _internal_checkstatus();
}
inline void SpaceScenes::_internal_set_checkstatus(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  checkstatus_ = value;
}
inline void SpaceScenes::set_checkstatus(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_checkstatus(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.SpaceScenes.checkStatus)
}

// string resource = 6;
inline void SpaceScenes::clear_resource() {
  resource_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SpaceScenes::resource() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SpaceScenes.resource)
  return _internal_resource();
}
inline void SpaceScenes::set_resource(const std::string& value) {
  _internal_set_resource(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.SpaceScenes.resource)
}
inline std::string* SpaceScenes::mutable_resource() {
  // @@protoc_insertion_point(field_mutable:spaceScenesBackpack.SpaceScenes.resource)
  return _internal_mutable_resource();
}
inline const std::string& SpaceScenes::_internal_resource() const {
  return resource_.GetNoArena();
}
inline void SpaceScenes::_internal_set_resource(const std::string& value) {
  
  resource_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SpaceScenes::set_resource(std::string&& value) {
  
  resource_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:spaceScenesBackpack.SpaceScenes.resource)
}
inline void SpaceScenes::set_resource(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  resource_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:spaceScenesBackpack.SpaceScenes.resource)
}
inline void SpaceScenes::set_resource(const char* value, size_t size) {
  
  resource_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:spaceScenesBackpack.SpaceScenes.resource)
}
inline std::string* SpaceScenes::_internal_mutable_resource() {
  
  return resource_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SpaceScenes::release_resource() {
  // @@protoc_insertion_point(field_release:spaceScenesBackpack.SpaceScenes.resource)
  
  return resource_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SpaceScenes::set_allocated_resource(std::string* resource) {
  if (resource != nullptr) {
    
  } else {
    
  }
  resource_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), resource);
  // @@protoc_insertion_point(field_set_allocated:spaceScenesBackpack.SpaceScenes.resource)
}

// int32 isSale = 7;
inline void SpaceScenes::clear_issale() {
  issale_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::_internal_issale() const {
  return issale_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::issale() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SpaceScenes.isSale)
  return _internal_issale();
}
inline void SpaceScenes::_internal_set_issale(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  issale_ = value;
}
inline void SpaceScenes::set_issale(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_issale(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.SpaceScenes.isSale)
}

// int32 price = 8;
inline void SpaceScenes::clear_price() {
  price_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::_internal_price() const {
  return price_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::price() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SpaceScenes.price)
  return _internal_price();
}
inline void SpaceScenes::_internal_set_price(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  price_ = value;
}
inline void SpaceScenes::set_price(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.SpaceScenes.price)
}

// int32 troveGoodsId = 9;
inline void SpaceScenes::clear_trovegoodsid() {
  trovegoodsid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::_internal_trovegoodsid() const {
  return trovegoodsid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::trovegoodsid() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SpaceScenes.troveGoodsId)
  return _internal_trovegoodsid();
}
inline void SpaceScenes::_internal_set_trovegoodsid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  trovegoodsid_ = value;
}
inline void SpaceScenes::set_trovegoodsid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_trovegoodsid(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.SpaceScenes.troveGoodsId)
}

// int32 shoppingId = 10;
inline void SpaceScenes::clear_shoppingid() {
  shoppingid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::_internal_shoppingid() const {
  return shoppingid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::shoppingid() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SpaceScenes.shoppingId)
  return _internal_shoppingid();
}
inline void SpaceScenes::_internal_set_shoppingid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  shoppingid_ = value;
}
inline void SpaceScenes::set_shoppingid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_shoppingid(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.SpaceScenes.shoppingId)
}

// repeated int32 spaceScenBaIds = 11;
inline int SpaceScenes::_internal_spacescenbaids_size() const {
  return spacescenbaids_.size();
}
inline int SpaceScenes::spacescenbaids_size() const {
  return _internal_spacescenbaids_size();
}
inline void SpaceScenes::clear_spacescenbaids() {
  spacescenbaids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::_internal_spacescenbaids(int index) const {
  return spacescenbaids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::spacescenbaids(int index) const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SpaceScenes.spaceScenBaIds)
  return _internal_spacescenbaids(index);
}
inline void SpaceScenes::set_spacescenbaids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  spacescenbaids_.Set(index, value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.SpaceScenes.spaceScenBaIds)
}
inline void SpaceScenes::_internal_add_spacescenbaids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  spacescenbaids_.Add(value);
}
inline void SpaceScenes::add_spacescenbaids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_spacescenbaids(value);
  // @@protoc_insertion_point(field_add:spaceScenesBackpack.SpaceScenes.spaceScenBaIds)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SpaceScenes::_internal_spacescenbaids() const {
  return spacescenbaids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SpaceScenes::spacescenbaids() const {
  // @@protoc_insertion_point(field_list:spaceScenesBackpack.SpaceScenes.spaceScenBaIds)
  return _internal_spacescenbaids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SpaceScenes::_internal_mutable_spacescenbaids() {
  return &spacescenbaids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SpaceScenes::mutable_spacescenbaids() {
  // @@protoc_insertion_point(field_mutable_list:spaceScenesBackpack.SpaceScenes.spaceScenBaIds)
  return _internal_mutable_spacescenbaids();
}

// int32 num = 12;
inline void SpaceScenes::clear_num() {
  num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceScenes::num() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SpaceScenes.num)
  return _internal_num();
}
inline void SpaceScenes::_internal_set_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  num_ = value;
}
inline void SpaceScenes::set_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.SpaceScenes.num)
}

// -------------------------------------------------------------------

// SspaceScenesBackpackList

// repeated .spaceScenesBackpack.SpaceScenes list = 1;
inline int SspaceScenesBackpackList::_internal_list_size() const {
  return list_.size();
}
inline int SspaceScenesBackpackList::list_size() const {
  return _internal_list_size();
}
inline void SspaceScenesBackpackList::clear_list() {
  list_.Clear();
}
inline ::spaceScenesBackpack::SpaceScenes* SspaceScenesBackpackList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:spaceScenesBackpack.SspaceScenesBackpackList.list)
  return list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::spaceScenesBackpack::SpaceScenes >*
SspaceScenesBackpackList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:spaceScenesBackpack.SspaceScenesBackpackList.list)
  return &list_;
}
inline const ::spaceScenesBackpack::SpaceScenes& SspaceScenesBackpackList::_internal_list(int index) const {
  return list_.Get(index);
}
inline const ::spaceScenesBackpack::SpaceScenes& SspaceScenesBackpackList::list(int index) const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SspaceScenesBackpackList.list)
  return _internal_list(index);
}
inline ::spaceScenesBackpack::SpaceScenes* SspaceScenesBackpackList::_internal_add_list() {
  return list_.Add();
}
inline ::spaceScenesBackpack::SpaceScenes* SspaceScenesBackpackList::add_list() {
  // @@protoc_insertion_point(field_add:spaceScenesBackpack.SspaceScenesBackpackList.list)
  return _internal_add_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::spaceScenesBackpack::SpaceScenes >&
SspaceScenesBackpackList::list() const {
  // @@protoc_insertion_point(field_list:spaceScenesBackpack.SspaceScenesBackpackList.list)
  return list_;
}

// int32 total = 2;
inline void SspaceScenesBackpackList::clear_total() {
  total_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SspaceScenesBackpackList::_internal_total() const {
  return total_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SspaceScenesBackpackList::total() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SspaceScenesBackpackList.total)
  return _internal_total();
}
inline void SspaceScenesBackpackList::_internal_set_total(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  total_ = value;
}
inline void SspaceScenesBackpackList::set_total(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_total(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.SspaceScenesBackpackList.total)
}

// int32 curPage = 3;
inline void SspaceScenesBackpackList::clear_curpage() {
  curpage_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SspaceScenesBackpackList::_internal_curpage() const {
  return curpage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SspaceScenesBackpackList::curpage() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SspaceScenesBackpackList.curPage)
  return _internal_curpage();
}
inline void SspaceScenesBackpackList::_internal_set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  curpage_ = value;
}
inline void SspaceScenesBackpackList::set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_curpage(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.SspaceScenesBackpackList.curPage)
}

// int32 pageLimit = 4;
inline void SspaceScenesBackpackList::clear_pagelimit() {
  pagelimit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SspaceScenesBackpackList::_internal_pagelimit() const {
  return pagelimit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SspaceScenesBackpackList::pagelimit() const {
  // @@protoc_insertion_point(field_get:spaceScenesBackpack.SspaceScenesBackpackList.pageLimit)
  return _internal_pagelimit();
}
inline void SspaceScenesBackpackList::_internal_set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pagelimit_ = value;
}
inline void SspaceScenesBackpackList::set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pagelimit(value);
  // @@protoc_insertion_point(field_set:spaceScenesBackpack.SspaceScenesBackpackList.pageLimit)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace spaceScenesBackpack

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_spaceScenesBackpack_2eproto
