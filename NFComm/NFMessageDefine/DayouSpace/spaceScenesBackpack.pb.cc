// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spaceScenesBackpack.proto

#include "spaceScenesBackpack.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_spaceScenesBackpack_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SpaceScenes_spaceScenesBackpack_2eproto;
namespace spaceScenesBackpack {
class CspaceScenesBackpackListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CspaceScenesBackpackList> _instance;
} _CspaceScenesBackpackList_default_instance_;
class SpaceScenesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SpaceScenes> _instance;
} _SpaceScenes_default_instance_;
class SspaceScenesBackpackListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SspaceScenesBackpackList> _instance;
} _SspaceScenesBackpackList_default_instance_;
}  // namespace spaceScenesBackpack
static void InitDefaultsscc_info_CspaceScenesBackpackList_spaceScenesBackpack_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceScenesBackpack::_CspaceScenesBackpackList_default_instance_;
    new (ptr) ::spaceScenesBackpack::CspaceScenesBackpackList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceScenesBackpack::CspaceScenesBackpackList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CspaceScenesBackpackList_spaceScenesBackpack_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CspaceScenesBackpackList_spaceScenesBackpack_2eproto}, {}};

static void InitDefaultsscc_info_SpaceScenes_spaceScenesBackpack_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceScenesBackpack::_SpaceScenes_default_instance_;
    new (ptr) ::spaceScenesBackpack::SpaceScenes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceScenesBackpack::SpaceScenes::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SpaceScenes_spaceScenesBackpack_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SpaceScenes_spaceScenesBackpack_2eproto}, {}};

static void InitDefaultsscc_info_SspaceScenesBackpackList_spaceScenesBackpack_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::spaceScenesBackpack::_SspaceScenesBackpackList_default_instance_;
    new (ptr) ::spaceScenesBackpack::SspaceScenesBackpackList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::spaceScenesBackpack::SspaceScenesBackpackList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SspaceScenesBackpackList_spaceScenesBackpack_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SspaceScenesBackpackList_spaceScenesBackpack_2eproto}, {
      &scc_info_SpaceScenes_spaceScenesBackpack_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_spaceScenesBackpack_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_spaceScenesBackpack_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_spaceScenesBackpack_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_spaceScenesBackpack_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::CspaceScenesBackpackList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::CspaceScenesBackpackList, curpage_),
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::CspaceScenesBackpackList, pagelimit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SpaceScenes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SpaceScenes, id_),
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SpaceScenes, name_),
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SpaceScenes, cover_),
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SpaceScenes, createuid_),
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SpaceScenes, checkstatus_),
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SpaceScenes, resource_),
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SpaceScenes, issale_),
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SpaceScenes, price_),
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SpaceScenes, trovegoodsid_),
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SpaceScenes, shoppingid_),
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SpaceScenes, spacescenbaids_),
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SpaceScenes, num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SspaceScenesBackpackList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SspaceScenesBackpackList, list_),
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SspaceScenesBackpackList, total_),
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SspaceScenesBackpackList, curpage_),
  PROTOBUF_FIELD_OFFSET(::spaceScenesBackpack::SspaceScenesBackpackList, pagelimit_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::spaceScenesBackpack::CspaceScenesBackpackList)},
  { 7, -1, sizeof(::spaceScenesBackpack::SpaceScenes)},
  { 24, -1, sizeof(::spaceScenesBackpack::SspaceScenesBackpackList)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spaceScenesBackpack::_CspaceScenesBackpackList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spaceScenesBackpack::_SpaceScenes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::spaceScenesBackpack::_SspaceScenesBackpackList_default_instance_),
};

const char descriptor_table_protodef_spaceScenesBackpack_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\031spaceScenesBackpack.proto\022\023spaceScenes"
  "Backpack\">\n\030CspaceScenesBackpackList\022\017\n\007"
  "curPage\030\001 \001(\005\022\021\n\tpageLimit\030\002 \001(\005\"\336\001\n\013Spa"
  "ceScenes\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\r\n\005co"
  "ver\030\003 \001(\t\022\021\n\tcreateUid\030\004 \001(\005\022\023\n\013checkSta"
  "tus\030\005 \001(\005\022\020\n\010resource\030\006 \001(\t\022\016\n\006isSale\030\007 "
  "\001(\005\022\r\n\005price\030\010 \001(\005\022\024\n\014troveGoodsId\030\t \001(\005"
  "\022\022\n\nshoppingId\030\n \001(\005\022\026\n\016spaceScenBaIds\030\013"
  " \003(\005\022\013\n\003num\030\014 \001(\005\"}\n\030SspaceScenesBackpac"
  "kList\022.\n\004list\030\001 \003(\0132 .spaceScenesBackpac"
  "k.SpaceScenes\022\r\n\005total\030\002 \001(\005\022\017\n\007curPage\030"
  "\003 \001(\005\022\021\n\tpageLimit\030\004 \001(\005B/\n\030com.dayou.sp"
  "ace.protobufB\023SpaceScenesBackpackb\006proto"
  "3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_spaceScenesBackpack_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_spaceScenesBackpack_2eproto_sccs[3] = {
  &scc_info_CspaceScenesBackpackList_spaceScenesBackpack_2eproto.base,
  &scc_info_SpaceScenes_spaceScenesBackpack_2eproto.base,
  &scc_info_SspaceScenesBackpackList_spaceScenesBackpack_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_spaceScenesBackpack_2eproto_once;
static bool descriptor_table_spaceScenesBackpack_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_spaceScenesBackpack_2eproto = {
  &descriptor_table_spaceScenesBackpack_2eproto_initialized, descriptor_table_protodef_spaceScenesBackpack_2eproto, "spaceScenesBackpack.proto", 521,
  &descriptor_table_spaceScenesBackpack_2eproto_once, descriptor_table_spaceScenesBackpack_2eproto_sccs, descriptor_table_spaceScenesBackpack_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_spaceScenesBackpack_2eproto::offsets,
  file_level_metadata_spaceScenesBackpack_2eproto, 3, file_level_enum_descriptors_spaceScenesBackpack_2eproto, file_level_service_descriptors_spaceScenesBackpack_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_spaceScenesBackpack_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_spaceScenesBackpack_2eproto), true);
namespace spaceScenesBackpack {

// ===================================================================

void CspaceScenesBackpackList::InitAsDefaultInstance() {
}
class CspaceScenesBackpackList::_Internal {
 public:
};

CspaceScenesBackpackList::CspaceScenesBackpackList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceScenesBackpack.CspaceScenesBackpackList)
}
CspaceScenesBackpackList::CspaceScenesBackpackList(const CspaceScenesBackpackList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&curpage_, &from.curpage_,
    static_cast<size_t>(reinterpret_cast<char*>(&pagelimit_) -
    reinterpret_cast<char*>(&curpage_)) + sizeof(pagelimit_));
  // @@protoc_insertion_point(copy_constructor:spaceScenesBackpack.CspaceScenesBackpackList)
}

void CspaceScenesBackpackList::SharedCtor() {
  ::memset(&curpage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagelimit_) -
      reinterpret_cast<char*>(&curpage_)) + sizeof(pagelimit_));
}

CspaceScenesBackpackList::~CspaceScenesBackpackList() {
  // @@protoc_insertion_point(destructor:spaceScenesBackpack.CspaceScenesBackpackList)
  SharedDtor();
}

void CspaceScenesBackpackList::SharedDtor() {
}

void CspaceScenesBackpackList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CspaceScenesBackpackList& CspaceScenesBackpackList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CspaceScenesBackpackList_spaceScenesBackpack_2eproto.base);
  return *internal_default_instance();
}


void CspaceScenesBackpackList::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceScenesBackpack.CspaceScenesBackpackList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&curpage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagelimit_) -
      reinterpret_cast<char*>(&curpage_)) + sizeof(pagelimit_));
  _internal_metadata_.Clear();
}

const char* CspaceScenesBackpackList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 curPage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          curpage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 pageLimit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          pagelimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CspaceScenesBackpackList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spaceScenesBackpack.CspaceScenesBackpackList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 curPage = 1;
  if (this->curpage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_curpage(), target);
  }

  // int32 pageLimit = 2;
  if (this->pagelimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_pagelimit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceScenesBackpack.CspaceScenesBackpackList)
  return target;
}

size_t CspaceScenesBackpackList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceScenesBackpack.CspaceScenesBackpackList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 curPage = 1;
  if (this->curpage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_curpage());
  }

  // int32 pageLimit = 2;
  if (this->pagelimit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_pagelimit());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CspaceScenesBackpackList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceScenesBackpack.CspaceScenesBackpackList)
  GOOGLE_DCHECK_NE(&from, this);
  const CspaceScenesBackpackList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CspaceScenesBackpackList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceScenesBackpack.CspaceScenesBackpackList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceScenesBackpack.CspaceScenesBackpackList)
    MergeFrom(*source);
  }
}

void CspaceScenesBackpackList::MergeFrom(const CspaceScenesBackpackList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceScenesBackpack.CspaceScenesBackpackList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.curpage() != 0) {
    _internal_set_curpage(from._internal_curpage());
  }
  if (from.pagelimit() != 0) {
    _internal_set_pagelimit(from._internal_pagelimit());
  }
}

void CspaceScenesBackpackList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceScenesBackpack.CspaceScenesBackpackList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CspaceScenesBackpackList::CopyFrom(const CspaceScenesBackpackList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceScenesBackpack.CspaceScenesBackpackList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CspaceScenesBackpackList::IsInitialized() const {
  return true;
}

void CspaceScenesBackpackList::InternalSwap(CspaceScenesBackpackList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(curpage_, other->curpage_);
  swap(pagelimit_, other->pagelimit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CspaceScenesBackpackList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SpaceScenes::InitAsDefaultInstance() {
}
class SpaceScenes::_Internal {
 public:
};

SpaceScenes::SpaceScenes()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceScenesBackpack.SpaceScenes)
}
SpaceScenes::SpaceScenes(const SpaceScenes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      spacescenbaids_(from.spacescenbaids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  cover_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cover().empty()) {
    cover_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cover_);
  }
  resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource().empty()) {
    resource_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.resource_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:spaceScenesBackpack.SpaceScenes)
}

void SpaceScenes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SpaceScenes_spaceScenesBackpack_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cover_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
}

SpaceScenes::~SpaceScenes() {
  // @@protoc_insertion_point(destructor:spaceScenesBackpack.SpaceScenes)
  SharedDtor();
}

void SpaceScenes::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cover_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SpaceScenes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SpaceScenes& SpaceScenes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SpaceScenes_spaceScenesBackpack_2eproto.base);
  return *internal_default_instance();
}


void SpaceScenes::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceScenesBackpack.SpaceScenes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spacescenbaids_.Clear();
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cover_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
  _internal_metadata_.Clear();
}

const char* SpaceScenes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spaceScenesBackpack.SpaceScenes.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cover = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_cover();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spaceScenesBackpack.SpaceScenes.cover"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 createUid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          createuid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 checkStatus = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          checkstatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resource = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_resource();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "spaceScenesBackpack.SpaceScenes.resource"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 isSale = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          issale_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 price = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          price_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 troveGoodsId = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          trovegoodsid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 shoppingId = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          shoppingid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 spaceScenBaIds = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_spacescenbaids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88) {
          _internal_add_spacescenbaids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 num = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpaceScenes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spaceScenesBackpack.SpaceScenes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spaceScenesBackpack.SpaceScenes.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string cover = 3;
  if (this->cover().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cover().data(), static_cast<int>(this->_internal_cover().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spaceScenesBackpack.SpaceScenes.cover");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_cover(), target);
  }

  // int32 createUid = 4;
  if (this->createuid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_createuid(), target);
  }

  // int32 checkStatus = 5;
  if (this->checkstatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_checkstatus(), target);
  }

  // string resource = 6;
  if (this->resource().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource().data(), static_cast<int>(this->_internal_resource().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "spaceScenesBackpack.SpaceScenes.resource");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_resource(), target);
  }

  // int32 isSale = 7;
  if (this->issale() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_issale(), target);
  }

  // int32 price = 8;
  if (this->price() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_price(), target);
  }

  // int32 troveGoodsId = 9;
  if (this->trovegoodsid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_trovegoodsid(), target);
  }

  // int32 shoppingId = 10;
  if (this->shoppingid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_shoppingid(), target);
  }

  // repeated int32 spaceScenBaIds = 11;
  {
    int byte_size = _spacescenbaids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          11, _internal_spacescenbaids(), byte_size, target);
    }
  }

  // int32 num = 12;
  if (this->num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceScenesBackpack.SpaceScenes)
  return target;
}

size_t SpaceScenes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceScenesBackpack.SpaceScenes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 spaceScenBaIds = 11;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->spacescenbaids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _spacescenbaids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string cover = 3;
  if (this->cover().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cover());
  }

  // string resource = 6;
  if (this->resource().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 createUid = 4;
  if (this->createuid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_createuid());
  }

  // int32 checkStatus = 5;
  if (this->checkstatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_checkstatus());
  }

  // int32 isSale = 7;
  if (this->issale() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_issale());
  }

  // int32 price = 8;
  if (this->price() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_price());
  }

  // int32 troveGoodsId = 9;
  if (this->trovegoodsid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_trovegoodsid());
  }

  // int32 shoppingId = 10;
  if (this->shoppingid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_shoppingid());
  }

  // int32 num = 12;
  if (this->num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpaceScenes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceScenesBackpack.SpaceScenes)
  GOOGLE_DCHECK_NE(&from, this);
  const SpaceScenes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpaceScenes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceScenesBackpack.SpaceScenes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceScenesBackpack.SpaceScenes)
    MergeFrom(*source);
  }
}

void SpaceScenes::MergeFrom(const SpaceScenes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceScenesBackpack.SpaceScenes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spacescenbaids_.MergeFrom(from.spacescenbaids_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.cover().size() > 0) {

    cover_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cover_);
  }
  if (from.resource().size() > 0) {

    resource_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.resource_);
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.createuid() != 0) {
    _internal_set_createuid(from._internal_createuid());
  }
  if (from.checkstatus() != 0) {
    _internal_set_checkstatus(from._internal_checkstatus());
  }
  if (from.issale() != 0) {
    _internal_set_issale(from._internal_issale());
  }
  if (from.price() != 0) {
    _internal_set_price(from._internal_price());
  }
  if (from.trovegoodsid() != 0) {
    _internal_set_trovegoodsid(from._internal_trovegoodsid());
  }
  if (from.shoppingid() != 0) {
    _internal_set_shoppingid(from._internal_shoppingid());
  }
  if (from.num() != 0) {
    _internal_set_num(from._internal_num());
  }
}

void SpaceScenes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceScenesBackpack.SpaceScenes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpaceScenes::CopyFrom(const SpaceScenes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceScenesBackpack.SpaceScenes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpaceScenes::IsInitialized() const {
  return true;
}

void SpaceScenes::InternalSwap(SpaceScenes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  spacescenbaids_.InternalSwap(&other->spacescenbaids_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cover_.Swap(&other->cover_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  resource_.Swap(&other->resource_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(createuid_, other->createuid_);
  swap(checkstatus_, other->checkstatus_);
  swap(issale_, other->issale_);
  swap(price_, other->price_);
  swap(trovegoodsid_, other->trovegoodsid_);
  swap(shoppingid_, other->shoppingid_);
  swap(num_, other->num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpaceScenes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SspaceScenesBackpackList::InitAsDefaultInstance() {
}
class SspaceScenesBackpackList::_Internal {
 public:
};

SspaceScenesBackpackList::SspaceScenesBackpackList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spaceScenesBackpack.SspaceScenesBackpackList)
}
SspaceScenesBackpackList::SspaceScenesBackpackList(const SspaceScenesBackpackList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_, &from.total_,
    static_cast<size_t>(reinterpret_cast<char*>(&pagelimit_) -
    reinterpret_cast<char*>(&total_)) + sizeof(pagelimit_));
  // @@protoc_insertion_point(copy_constructor:spaceScenesBackpack.SspaceScenesBackpackList)
}

void SspaceScenesBackpackList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SspaceScenesBackpackList_spaceScenesBackpack_2eproto.base);
  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagelimit_) -
      reinterpret_cast<char*>(&total_)) + sizeof(pagelimit_));
}

SspaceScenesBackpackList::~SspaceScenesBackpackList() {
  // @@protoc_insertion_point(destructor:spaceScenesBackpack.SspaceScenesBackpackList)
  SharedDtor();
}

void SspaceScenesBackpackList::SharedDtor() {
}

void SspaceScenesBackpackList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SspaceScenesBackpackList& SspaceScenesBackpackList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SspaceScenesBackpackList_spaceScenesBackpack_2eproto.base);
  return *internal_default_instance();
}


void SspaceScenesBackpackList::Clear() {
// @@protoc_insertion_point(message_clear_start:spaceScenesBackpack.SspaceScenesBackpackList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagelimit_) -
      reinterpret_cast<char*>(&total_)) + sizeof(pagelimit_));
  _internal_metadata_.Clear();
}

const char* SspaceScenesBackpackList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .spaceScenesBackpack.SpaceScenes list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 total = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          total_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 curPage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          curpage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 pageLimit = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          pagelimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SspaceScenesBackpackList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:spaceScenesBackpack.SspaceScenesBackpackList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .spaceScenesBackpack.SpaceScenes list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_list(i), target, stream);
  }

  // int32 total = 2;
  if (this->total() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_total(), target);
  }

  // int32 curPage = 3;
  if (this->curpage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_curpage(), target);
  }

  // int32 pageLimit = 4;
  if (this->pagelimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_pagelimit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spaceScenesBackpack.SspaceScenesBackpackList)
  return target;
}

size_t SspaceScenesBackpackList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spaceScenesBackpack.SspaceScenesBackpackList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .spaceScenesBackpack.SpaceScenes list = 1;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 total = 2;
  if (this->total() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total());
  }

  // int32 curPage = 3;
  if (this->curpage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_curpage());
  }

  // int32 pageLimit = 4;
  if (this->pagelimit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_pagelimit());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SspaceScenesBackpackList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spaceScenesBackpack.SspaceScenesBackpackList)
  GOOGLE_DCHECK_NE(&from, this);
  const SspaceScenesBackpackList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SspaceScenesBackpackList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spaceScenesBackpack.SspaceScenesBackpackList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spaceScenesBackpack.SspaceScenesBackpackList)
    MergeFrom(*source);
  }
}

void SspaceScenesBackpackList::MergeFrom(const SspaceScenesBackpackList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spaceScenesBackpack.SspaceScenesBackpackList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
  if (from.total() != 0) {
    _internal_set_total(from._internal_total());
  }
  if (from.curpage() != 0) {
    _internal_set_curpage(from._internal_curpage());
  }
  if (from.pagelimit() != 0) {
    _internal_set_pagelimit(from._internal_pagelimit());
  }
}

void SspaceScenesBackpackList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spaceScenesBackpack.SspaceScenesBackpackList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SspaceScenesBackpackList::CopyFrom(const SspaceScenesBackpackList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spaceScenesBackpack.SspaceScenesBackpackList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SspaceScenesBackpackList::IsInitialized() const {
  return true;
}

void SspaceScenesBackpackList::InternalSwap(SspaceScenesBackpackList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  list_.InternalSwap(&other->list_);
  swap(total_, other->total_);
  swap(curpage_, other->curpage_);
  swap(pagelimit_, other->pagelimit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SspaceScenesBackpackList::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace spaceScenesBackpack
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::spaceScenesBackpack::CspaceScenesBackpackList* Arena::CreateMaybeMessage< ::spaceScenesBackpack::CspaceScenesBackpackList >(Arena* arena) {
  return Arena::CreateInternal< ::spaceScenesBackpack::CspaceScenesBackpackList >(arena);
}
template<> PROTOBUF_NOINLINE ::spaceScenesBackpack::SpaceScenes* Arena::CreateMaybeMessage< ::spaceScenesBackpack::SpaceScenes >(Arena* arena) {
  return Arena::CreateInternal< ::spaceScenesBackpack::SpaceScenes >(arena);
}
template<> PROTOBUF_NOINLINE ::spaceScenesBackpack::SspaceScenesBackpackList* Arena::CreateMaybeMessage< ::spaceScenesBackpack::SspaceScenesBackpackList >(Arena* arena) {
  return Arena::CreateInternal< ::spaceScenesBackpack::SspaceScenesBackpackList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
