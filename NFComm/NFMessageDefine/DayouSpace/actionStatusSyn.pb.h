// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: actionStatusSyn.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_actionStatusSyn_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_actionStatusSyn_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "vector.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_actionStatusSyn_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_actionStatusSyn_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_actionStatusSyn_2eproto;
namespace actionStatusSyn {
class CActionStatusSyn;
class CActionStatusSynDefaultTypeInternal;
extern CActionStatusSynDefaultTypeInternal _CActionStatusSyn_default_instance_;
class CCheckActionStatusSyn;
class CCheckActionStatusSynDefaultTypeInternal;
extern CCheckActionStatusSynDefaultTypeInternal _CCheckActionStatusSyn_default_instance_;
class LevelUpSkill;
class LevelUpSkillDefaultTypeInternal;
extern LevelUpSkillDefaultTypeInternal _LevelUpSkill_default_instance_;
class SActionStatusSyn;
class SActionStatusSynDefaultTypeInternal;
extern SActionStatusSynDefaultTypeInternal _SActionStatusSyn_default_instance_;
class SCheckActionStatusSyn;
class SCheckActionStatusSynDefaultTypeInternal;
extern SCheckActionStatusSynDefaultTypeInternal _SCheckActionStatusSyn_default_instance_;
}  // namespace actionStatusSyn
PROTOBUF_NAMESPACE_OPEN
template<> ::actionStatusSyn::CActionStatusSyn* Arena::CreateMaybeMessage<::actionStatusSyn::CActionStatusSyn>(Arena*);
template<> ::actionStatusSyn::CCheckActionStatusSyn* Arena::CreateMaybeMessage<::actionStatusSyn::CCheckActionStatusSyn>(Arena*);
template<> ::actionStatusSyn::LevelUpSkill* Arena::CreateMaybeMessage<::actionStatusSyn::LevelUpSkill>(Arena*);
template<> ::actionStatusSyn::SActionStatusSyn* Arena::CreateMaybeMessage<::actionStatusSyn::SActionStatusSyn>(Arena*);
template<> ::actionStatusSyn::SCheckActionStatusSyn* Arena::CreateMaybeMessage<::actionStatusSyn::SCheckActionStatusSyn>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace actionStatusSyn {

// ===================================================================

class CActionStatusSyn :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:actionStatusSyn.CActionStatusSyn) */ {
 public:
  CActionStatusSyn();
  virtual ~CActionStatusSyn();

  CActionStatusSyn(const CActionStatusSyn& from);
  CActionStatusSyn(CActionStatusSyn&& from) noexcept
    : CActionStatusSyn() {
    *this = ::std::move(from);
  }

  inline CActionStatusSyn& operator=(const CActionStatusSyn& from) {
    CopyFrom(from);
    return *this;
  }
  inline CActionStatusSyn& operator=(CActionStatusSyn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CActionStatusSyn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CActionStatusSyn* internal_default_instance() {
    return reinterpret_cast<const CActionStatusSyn*>(
               &_CActionStatusSyn_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CActionStatusSyn& a, CActionStatusSyn& b) {
    a.Swap(&b);
  }
  inline void Swap(CActionStatusSyn* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CActionStatusSyn* New() const final {
    return CreateMaybeMessage<CActionStatusSyn>(nullptr);
  }

  CActionStatusSyn* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CActionStatusSyn>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CActionStatusSyn& from);
  void MergeFrom(const CActionStatusSyn& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CActionStatusSyn* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "actionStatusSyn.CActionStatusSyn";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_actionStatusSyn_2eproto);
    return ::descriptor_table_actionStatusSyn_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosListFieldNumber = 2,
    kOrientateFieldNumber = 3,
    kActionIdFieldNumber = 1,
    kSendToIdFieldNumber = 4,
  };
  // repeated .vector.PVector3 posList = 2;
  int poslist_size() const;
  private:
  int _internal_poslist_size() const;
  public:
  void clear_poslist();
  ::vector::PVector3* mutable_poslist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::vector::PVector3 >*
      mutable_poslist();
  private:
  const ::vector::PVector3& _internal_poslist(int index) const;
  ::vector::PVector3* _internal_add_poslist();
  public:
  const ::vector::PVector3& poslist(int index) const;
  ::vector::PVector3* add_poslist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::vector::PVector3 >&
      poslist() const;

  // .vector.PVector3 orientate = 3;
  bool has_orientate() const;
  private:
  bool _internal_has_orientate() const;
  public:
  void clear_orientate();
  const ::vector::PVector3& orientate() const;
  ::vector::PVector3* release_orientate();
  ::vector::PVector3* mutable_orientate();
  void set_allocated_orientate(::vector::PVector3* orientate);
  private:
  const ::vector::PVector3& _internal_orientate() const;
  ::vector::PVector3* _internal_mutable_orientate();
  public:

  // int32 actionId = 1;
  void clear_actionid();
  ::PROTOBUF_NAMESPACE_ID::int32 actionid() const;
  void set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actionid() const;
  void _internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 sendToId = 4;
  void clear_sendtoid();
  ::PROTOBUF_NAMESPACE_ID::int32 sendtoid() const;
  void set_sendtoid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sendtoid() const;
  void _internal_set_sendtoid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:actionStatusSyn.CActionStatusSyn)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::vector::PVector3 > poslist_;
  ::vector::PVector3* orientate_;
  ::PROTOBUF_NAMESPACE_ID::int32 actionid_;
  ::PROTOBUF_NAMESPACE_ID::int32 sendtoid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_actionStatusSyn_2eproto;
};
// -------------------------------------------------------------------

class LevelUpSkill :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:actionStatusSyn.LevelUpSkill) */ {
 public:
  LevelUpSkill();
  virtual ~LevelUpSkill();

  LevelUpSkill(const LevelUpSkill& from);
  LevelUpSkill(LevelUpSkill&& from) noexcept
    : LevelUpSkill() {
    *this = ::std::move(from);
  }

  inline LevelUpSkill& operator=(const LevelUpSkill& from) {
    CopyFrom(from);
    return *this;
  }
  inline LevelUpSkill& operator=(LevelUpSkill&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LevelUpSkill& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LevelUpSkill* internal_default_instance() {
    return reinterpret_cast<const LevelUpSkill*>(
               &_LevelUpSkill_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LevelUpSkill& a, LevelUpSkill& b) {
    a.Swap(&b);
  }
  inline void Swap(LevelUpSkill* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LevelUpSkill* New() const final {
    return CreateMaybeMessage<LevelUpSkill>(nullptr);
  }

  LevelUpSkill* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LevelUpSkill>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LevelUpSkill& from);
  void MergeFrom(const LevelUpSkill& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LevelUpSkill* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "actionStatusSyn.LevelUpSkill";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_actionStatusSyn_2eproto);
    return ::descriptor_table_actionStatusSyn_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChangeSkillIdFieldNumber = 1,
    kChangeSkillNumFieldNumber = 2,
  };
  // int32 changeSkillId = 1;
  void clear_changeskillid();
  ::PROTOBUF_NAMESPACE_ID::int32 changeskillid() const;
  void set_changeskillid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_changeskillid() const;
  void _internal_set_changeskillid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 changeSkillNum = 2;
  void clear_changeskillnum();
  ::PROTOBUF_NAMESPACE_ID::int32 changeskillnum() const;
  void set_changeskillnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_changeskillnum() const;
  void _internal_set_changeskillnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:actionStatusSyn.LevelUpSkill)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 changeskillid_;
  ::PROTOBUF_NAMESPACE_ID::int32 changeskillnum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_actionStatusSyn_2eproto;
};
// -------------------------------------------------------------------

class SActionStatusSyn :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:actionStatusSyn.SActionStatusSyn) */ {
 public:
  SActionStatusSyn();
  virtual ~SActionStatusSyn();

  SActionStatusSyn(const SActionStatusSyn& from);
  SActionStatusSyn(SActionStatusSyn&& from) noexcept
    : SActionStatusSyn() {
    *this = ::std::move(from);
  }

  inline SActionStatusSyn& operator=(const SActionStatusSyn& from) {
    CopyFrom(from);
    return *this;
  }
  inline SActionStatusSyn& operator=(SActionStatusSyn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SActionStatusSyn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SActionStatusSyn* internal_default_instance() {
    return reinterpret_cast<const SActionStatusSyn*>(
               &_SActionStatusSyn_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SActionStatusSyn& a, SActionStatusSyn& b) {
    a.Swap(&b);
  }
  inline void Swap(SActionStatusSyn* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SActionStatusSyn* New() const final {
    return CreateMaybeMessage<SActionStatusSyn>(nullptr);
  }

  SActionStatusSyn* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SActionStatusSyn>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SActionStatusSyn& from);
  void MergeFrom(const SActionStatusSyn& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SActionStatusSyn* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "actionStatusSyn.SActionStatusSyn";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_actionStatusSyn_2eproto);
    return ::descriptor_table_actionStatusSyn_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLvUpSkillFieldNumber = 3,
    kCodeFieldNumber = 1,
    kActionIdFieldNumber = 2,
  };
  // repeated .actionStatusSyn.LevelUpSkill lvUpSkill = 3;
  int lvupskill_size() const;
  private:
  int _internal_lvupskill_size() const;
  public:
  void clear_lvupskill();
  ::actionStatusSyn::LevelUpSkill* mutable_lvupskill(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::actionStatusSyn::LevelUpSkill >*
      mutable_lvupskill();
  private:
  const ::actionStatusSyn::LevelUpSkill& _internal_lvupskill(int index) const;
  ::actionStatusSyn::LevelUpSkill* _internal_add_lvupskill();
  public:
  const ::actionStatusSyn::LevelUpSkill& lvupskill(int index) const;
  ::actionStatusSyn::LevelUpSkill* add_lvupskill();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::actionStatusSyn::LevelUpSkill >&
      lvupskill() const;

  // int32 code = 1;
  void clear_code();
  ::PROTOBUF_NAMESPACE_ID::int32 code() const;
  void set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_code() const;
  void _internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 actionId = 2;
  void clear_actionid();
  ::PROTOBUF_NAMESPACE_ID::int32 actionid() const;
  void set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actionid() const;
  void _internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:actionStatusSyn.SActionStatusSyn)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::actionStatusSyn::LevelUpSkill > lvupskill_;
  ::PROTOBUF_NAMESPACE_ID::int32 code_;
  ::PROTOBUF_NAMESPACE_ID::int32 actionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_actionStatusSyn_2eproto;
};
// -------------------------------------------------------------------

class CCheckActionStatusSyn :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:actionStatusSyn.CCheckActionStatusSyn) */ {
 public:
  CCheckActionStatusSyn();
  virtual ~CCheckActionStatusSyn();

  CCheckActionStatusSyn(const CCheckActionStatusSyn& from);
  CCheckActionStatusSyn(CCheckActionStatusSyn&& from) noexcept
    : CCheckActionStatusSyn() {
    *this = ::std::move(from);
  }

  inline CCheckActionStatusSyn& operator=(const CCheckActionStatusSyn& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCheckActionStatusSyn& operator=(CCheckActionStatusSyn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCheckActionStatusSyn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCheckActionStatusSyn* internal_default_instance() {
    return reinterpret_cast<const CCheckActionStatusSyn*>(
               &_CCheckActionStatusSyn_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CCheckActionStatusSyn& a, CCheckActionStatusSyn& b) {
    a.Swap(&b);
  }
  inline void Swap(CCheckActionStatusSyn* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCheckActionStatusSyn* New() const final {
    return CreateMaybeMessage<CCheckActionStatusSyn>(nullptr);
  }

  CCheckActionStatusSyn* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCheckActionStatusSyn>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCheckActionStatusSyn& from);
  void MergeFrom(const CCheckActionStatusSyn& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCheckActionStatusSyn* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "actionStatusSyn.CCheckActionStatusSyn";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_actionStatusSyn_2eproto);
    return ::descriptor_table_actionStatusSyn_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:actionStatusSyn.CCheckActionStatusSyn)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_actionStatusSyn_2eproto;
};
// -------------------------------------------------------------------

class SCheckActionStatusSyn :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:actionStatusSyn.SCheckActionStatusSyn) */ {
 public:
  SCheckActionStatusSyn();
  virtual ~SCheckActionStatusSyn();

  SCheckActionStatusSyn(const SCheckActionStatusSyn& from);
  SCheckActionStatusSyn(SCheckActionStatusSyn&& from) noexcept
    : SCheckActionStatusSyn() {
    *this = ::std::move(from);
  }

  inline SCheckActionStatusSyn& operator=(const SCheckActionStatusSyn& from) {
    CopyFrom(from);
    return *this;
  }
  inline SCheckActionStatusSyn& operator=(SCheckActionStatusSyn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SCheckActionStatusSyn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SCheckActionStatusSyn* internal_default_instance() {
    return reinterpret_cast<const SCheckActionStatusSyn*>(
               &_SCheckActionStatusSyn_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SCheckActionStatusSyn& a, SCheckActionStatusSyn& b) {
    a.Swap(&b);
  }
  inline void Swap(SCheckActionStatusSyn* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SCheckActionStatusSyn* New() const final {
    return CreateMaybeMessage<SCheckActionStatusSyn>(nullptr);
  }

  SCheckActionStatusSyn* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SCheckActionStatusSyn>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SCheckActionStatusSyn& from);
  void MergeFrom(const SCheckActionStatusSyn& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SCheckActionStatusSyn* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "actionStatusSyn.SCheckActionStatusSyn";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_actionStatusSyn_2eproto);
    return ::descriptor_table_actionStatusSyn_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLvUpSkillFieldNumber = 3,
    kCodeFieldNumber = 1,
    kActionIdFieldNumber = 2,
  };
  // repeated .actionStatusSyn.LevelUpSkill lvUpSkill = 3;
  int lvupskill_size() const;
  private:
  int _internal_lvupskill_size() const;
  public:
  void clear_lvupskill();
  ::actionStatusSyn::LevelUpSkill* mutable_lvupskill(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::actionStatusSyn::LevelUpSkill >*
      mutable_lvupskill();
  private:
  const ::actionStatusSyn::LevelUpSkill& _internal_lvupskill(int index) const;
  ::actionStatusSyn::LevelUpSkill* _internal_add_lvupskill();
  public:
  const ::actionStatusSyn::LevelUpSkill& lvupskill(int index) const;
  ::actionStatusSyn::LevelUpSkill* add_lvupskill();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::actionStatusSyn::LevelUpSkill >&
      lvupskill() const;

  // int32 code = 1;
  void clear_code();
  ::PROTOBUF_NAMESPACE_ID::int32 code() const;
  void set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_code() const;
  void _internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 actionId = 2;
  void clear_actionid();
  ::PROTOBUF_NAMESPACE_ID::int32 actionid() const;
  void set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actionid() const;
  void _internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:actionStatusSyn.SCheckActionStatusSyn)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::actionStatusSyn::LevelUpSkill > lvupskill_;
  ::PROTOBUF_NAMESPACE_ID::int32 code_;
  ::PROTOBUF_NAMESPACE_ID::int32 actionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_actionStatusSyn_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CActionStatusSyn

// int32 actionId = 1;
inline void CActionStatusSyn::clear_actionid() {
  actionid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CActionStatusSyn::_internal_actionid() const {
  return actionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CActionStatusSyn::actionid() const {
  // @@protoc_insertion_point(field_get:actionStatusSyn.CActionStatusSyn.actionId)
  return _internal_actionid();
}
inline void CActionStatusSyn::_internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actionid_ = value;
}
inline void CActionStatusSyn::set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actionid(value);
  // @@protoc_insertion_point(field_set:actionStatusSyn.CActionStatusSyn.actionId)
}

// repeated .vector.PVector3 posList = 2;
inline int CActionStatusSyn::_internal_poslist_size() const {
  return poslist_.size();
}
inline int CActionStatusSyn::poslist_size() const {
  return _internal_poslist_size();
}
inline ::vector::PVector3* CActionStatusSyn::mutable_poslist(int index) {
  // @@protoc_insertion_point(field_mutable:actionStatusSyn.CActionStatusSyn.posList)
  return poslist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::vector::PVector3 >*
CActionStatusSyn::mutable_poslist() {
  // @@protoc_insertion_point(field_mutable_list:actionStatusSyn.CActionStatusSyn.posList)
  return &poslist_;
}
inline const ::vector::PVector3& CActionStatusSyn::_internal_poslist(int index) const {
  return poslist_.Get(index);
}
inline const ::vector::PVector3& CActionStatusSyn::poslist(int index) const {
  // @@protoc_insertion_point(field_get:actionStatusSyn.CActionStatusSyn.posList)
  return _internal_poslist(index);
}
inline ::vector::PVector3* CActionStatusSyn::_internal_add_poslist() {
  return poslist_.Add();
}
inline ::vector::PVector3* CActionStatusSyn::add_poslist() {
  // @@protoc_insertion_point(field_add:actionStatusSyn.CActionStatusSyn.posList)
  return _internal_add_poslist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::vector::PVector3 >&
CActionStatusSyn::poslist() const {
  // @@protoc_insertion_point(field_list:actionStatusSyn.CActionStatusSyn.posList)
  return poslist_;
}

// .vector.PVector3 orientate = 3;
inline bool CActionStatusSyn::_internal_has_orientate() const {
  return this != internal_default_instance() && orientate_ != nullptr;
}
inline bool CActionStatusSyn::has_orientate() const {
  return _internal_has_orientate();
}
inline const ::vector::PVector3& CActionStatusSyn::_internal_orientate() const {
  const ::vector::PVector3* p = orientate_;
  return p != nullptr ? *p : *reinterpret_cast<const ::vector::PVector3*>(
      &::vector::_PVector3_default_instance_);
}
inline const ::vector::PVector3& CActionStatusSyn::orientate() const {
  // @@protoc_insertion_point(field_get:actionStatusSyn.CActionStatusSyn.orientate)
  return _internal_orientate();
}
inline ::vector::PVector3* CActionStatusSyn::release_orientate() {
  // @@protoc_insertion_point(field_release:actionStatusSyn.CActionStatusSyn.orientate)
  
  ::vector::PVector3* temp = orientate_;
  orientate_ = nullptr;
  return temp;
}
inline ::vector::PVector3* CActionStatusSyn::_internal_mutable_orientate() {
  
  if (orientate_ == nullptr) {
    auto* p = CreateMaybeMessage<::vector::PVector3>(GetArenaNoVirtual());
    orientate_ = p;
  }
  return orientate_;
}
inline ::vector::PVector3* CActionStatusSyn::mutable_orientate() {
  // @@protoc_insertion_point(field_mutable:actionStatusSyn.CActionStatusSyn.orientate)
  return _internal_mutable_orientate();
}
inline void CActionStatusSyn::set_allocated_orientate(::vector::PVector3* orientate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(orientate_);
  }
  if (orientate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      orientate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, orientate, submessage_arena);
    }
    
  } else {
    
  }
  orientate_ = orientate;
  // @@protoc_insertion_point(field_set_allocated:actionStatusSyn.CActionStatusSyn.orientate)
}

// int32 sendToId = 4;
inline void CActionStatusSyn::clear_sendtoid() {
  sendtoid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CActionStatusSyn::_internal_sendtoid() const {
  return sendtoid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CActionStatusSyn::sendtoid() const {
  // @@protoc_insertion_point(field_get:actionStatusSyn.CActionStatusSyn.sendToId)
  return _internal_sendtoid();
}
inline void CActionStatusSyn::_internal_set_sendtoid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sendtoid_ = value;
}
inline void CActionStatusSyn::set_sendtoid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sendtoid(value);
  // @@protoc_insertion_point(field_set:actionStatusSyn.CActionStatusSyn.sendToId)
}

// -------------------------------------------------------------------

// LevelUpSkill

// int32 changeSkillId = 1;
inline void LevelUpSkill::clear_changeskillid() {
  changeskillid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LevelUpSkill::_internal_changeskillid() const {
  return changeskillid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LevelUpSkill::changeskillid() const {
  // @@protoc_insertion_point(field_get:actionStatusSyn.LevelUpSkill.changeSkillId)
  return _internal_changeskillid();
}
inline void LevelUpSkill::_internal_set_changeskillid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  changeskillid_ = value;
}
inline void LevelUpSkill::set_changeskillid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_changeskillid(value);
  // @@protoc_insertion_point(field_set:actionStatusSyn.LevelUpSkill.changeSkillId)
}

// int32 changeSkillNum = 2;
inline void LevelUpSkill::clear_changeskillnum() {
  changeskillnum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LevelUpSkill::_internal_changeskillnum() const {
  return changeskillnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LevelUpSkill::changeskillnum() const {
  // @@protoc_insertion_point(field_get:actionStatusSyn.LevelUpSkill.changeSkillNum)
  return _internal_changeskillnum();
}
inline void LevelUpSkill::_internal_set_changeskillnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  changeskillnum_ = value;
}
inline void LevelUpSkill::set_changeskillnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_changeskillnum(value);
  // @@protoc_insertion_point(field_set:actionStatusSyn.LevelUpSkill.changeSkillNum)
}

// -------------------------------------------------------------------

// SActionStatusSyn

// int32 code = 1;
inline void SActionStatusSyn::clear_code() {
  code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SActionStatusSyn::_internal_code() const {
  return code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SActionStatusSyn::code() const {
  // @@protoc_insertion_point(field_get:actionStatusSyn.SActionStatusSyn.code)
  return _internal_code();
}
inline void SActionStatusSyn::_internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  code_ = value;
}
inline void SActionStatusSyn::set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:actionStatusSyn.SActionStatusSyn.code)
}

// int32 actionId = 2;
inline void SActionStatusSyn::clear_actionid() {
  actionid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SActionStatusSyn::_internal_actionid() const {
  return actionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SActionStatusSyn::actionid() const {
  // @@protoc_insertion_point(field_get:actionStatusSyn.SActionStatusSyn.actionId)
  return _internal_actionid();
}
inline void SActionStatusSyn::_internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actionid_ = value;
}
inline void SActionStatusSyn::set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actionid(value);
  // @@protoc_insertion_point(field_set:actionStatusSyn.SActionStatusSyn.actionId)
}

// repeated .actionStatusSyn.LevelUpSkill lvUpSkill = 3;
inline int SActionStatusSyn::_internal_lvupskill_size() const {
  return lvupskill_.size();
}
inline int SActionStatusSyn::lvupskill_size() const {
  return _internal_lvupskill_size();
}
inline void SActionStatusSyn::clear_lvupskill() {
  lvupskill_.Clear();
}
inline ::actionStatusSyn::LevelUpSkill* SActionStatusSyn::mutable_lvupskill(int index) {
  // @@protoc_insertion_point(field_mutable:actionStatusSyn.SActionStatusSyn.lvUpSkill)
  return lvupskill_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::actionStatusSyn::LevelUpSkill >*
SActionStatusSyn::mutable_lvupskill() {
  // @@protoc_insertion_point(field_mutable_list:actionStatusSyn.SActionStatusSyn.lvUpSkill)
  return &lvupskill_;
}
inline const ::actionStatusSyn::LevelUpSkill& SActionStatusSyn::_internal_lvupskill(int index) const {
  return lvupskill_.Get(index);
}
inline const ::actionStatusSyn::LevelUpSkill& SActionStatusSyn::lvupskill(int index) const {
  // @@protoc_insertion_point(field_get:actionStatusSyn.SActionStatusSyn.lvUpSkill)
  return _internal_lvupskill(index);
}
inline ::actionStatusSyn::LevelUpSkill* SActionStatusSyn::_internal_add_lvupskill() {
  return lvupskill_.Add();
}
inline ::actionStatusSyn::LevelUpSkill* SActionStatusSyn::add_lvupskill() {
  // @@protoc_insertion_point(field_add:actionStatusSyn.SActionStatusSyn.lvUpSkill)
  return _internal_add_lvupskill();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::actionStatusSyn::LevelUpSkill >&
SActionStatusSyn::lvupskill() const {
  // @@protoc_insertion_point(field_list:actionStatusSyn.SActionStatusSyn.lvUpSkill)
  return lvupskill_;
}

// -------------------------------------------------------------------

// CCheckActionStatusSyn

// -------------------------------------------------------------------

// SCheckActionStatusSyn

// int32 code = 1;
inline void SCheckActionStatusSyn::clear_code() {
  code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SCheckActionStatusSyn::_internal_code() const {
  return code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SCheckActionStatusSyn::code() const {
  // @@protoc_insertion_point(field_get:actionStatusSyn.SCheckActionStatusSyn.code)
  return _internal_code();
}
inline void SCheckActionStatusSyn::_internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  code_ = value;
}
inline void SCheckActionStatusSyn::set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:actionStatusSyn.SCheckActionStatusSyn.code)
}

// int32 actionId = 2;
inline void SCheckActionStatusSyn::clear_actionid() {
  actionid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SCheckActionStatusSyn::_internal_actionid() const {
  return actionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SCheckActionStatusSyn::actionid() const {
  // @@protoc_insertion_point(field_get:actionStatusSyn.SCheckActionStatusSyn.actionId)
  return _internal_actionid();
}
inline void SCheckActionStatusSyn::_internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actionid_ = value;
}
inline void SCheckActionStatusSyn::set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actionid(value);
  // @@protoc_insertion_point(field_set:actionStatusSyn.SCheckActionStatusSyn.actionId)
}

// repeated .actionStatusSyn.LevelUpSkill lvUpSkill = 3;
inline int SCheckActionStatusSyn::_internal_lvupskill_size() const {
  return lvupskill_.size();
}
inline int SCheckActionStatusSyn::lvupskill_size() const {
  return _internal_lvupskill_size();
}
inline void SCheckActionStatusSyn::clear_lvupskill() {
  lvupskill_.Clear();
}
inline ::actionStatusSyn::LevelUpSkill* SCheckActionStatusSyn::mutable_lvupskill(int index) {
  // @@protoc_insertion_point(field_mutable:actionStatusSyn.SCheckActionStatusSyn.lvUpSkill)
  return lvupskill_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::actionStatusSyn::LevelUpSkill >*
SCheckActionStatusSyn::mutable_lvupskill() {
  // @@protoc_insertion_point(field_mutable_list:actionStatusSyn.SCheckActionStatusSyn.lvUpSkill)
  return &lvupskill_;
}
inline const ::actionStatusSyn::LevelUpSkill& SCheckActionStatusSyn::_internal_lvupskill(int index) const {
  return lvupskill_.Get(index);
}
inline const ::actionStatusSyn::LevelUpSkill& SCheckActionStatusSyn::lvupskill(int index) const {
  // @@protoc_insertion_point(field_get:actionStatusSyn.SCheckActionStatusSyn.lvUpSkill)
  return _internal_lvupskill(index);
}
inline ::actionStatusSyn::LevelUpSkill* SCheckActionStatusSyn::_internal_add_lvupskill() {
  return lvupskill_.Add();
}
inline ::actionStatusSyn::LevelUpSkill* SCheckActionStatusSyn::add_lvupskill() {
  // @@protoc_insertion_point(field_add:actionStatusSyn.SCheckActionStatusSyn.lvUpSkill)
  return _internal_add_lvupskill();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::actionStatusSyn::LevelUpSkill >&
SCheckActionStatusSyn::lvupskill() const {
  // @@protoc_insertion_point(field_list:actionStatusSyn.SCheckActionStatusSyn.lvUpSkill)
  return lvupskill_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace actionStatusSyn

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_actionStatusSyn_2eproto
