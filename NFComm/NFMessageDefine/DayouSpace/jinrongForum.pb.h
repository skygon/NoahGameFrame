// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jinrongForum.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_jinrongForum_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_jinrongForum_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_jinrongForum_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_jinrongForum_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_jinrongForum_2eproto;
namespace jinrongForum {
class CGetJinrongForumFreeGift;
class CGetJinrongForumFreeGiftDefaultTypeInternal;
extern CGetJinrongForumFreeGiftDefaultTypeInternal _CGetJinrongForumFreeGift_default_instance_;
class CJinrongForumVisitLog;
class CJinrongForumVisitLogDefaultTypeInternal;
extern CJinrongForumVisitLogDefaultTypeInternal _CJinrongForumVisitLog_default_instance_;
class SGetJinrongForumFreeGift;
class SGetJinrongForumFreeGiftDefaultTypeInternal;
extern SGetJinrongForumFreeGiftDefaultTypeInternal _SGetJinrongForumFreeGift_default_instance_;
class SJinrongForumVisitLog;
class SJinrongForumVisitLogDefaultTypeInternal;
extern SJinrongForumVisitLogDefaultTypeInternal _SJinrongForumVisitLog_default_instance_;
}  // namespace jinrongForum
PROTOBUF_NAMESPACE_OPEN
template<> ::jinrongForum::CGetJinrongForumFreeGift* Arena::CreateMaybeMessage<::jinrongForum::CGetJinrongForumFreeGift>(Arena*);
template<> ::jinrongForum::CJinrongForumVisitLog* Arena::CreateMaybeMessage<::jinrongForum::CJinrongForumVisitLog>(Arena*);
template<> ::jinrongForum::SGetJinrongForumFreeGift* Arena::CreateMaybeMessage<::jinrongForum::SGetJinrongForumFreeGift>(Arena*);
template<> ::jinrongForum::SJinrongForumVisitLog* Arena::CreateMaybeMessage<::jinrongForum::SJinrongForumVisitLog>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace jinrongForum {

// ===================================================================

class CJinrongForumVisitLog :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:jinrongForum.CJinrongForumVisitLog) */ {
 public:
  CJinrongForumVisitLog();
  virtual ~CJinrongForumVisitLog();

  CJinrongForumVisitLog(const CJinrongForumVisitLog& from);
  CJinrongForumVisitLog(CJinrongForumVisitLog&& from) noexcept
    : CJinrongForumVisitLog() {
    *this = ::std::move(from);
  }

  inline CJinrongForumVisitLog& operator=(const CJinrongForumVisitLog& from) {
    CopyFrom(from);
    return *this;
  }
  inline CJinrongForumVisitLog& operator=(CJinrongForumVisitLog&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CJinrongForumVisitLog& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CJinrongForumVisitLog* internal_default_instance() {
    return reinterpret_cast<const CJinrongForumVisitLog*>(
               &_CJinrongForumVisitLog_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CJinrongForumVisitLog& a, CJinrongForumVisitLog& b) {
    a.Swap(&b);
  }
  inline void Swap(CJinrongForumVisitLog* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CJinrongForumVisitLog* New() const final {
    return CreateMaybeMessage<CJinrongForumVisitLog>(nullptr);
  }

  CJinrongForumVisitLog* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CJinrongForumVisitLog>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CJinrongForumVisitLog& from);
  void MergeFrom(const CJinrongForumVisitLog& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CJinrongForumVisitLog* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "jinrongForum.CJinrongForumVisitLog";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_jinrongForum_2eproto);
    return ::descriptor_table_jinrongForum_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionIdFieldNumber = 1,
  };
  // int32 actionId = 1;
  void clear_actionid();
  ::PROTOBUF_NAMESPACE_ID::int32 actionid() const;
  void set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actionid() const;
  void _internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:jinrongForum.CJinrongForumVisitLog)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 actionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_jinrongForum_2eproto;
};
// -------------------------------------------------------------------

class SJinrongForumVisitLog :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:jinrongForum.SJinrongForumVisitLog) */ {
 public:
  SJinrongForumVisitLog();
  virtual ~SJinrongForumVisitLog();

  SJinrongForumVisitLog(const SJinrongForumVisitLog& from);
  SJinrongForumVisitLog(SJinrongForumVisitLog&& from) noexcept
    : SJinrongForumVisitLog() {
    *this = ::std::move(from);
  }

  inline SJinrongForumVisitLog& operator=(const SJinrongForumVisitLog& from) {
    CopyFrom(from);
    return *this;
  }
  inline SJinrongForumVisitLog& operator=(SJinrongForumVisitLog&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SJinrongForumVisitLog& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SJinrongForumVisitLog* internal_default_instance() {
    return reinterpret_cast<const SJinrongForumVisitLog*>(
               &_SJinrongForumVisitLog_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SJinrongForumVisitLog& a, SJinrongForumVisitLog& b) {
    a.Swap(&b);
  }
  inline void Swap(SJinrongForumVisitLog* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SJinrongForumVisitLog* New() const final {
    return CreateMaybeMessage<SJinrongForumVisitLog>(nullptr);
  }

  SJinrongForumVisitLog* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SJinrongForumVisitLog>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SJinrongForumVisitLog& from);
  void MergeFrom(const SJinrongForumVisitLog& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SJinrongForumVisitLog* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "jinrongForum.SJinrongForumVisitLog";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_jinrongForum_2eproto);
    return ::descriptor_table_jinrongForum_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
    kIsFirstFieldNumber = 2,
    kActionIdFieldNumber = 3,
  };
  // int32 uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 isFirst = 2;
  void clear_isfirst();
  ::PROTOBUF_NAMESPACE_ID::int32 isfirst() const;
  void set_isfirst(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_isfirst() const;
  void _internal_set_isfirst(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 actionId = 3;
  void clear_actionid();
  ::PROTOBUF_NAMESPACE_ID::int32 actionid() const;
  void set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actionid() const;
  void _internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:jinrongForum.SJinrongForumVisitLog)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 isfirst_;
  ::PROTOBUF_NAMESPACE_ID::int32 actionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_jinrongForum_2eproto;
};
// -------------------------------------------------------------------

class CGetJinrongForumFreeGift :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:jinrongForum.CGetJinrongForumFreeGift) */ {
 public:
  CGetJinrongForumFreeGift();
  virtual ~CGetJinrongForumFreeGift();

  CGetJinrongForumFreeGift(const CGetJinrongForumFreeGift& from);
  CGetJinrongForumFreeGift(CGetJinrongForumFreeGift&& from) noexcept
    : CGetJinrongForumFreeGift() {
    *this = ::std::move(from);
  }

  inline CGetJinrongForumFreeGift& operator=(const CGetJinrongForumFreeGift& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGetJinrongForumFreeGift& operator=(CGetJinrongForumFreeGift&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CGetJinrongForumFreeGift& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGetJinrongForumFreeGift* internal_default_instance() {
    return reinterpret_cast<const CGetJinrongForumFreeGift*>(
               &_CGetJinrongForumFreeGift_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CGetJinrongForumFreeGift& a, CGetJinrongForumFreeGift& b) {
    a.Swap(&b);
  }
  inline void Swap(CGetJinrongForumFreeGift* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CGetJinrongForumFreeGift* New() const final {
    return CreateMaybeMessage<CGetJinrongForumFreeGift>(nullptr);
  }

  CGetJinrongForumFreeGift* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CGetJinrongForumFreeGift>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CGetJinrongForumFreeGift& from);
  void MergeFrom(const CGetJinrongForumFreeGift& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGetJinrongForumFreeGift* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "jinrongForum.CGetJinrongForumFreeGift";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_jinrongForum_2eproto);
    return ::descriptor_table_jinrongForum_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:jinrongForum.CGetJinrongForumFreeGift)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_jinrongForum_2eproto;
};
// -------------------------------------------------------------------

class SGetJinrongForumFreeGift :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:jinrongForum.SGetJinrongForumFreeGift) */ {
 public:
  SGetJinrongForumFreeGift();
  virtual ~SGetJinrongForumFreeGift();

  SGetJinrongForumFreeGift(const SGetJinrongForumFreeGift& from);
  SGetJinrongForumFreeGift(SGetJinrongForumFreeGift&& from) noexcept
    : SGetJinrongForumFreeGift() {
    *this = ::std::move(from);
  }

  inline SGetJinrongForumFreeGift& operator=(const SGetJinrongForumFreeGift& from) {
    CopyFrom(from);
    return *this;
  }
  inline SGetJinrongForumFreeGift& operator=(SGetJinrongForumFreeGift&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SGetJinrongForumFreeGift& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SGetJinrongForumFreeGift* internal_default_instance() {
    return reinterpret_cast<const SGetJinrongForumFreeGift*>(
               &_SGetJinrongForumFreeGift_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SGetJinrongForumFreeGift& a, SGetJinrongForumFreeGift& b) {
    a.Swap(&b);
  }
  inline void Swap(SGetJinrongForumFreeGift* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SGetJinrongForumFreeGift* New() const final {
    return CreateMaybeMessage<SGetJinrongForumFreeGift>(nullptr);
  }

  SGetJinrongForumFreeGift* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SGetJinrongForumFreeGift>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SGetJinrongForumFreeGift& from);
  void MergeFrom(const SGetJinrongForumFreeGift& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SGetJinrongForumFreeGift* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "jinrongForum.SGetJinrongForumFreeGift";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_jinrongForum_2eproto);
    return ::descriptor_table_jinrongForum_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 2,
    kStateFieldNumber = 1,
  };
  // string msg = 2;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // int32 state = 1;
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::int32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:jinrongForum.SGetJinrongForumFreeGift)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::PROTOBUF_NAMESPACE_ID::int32 state_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_jinrongForum_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CJinrongForumVisitLog

// int32 actionId = 1;
inline void CJinrongForumVisitLog::clear_actionid() {
  actionid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CJinrongForumVisitLog::_internal_actionid() const {
  return actionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CJinrongForumVisitLog::actionid() const {
  // @@protoc_insertion_point(field_get:jinrongForum.CJinrongForumVisitLog.actionId)
  return _internal_actionid();
}
inline void CJinrongForumVisitLog::_internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actionid_ = value;
}
inline void CJinrongForumVisitLog::set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actionid(value);
  // @@protoc_insertion_point(field_set:jinrongForum.CJinrongForumVisitLog.actionId)
}

// -------------------------------------------------------------------

// SJinrongForumVisitLog

// int32 uid = 1;
inline void SJinrongForumVisitLog::clear_uid() {
  uid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SJinrongForumVisitLog::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SJinrongForumVisitLog::uid() const {
  // @@protoc_insertion_point(field_get:jinrongForum.SJinrongForumVisitLog.uid)
  return _internal_uid();
}
inline void SJinrongForumVisitLog::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  uid_ = value;
}
inline void SJinrongForumVisitLog::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:jinrongForum.SJinrongForumVisitLog.uid)
}

// int32 isFirst = 2;
inline void SJinrongForumVisitLog::clear_isfirst() {
  isfirst_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SJinrongForumVisitLog::_internal_isfirst() const {
  return isfirst_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SJinrongForumVisitLog::isfirst() const {
  // @@protoc_insertion_point(field_get:jinrongForum.SJinrongForumVisitLog.isFirst)
  return _internal_isfirst();
}
inline void SJinrongForumVisitLog::_internal_set_isfirst(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  isfirst_ = value;
}
inline void SJinrongForumVisitLog::set_isfirst(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_isfirst(value);
  // @@protoc_insertion_point(field_set:jinrongForum.SJinrongForumVisitLog.isFirst)
}

// int32 actionId = 3;
inline void SJinrongForumVisitLog::clear_actionid() {
  actionid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SJinrongForumVisitLog::_internal_actionid() const {
  return actionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SJinrongForumVisitLog::actionid() const {
  // @@protoc_insertion_point(field_get:jinrongForum.SJinrongForumVisitLog.actionId)
  return _internal_actionid();
}
inline void SJinrongForumVisitLog::_internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actionid_ = value;
}
inline void SJinrongForumVisitLog::set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actionid(value);
  // @@protoc_insertion_point(field_set:jinrongForum.SJinrongForumVisitLog.actionId)
}

// -------------------------------------------------------------------

// CGetJinrongForumFreeGift

// -------------------------------------------------------------------

// SGetJinrongForumFreeGift

// int32 state = 1;
inline void SGetJinrongForumFreeGift::clear_state() {
  state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SGetJinrongForumFreeGift::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SGetJinrongForumFreeGift::state() const {
  // @@protoc_insertion_point(field_get:jinrongForum.SGetJinrongForumFreeGift.state)
  return _internal_state();
}
inline void SGetJinrongForumFreeGift::_internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  state_ = value;
}
inline void SGetJinrongForumFreeGift::set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:jinrongForum.SGetJinrongForumFreeGift.state)
}

// string msg = 2;
inline void SGetJinrongForumFreeGift::clear_msg() {
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SGetJinrongForumFreeGift::msg() const {
  // @@protoc_insertion_point(field_get:jinrongForum.SGetJinrongForumFreeGift.msg)
  return _internal_msg();
}
inline void SGetJinrongForumFreeGift::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:jinrongForum.SGetJinrongForumFreeGift.msg)
}
inline std::string* SGetJinrongForumFreeGift::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:jinrongForum.SGetJinrongForumFreeGift.msg)
  return _internal_mutable_msg();
}
inline const std::string& SGetJinrongForumFreeGift::_internal_msg() const {
  return msg_.GetNoArena();
}
inline void SGetJinrongForumFreeGift::_internal_set_msg(const std::string& value) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SGetJinrongForumFreeGift::set_msg(std::string&& value) {
  
  msg_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:jinrongForum.SGetJinrongForumFreeGift.msg)
}
inline void SGetJinrongForumFreeGift::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jinrongForum.SGetJinrongForumFreeGift.msg)
}
inline void SGetJinrongForumFreeGift::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jinrongForum.SGetJinrongForumFreeGift.msg)
}
inline std::string* SGetJinrongForumFreeGift::_internal_mutable_msg() {
  
  return msg_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SGetJinrongForumFreeGift::release_msg() {
  // @@protoc_insertion_point(field_release:jinrongForum.SGetJinrongForumFreeGift.msg)
  
  return msg_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SGetJinrongForumFreeGift::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:jinrongForum.SGetJinrongForumFreeGift.msg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace jinrongForum

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_jinrongForum_2eproto
