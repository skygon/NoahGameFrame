// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloudRender.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cloudRender_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_cloudRender_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "userInfo.pb.h"
#include "userPosition.pb.h"
#include "syncAllObj.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_cloudRender_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cloudRender_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cloudRender_2eproto;
namespace cloudRender {
class CRenderScale;
class CRenderScaleDefaultTypeInternal;
extern CRenderScaleDefaultTypeInternal _CRenderScale_default_instance_;
class CVerify;
class CVerifyDefaultTypeInternal;
extern CVerifyDefaultTypeInternal _CVerify_default_instance_;
class PingACK;
class PingACKDefaultTypeInternal;
extern PingACKDefaultTypeInternal _PingACK_default_instance_;
class SRenderExitRoom;
class SRenderExitRoomDefaultTypeInternal;
extern SRenderExitRoomDefaultTypeInternal _SRenderExitRoom_default_instance_;
class SRenderFrame;
class SRenderFrameDefaultTypeInternal;
extern SRenderFrameDefaultTypeInternal _SRenderFrame_default_instance_;
class SRenderScale;
class SRenderScaleDefaultTypeInternal;
extern SRenderScaleDefaultTypeInternal _SRenderScale_default_instance_;
class SRenderSwitchRoom;
class SRenderSwitchRoomDefaultTypeInternal;
extern SRenderSwitchRoomDefaultTypeInternal _SRenderSwitchRoom_default_instance_;
class SVerify;
class SVerifyDefaultTypeInternal;
extern SVerifyDefaultTypeInternal _SVerify_default_instance_;
}  // namespace cloudRender
PROTOBUF_NAMESPACE_OPEN
template<> ::cloudRender::CRenderScale* Arena::CreateMaybeMessage<::cloudRender::CRenderScale>(Arena*);
template<> ::cloudRender::CVerify* Arena::CreateMaybeMessage<::cloudRender::CVerify>(Arena*);
template<> ::cloudRender::PingACK* Arena::CreateMaybeMessage<::cloudRender::PingACK>(Arena*);
template<> ::cloudRender::SRenderExitRoom* Arena::CreateMaybeMessage<::cloudRender::SRenderExitRoom>(Arena*);
template<> ::cloudRender::SRenderFrame* Arena::CreateMaybeMessage<::cloudRender::SRenderFrame>(Arena*);
template<> ::cloudRender::SRenderScale* Arena::CreateMaybeMessage<::cloudRender::SRenderScale>(Arena*);
template<> ::cloudRender::SRenderSwitchRoom* Arena::CreateMaybeMessage<::cloudRender::SRenderSwitchRoom>(Arena*);
template<> ::cloudRender::SVerify* Arena::CreateMaybeMessage<::cloudRender::SVerify>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace cloudRender {

enum ResultCode : int {
  NoError = 0,
  AgentNotFound = 101,
  AgentAddressError = 102,
  GameNotFound = 103,
  ResultCode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ResultCode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ResultCode_IsValid(int value);
constexpr ResultCode ResultCode_MIN = NoError;
constexpr ResultCode ResultCode_MAX = GameNotFound;
constexpr int ResultCode_ARRAYSIZE = ResultCode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ResultCode_descriptor();
template<typename T>
inline const std::string& ResultCode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ResultCode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ResultCode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ResultCode_descriptor(), enum_t_value);
}
inline bool ResultCode_Parse(
    const std::string& name, ResultCode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ResultCode>(
    ResultCode_descriptor(), name, value);
}
// ===================================================================

class CVerify :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cloudRender.CVerify) */ {
 public:
  CVerify();
  virtual ~CVerify();

  CVerify(const CVerify& from);
  CVerify(CVerify&& from) noexcept
    : CVerify() {
    *this = ::std::move(from);
  }

  inline CVerify& operator=(const CVerify& from) {
    CopyFrom(from);
    return *this;
  }
  inline CVerify& operator=(CVerify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CVerify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CVerify* internal_default_instance() {
    return reinterpret_cast<const CVerify*>(
               &_CVerify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CVerify& a, CVerify& b) {
    a.Swap(&b);
  }
  inline void Swap(CVerify* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CVerify* New() const final {
    return CreateMaybeMessage<CVerify>(nullptr);
  }

  CVerify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CVerify>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CVerify& from);
  void MergeFrom(const CVerify& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CVerify* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cloudRender.CVerify";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cloudRender_2eproto);
    return ::descriptor_table_cloudRender_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
    kHouseIndexFieldNumber = 2,
  };
  // int32 Uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 HouseIndex = 2;
  void clear_houseindex();
  ::PROTOBUF_NAMESPACE_ID::int32 houseindex() const;
  void set_houseindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_houseindex() const;
  void _internal_set_houseindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:cloudRender.CVerify)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 houseindex_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_cloudRender_2eproto;
};
// -------------------------------------------------------------------

class SVerify :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cloudRender.SVerify) */ {
 public:
  SVerify();
  virtual ~SVerify();

  SVerify(const SVerify& from);
  SVerify(SVerify&& from) noexcept
    : SVerify() {
    *this = ::std::move(from);
  }

  inline SVerify& operator=(const SVerify& from) {
    CopyFrom(from);
    return *this;
  }
  inline SVerify& operator=(SVerify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SVerify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SVerify* internal_default_instance() {
    return reinterpret_cast<const SVerify*>(
               &_SVerify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SVerify& a, SVerify& b) {
    a.Swap(&b);
  }
  inline void Swap(SVerify* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SVerify* New() const final {
    return CreateMaybeMessage<SVerify>(nullptr);
  }

  SVerify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SVerify>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SVerify& from);
  void MergeFrom(const SVerify& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SVerify* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cloudRender.SVerify";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cloudRender_2eproto);
    return ::descriptor_table_cloudRender_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserListFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated .userInfo.SUserInfo UserList = 2;
  int userlist_size() const;
  private:
  int _internal_userlist_size() const;
  public:
  void clear_userlist();
  ::userInfo::SUserInfo* mutable_userlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userInfo::SUserInfo >*
      mutable_userlist();
  private:
  const ::userInfo::SUserInfo& _internal_userlist(int index) const;
  ::userInfo::SUserInfo* _internal_add_userlist();
  public:
  const ::userInfo::SUserInfo& userlist(int index) const;
  ::userInfo::SUserInfo* add_userlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userInfo::SUserInfo >&
      userlist() const;

  // .cloudRender.ResultCode Result = 1;
  void clear_result();
  ::cloudRender::ResultCode result() const;
  void set_result(::cloudRender::ResultCode value);
  private:
  ::cloudRender::ResultCode _internal_result() const;
  void _internal_set_result(::cloudRender::ResultCode value);
  public:

  // @@protoc_insertion_point(class_scope:cloudRender.SVerify)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userInfo::SUserInfo > userlist_;
  int result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_cloudRender_2eproto;
};
// -------------------------------------------------------------------

class CRenderScale :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cloudRender.CRenderScale) */ {
 public:
  CRenderScale();
  virtual ~CRenderScale();

  CRenderScale(const CRenderScale& from);
  CRenderScale(CRenderScale&& from) noexcept
    : CRenderScale() {
    *this = ::std::move(from);
  }

  inline CRenderScale& operator=(const CRenderScale& from) {
    CopyFrom(from);
    return *this;
  }
  inline CRenderScale& operator=(CRenderScale&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CRenderScale& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CRenderScale* internal_default_instance() {
    return reinterpret_cast<const CRenderScale*>(
               &_CRenderScale_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CRenderScale& a, CRenderScale& b) {
    a.Swap(&b);
  }
  inline void Swap(CRenderScale* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CRenderScale* New() const final {
    return CreateMaybeMessage<CRenderScale>(nullptr);
  }

  CRenderScale* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CRenderScale>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CRenderScale& from);
  void MergeFrom(const CRenderScale& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CRenderScale* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cloudRender.CRenderScale";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cloudRender_2eproto);
    return ::descriptor_table_cloudRender_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
    kNumFieldNumber = 2,
    kOptFieldNumber = 3,
    kIsGeneralFieldNumber = 4,
  };
  // int32 Uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Num = 2;
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::int32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Opt = 3;
  void clear_opt();
  ::PROTOBUF_NAMESPACE_ID::int32 opt() const;
  void set_opt(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_opt() const;
  void _internal_set_opt(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool IsGeneral = 4;
  void clear_isgeneral();
  bool isgeneral() const;
  void set_isgeneral(bool value);
  private:
  bool _internal_isgeneral() const;
  void _internal_set_isgeneral(bool value);
  public:

  // @@protoc_insertion_point(class_scope:cloudRender.CRenderScale)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_;
  ::PROTOBUF_NAMESPACE_ID::int32 opt_;
  bool isgeneral_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_cloudRender_2eproto;
};
// -------------------------------------------------------------------

class SRenderScale :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cloudRender.SRenderScale) */ {
 public:
  SRenderScale();
  virtual ~SRenderScale();

  SRenderScale(const SRenderScale& from);
  SRenderScale(SRenderScale&& from) noexcept
    : SRenderScale() {
    *this = ::std::move(from);
  }

  inline SRenderScale& operator=(const SRenderScale& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRenderScale& operator=(SRenderScale&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SRenderScale& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SRenderScale* internal_default_instance() {
    return reinterpret_cast<const SRenderScale*>(
               &_SRenderScale_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SRenderScale& a, SRenderScale& b) {
    a.Swap(&b);
  }
  inline void Swap(SRenderScale* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SRenderScale* New() const final {
    return CreateMaybeMessage<SRenderScale>(nullptr);
  }

  SRenderScale* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SRenderScale>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SRenderScale& from);
  void MergeFrom(const SRenderScale& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SRenderScale* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cloudRender.SRenderScale";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cloudRender_2eproto);
    return ::descriptor_table_cloudRender_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // .cloudRender.ResultCode Result = 1;
  void clear_result();
  ::cloudRender::ResultCode result() const;
  void set_result(::cloudRender::ResultCode value);
  private:
  ::cloudRender::ResultCode _internal_result() const;
  void _internal_set_result(::cloudRender::ResultCode value);
  public:

  // @@protoc_insertion_point(class_scope:cloudRender.SRenderScale)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  int result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_cloudRender_2eproto;
};
// -------------------------------------------------------------------

class SRenderSwitchRoom :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cloudRender.SRenderSwitchRoom) */ {
 public:
  SRenderSwitchRoom();
  virtual ~SRenderSwitchRoom();

  SRenderSwitchRoom(const SRenderSwitchRoom& from);
  SRenderSwitchRoom(SRenderSwitchRoom&& from) noexcept
    : SRenderSwitchRoom() {
    *this = ::std::move(from);
  }

  inline SRenderSwitchRoom& operator=(const SRenderSwitchRoom& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRenderSwitchRoom& operator=(SRenderSwitchRoom&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SRenderSwitchRoom& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SRenderSwitchRoom* internal_default_instance() {
    return reinterpret_cast<const SRenderSwitchRoom*>(
               &_SRenderSwitchRoom_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SRenderSwitchRoom& a, SRenderSwitchRoom& b) {
    a.Swap(&b);
  }
  inline void Swap(SRenderSwitchRoom* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SRenderSwitchRoom* New() const final {
    return CreateMaybeMessage<SRenderSwitchRoom>(nullptr);
  }

  SRenderSwitchRoom* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SRenderSwitchRoom>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SRenderSwitchRoom& from);
  void MergeFrom(const SRenderSwitchRoom& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SRenderSwitchRoom* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cloudRender.SRenderSwitchRoom";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cloudRender_2eproto);
    return ::descriptor_table_cloudRender_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
  };
  // int32 Uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:cloudRender.SRenderSwitchRoom)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_cloudRender_2eproto;
};
// -------------------------------------------------------------------

class SRenderExitRoom :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cloudRender.SRenderExitRoom) */ {
 public:
  SRenderExitRoom();
  virtual ~SRenderExitRoom();

  SRenderExitRoom(const SRenderExitRoom& from);
  SRenderExitRoom(SRenderExitRoom&& from) noexcept
    : SRenderExitRoom() {
    *this = ::std::move(from);
  }

  inline SRenderExitRoom& operator=(const SRenderExitRoom& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRenderExitRoom& operator=(SRenderExitRoom&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SRenderExitRoom& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SRenderExitRoom* internal_default_instance() {
    return reinterpret_cast<const SRenderExitRoom*>(
               &_SRenderExitRoom_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SRenderExitRoom& a, SRenderExitRoom& b) {
    a.Swap(&b);
  }
  inline void Swap(SRenderExitRoom* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SRenderExitRoom* New() const final {
    return CreateMaybeMessage<SRenderExitRoom>(nullptr);
  }

  SRenderExitRoom* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SRenderExitRoom>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SRenderExitRoom& from);
  void MergeFrom(const SRenderExitRoom& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SRenderExitRoom* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cloudRender.SRenderExitRoom";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cloudRender_2eproto);
    return ::descriptor_table_cloudRender_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
  };
  // int32 Uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:cloudRender.SRenderExitRoom)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_cloudRender_2eproto;
};
// -------------------------------------------------------------------

class SRenderFrame :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cloudRender.SRenderFrame) */ {
 public:
  SRenderFrame();
  virtual ~SRenderFrame();

  SRenderFrame(const SRenderFrame& from);
  SRenderFrame(SRenderFrame&& from) noexcept
    : SRenderFrame() {
    *this = ::std::move(from);
  }

  inline SRenderFrame& operator=(const SRenderFrame& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRenderFrame& operator=(SRenderFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SRenderFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SRenderFrame* internal_default_instance() {
    return reinterpret_cast<const SRenderFrame*>(
               &_SRenderFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SRenderFrame& a, SRenderFrame& b) {
    a.Swap(&b);
  }
  inline void Swap(SRenderFrame* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SRenderFrame* New() const final {
    return CreateMaybeMessage<SRenderFrame>(nullptr);
  }

  SRenderFrame* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SRenderFrame>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SRenderFrame& from);
  void MergeFrom(const SRenderFrame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SRenderFrame* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cloudRender.SRenderFrame";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cloudRender_2eproto);
    return ::descriptor_table_cloudRender_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionListFieldNumber = 1,
    kEventListFieldNumber = 2,
  };
  // repeated .userPosition.UPosition PositionList = 1;
  int positionlist_size() const;
  private:
  int _internal_positionlist_size() const;
  public:
  void clear_positionlist();
  ::userPosition::UPosition* mutable_positionlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userPosition::UPosition >*
      mutable_positionlist();
  private:
  const ::userPosition::UPosition& _internal_positionlist(int index) const;
  ::userPosition::UPosition* _internal_add_positionlist();
  public:
  const ::userPosition::UPosition& positionlist(int index) const;
  ::userPosition::UPosition* add_positionlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userPosition::UPosition >&
      positionlist() const;

  // repeated .syncAllObj.ActionEvent EventList = 2;
  int eventlist_size() const;
  private:
  int _internal_eventlist_size() const;
  public:
  void clear_eventlist();
  ::syncAllObj::ActionEvent* mutable_eventlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::syncAllObj::ActionEvent >*
      mutable_eventlist();
  private:
  const ::syncAllObj::ActionEvent& _internal_eventlist(int index) const;
  ::syncAllObj::ActionEvent* _internal_add_eventlist();
  public:
  const ::syncAllObj::ActionEvent& eventlist(int index) const;
  ::syncAllObj::ActionEvent* add_eventlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::syncAllObj::ActionEvent >&
      eventlist() const;

  // @@protoc_insertion_point(class_scope:cloudRender.SRenderFrame)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userPosition::UPosition > positionlist_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::syncAllObj::ActionEvent > eventlist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_cloudRender_2eproto;
};
// -------------------------------------------------------------------

class PingACK :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cloudRender.PingACK) */ {
 public:
  PingACK();
  virtual ~PingACK();

  PingACK(const PingACK& from);
  PingACK(PingACK&& from) noexcept
    : PingACK() {
    *this = ::std::move(from);
  }

  inline PingACK& operator=(const PingACK& from) {
    CopyFrom(from);
    return *this;
  }
  inline PingACK& operator=(PingACK&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PingACK& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PingACK* internal_default_instance() {
    return reinterpret_cast<const PingACK*>(
               &_PingACK_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(PingACK& a, PingACK& b) {
    a.Swap(&b);
  }
  inline void Swap(PingACK* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PingACK* New() const final {
    return CreateMaybeMessage<PingACK>(nullptr);
  }

  PingACK* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PingACK>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PingACK& from);
  void MergeFrom(const PingACK& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PingACK* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cloudRender.PingACK";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cloudRender_2eproto);
    return ::descriptor_table_cloudRender_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cloudRender.PingACK)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_cloudRender_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CVerify

// int32 Uid = 1;
inline void CVerify::clear_uid() {
  uid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CVerify::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CVerify::uid() const {
  // @@protoc_insertion_point(field_get:cloudRender.CVerify.Uid)
  return _internal_uid();
}
inline void CVerify::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  uid_ = value;
}
inline void CVerify::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:cloudRender.CVerify.Uid)
}

// int32 HouseIndex = 2;
inline void CVerify::clear_houseindex() {
  houseindex_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CVerify::_internal_houseindex() const {
  return houseindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CVerify::houseindex() const {
  // @@protoc_insertion_point(field_get:cloudRender.CVerify.HouseIndex)
  return _internal_houseindex();
}
inline void CVerify::_internal_set_houseindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  houseindex_ = value;
}
inline void CVerify::set_houseindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_houseindex(value);
  // @@protoc_insertion_point(field_set:cloudRender.CVerify.HouseIndex)
}

// -------------------------------------------------------------------

// SVerify

// .cloudRender.ResultCode Result = 1;
inline void SVerify::clear_result() {
  result_ = 0;
}
inline ::cloudRender::ResultCode SVerify::_internal_result() const {
  return static_cast< ::cloudRender::ResultCode >(result_);
}
inline ::cloudRender::ResultCode SVerify::result() const {
  // @@protoc_insertion_point(field_get:cloudRender.SVerify.Result)
  return _internal_result();
}
inline void SVerify::_internal_set_result(::cloudRender::ResultCode value) {
  
  result_ = value;
}
inline void SVerify::set_result(::cloudRender::ResultCode value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:cloudRender.SVerify.Result)
}

// repeated .userInfo.SUserInfo UserList = 2;
inline int SVerify::_internal_userlist_size() const {
  return userlist_.size();
}
inline int SVerify::userlist_size() const {
  return _internal_userlist_size();
}
inline ::userInfo::SUserInfo* SVerify::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:cloudRender.SVerify.UserList)
  return userlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userInfo::SUserInfo >*
SVerify::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:cloudRender.SVerify.UserList)
  return &userlist_;
}
inline const ::userInfo::SUserInfo& SVerify::_internal_userlist(int index) const {
  return userlist_.Get(index);
}
inline const ::userInfo::SUserInfo& SVerify::userlist(int index) const {
  // @@protoc_insertion_point(field_get:cloudRender.SVerify.UserList)
  return _internal_userlist(index);
}
inline ::userInfo::SUserInfo* SVerify::_internal_add_userlist() {
  return userlist_.Add();
}
inline ::userInfo::SUserInfo* SVerify::add_userlist() {
  // @@protoc_insertion_point(field_add:cloudRender.SVerify.UserList)
  return _internal_add_userlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userInfo::SUserInfo >&
SVerify::userlist() const {
  // @@protoc_insertion_point(field_list:cloudRender.SVerify.UserList)
  return userlist_;
}

// -------------------------------------------------------------------

// CRenderScale

// int32 Uid = 1;
inline void CRenderScale::clear_uid() {
  uid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CRenderScale::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CRenderScale::uid() const {
  // @@protoc_insertion_point(field_get:cloudRender.CRenderScale.Uid)
  return _internal_uid();
}
inline void CRenderScale::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  uid_ = value;
}
inline void CRenderScale::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:cloudRender.CRenderScale.Uid)
}

// int32 Num = 2;
inline void CRenderScale::clear_num() {
  num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CRenderScale::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CRenderScale::num() const {
  // @@protoc_insertion_point(field_get:cloudRender.CRenderScale.Num)
  return _internal_num();
}
inline void CRenderScale::_internal_set_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  num_ = value;
}
inline void CRenderScale::set_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:cloudRender.CRenderScale.Num)
}

// int32 Opt = 3;
inline void CRenderScale::clear_opt() {
  opt_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CRenderScale::_internal_opt() const {
  return opt_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CRenderScale::opt() const {
  // @@protoc_insertion_point(field_get:cloudRender.CRenderScale.Opt)
  return _internal_opt();
}
inline void CRenderScale::_internal_set_opt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  opt_ = value;
}
inline void CRenderScale::set_opt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_opt(value);
  // @@protoc_insertion_point(field_set:cloudRender.CRenderScale.Opt)
}

// bool IsGeneral = 4;
inline void CRenderScale::clear_isgeneral() {
  isgeneral_ = false;
}
inline bool CRenderScale::_internal_isgeneral() const {
  return isgeneral_;
}
inline bool CRenderScale::isgeneral() const {
  // @@protoc_insertion_point(field_get:cloudRender.CRenderScale.IsGeneral)
  return _internal_isgeneral();
}
inline void CRenderScale::_internal_set_isgeneral(bool value) {
  
  isgeneral_ = value;
}
inline void CRenderScale::set_isgeneral(bool value) {
  _internal_set_isgeneral(value);
  // @@protoc_insertion_point(field_set:cloudRender.CRenderScale.IsGeneral)
}

// -------------------------------------------------------------------

// SRenderScale

// .cloudRender.ResultCode Result = 1;
inline void SRenderScale::clear_result() {
  result_ = 0;
}
inline ::cloudRender::ResultCode SRenderScale::_internal_result() const {
  return static_cast< ::cloudRender::ResultCode >(result_);
}
inline ::cloudRender::ResultCode SRenderScale::result() const {
  // @@protoc_insertion_point(field_get:cloudRender.SRenderScale.Result)
  return _internal_result();
}
inline void SRenderScale::_internal_set_result(::cloudRender::ResultCode value) {
  
  result_ = value;
}
inline void SRenderScale::set_result(::cloudRender::ResultCode value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:cloudRender.SRenderScale.Result)
}

// -------------------------------------------------------------------

// SRenderSwitchRoom

// int32 Uid = 1;
inline void SRenderSwitchRoom::clear_uid() {
  uid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SRenderSwitchRoom::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SRenderSwitchRoom::uid() const {
  // @@protoc_insertion_point(field_get:cloudRender.SRenderSwitchRoom.Uid)
  return _internal_uid();
}
inline void SRenderSwitchRoom::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  uid_ = value;
}
inline void SRenderSwitchRoom::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:cloudRender.SRenderSwitchRoom.Uid)
}

// -------------------------------------------------------------------

// SRenderExitRoom

// int32 Uid = 1;
inline void SRenderExitRoom::clear_uid() {
  uid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SRenderExitRoom::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SRenderExitRoom::uid() const {
  // @@protoc_insertion_point(field_get:cloudRender.SRenderExitRoom.Uid)
  return _internal_uid();
}
inline void SRenderExitRoom::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  uid_ = value;
}
inline void SRenderExitRoom::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:cloudRender.SRenderExitRoom.Uid)
}

// -------------------------------------------------------------------

// SRenderFrame

// repeated .userPosition.UPosition PositionList = 1;
inline int SRenderFrame::_internal_positionlist_size() const {
  return positionlist_.size();
}
inline int SRenderFrame::positionlist_size() const {
  return _internal_positionlist_size();
}
inline ::userPosition::UPosition* SRenderFrame::mutable_positionlist(int index) {
  // @@protoc_insertion_point(field_mutable:cloudRender.SRenderFrame.PositionList)
  return positionlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userPosition::UPosition >*
SRenderFrame::mutable_positionlist() {
  // @@protoc_insertion_point(field_mutable_list:cloudRender.SRenderFrame.PositionList)
  return &positionlist_;
}
inline const ::userPosition::UPosition& SRenderFrame::_internal_positionlist(int index) const {
  return positionlist_.Get(index);
}
inline const ::userPosition::UPosition& SRenderFrame::positionlist(int index) const {
  // @@protoc_insertion_point(field_get:cloudRender.SRenderFrame.PositionList)
  return _internal_positionlist(index);
}
inline ::userPosition::UPosition* SRenderFrame::_internal_add_positionlist() {
  return positionlist_.Add();
}
inline ::userPosition::UPosition* SRenderFrame::add_positionlist() {
  // @@protoc_insertion_point(field_add:cloudRender.SRenderFrame.PositionList)
  return _internal_add_positionlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userPosition::UPosition >&
SRenderFrame::positionlist() const {
  // @@protoc_insertion_point(field_list:cloudRender.SRenderFrame.PositionList)
  return positionlist_;
}

// repeated .syncAllObj.ActionEvent EventList = 2;
inline int SRenderFrame::_internal_eventlist_size() const {
  return eventlist_.size();
}
inline int SRenderFrame::eventlist_size() const {
  return _internal_eventlist_size();
}
inline ::syncAllObj::ActionEvent* SRenderFrame::mutable_eventlist(int index) {
  // @@protoc_insertion_point(field_mutable:cloudRender.SRenderFrame.EventList)
  return eventlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::syncAllObj::ActionEvent >*
SRenderFrame::mutable_eventlist() {
  // @@protoc_insertion_point(field_mutable_list:cloudRender.SRenderFrame.EventList)
  return &eventlist_;
}
inline const ::syncAllObj::ActionEvent& SRenderFrame::_internal_eventlist(int index) const {
  return eventlist_.Get(index);
}
inline const ::syncAllObj::ActionEvent& SRenderFrame::eventlist(int index) const {
  // @@protoc_insertion_point(field_get:cloudRender.SRenderFrame.EventList)
  return _internal_eventlist(index);
}
inline ::syncAllObj::ActionEvent* SRenderFrame::_internal_add_eventlist() {
  return eventlist_.Add();
}
inline ::syncAllObj::ActionEvent* SRenderFrame::add_eventlist() {
  // @@protoc_insertion_point(field_add:cloudRender.SRenderFrame.EventList)
  return _internal_add_eventlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::syncAllObj::ActionEvent >&
SRenderFrame::eventlist() const {
  // @@protoc_insertion_point(field_list:cloudRender.SRenderFrame.EventList)
  return eventlist_;
}

// -------------------------------------------------------------------

// PingACK

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace cloudRender

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::cloudRender::ResultCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cloudRender::ResultCode>() {
  return ::cloudRender::ResultCode_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_cloudRender_2eproto
