// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shoppingGiftConsume.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_shoppingGiftConsume_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_shoppingGiftConsume_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_shoppingGiftConsume_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_shoppingGiftConsume_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_shoppingGiftConsume_2eproto;
namespace pb {
class BUserGift;
class BUserGiftDefaultTypeInternal;
extern BUserGiftDefaultTypeInternal _BUserGift_default_instance_;
class CUserConsumeGiftList;
class CUserConsumeGiftListDefaultTypeInternal;
extern CUserConsumeGiftListDefaultTypeInternal _CUserConsumeGiftList_default_instance_;
class CUserGiftList;
class CUserGiftListDefaultTypeInternal;
extern CUserGiftListDefaultTypeInternal _CUserGiftList_default_instance_;
class CUserObtainGiftList;
class CUserObtainGiftListDefaultTypeInternal;
extern CUserObtainGiftListDefaultTypeInternal _CUserObtainGiftList_default_instance_;
class GiftInfo;
class GiftInfoDefaultTypeInternal;
extern GiftInfoDefaultTypeInternal _GiftInfo_default_instance_;
class SUserConsumeGiftList;
class SUserConsumeGiftListDefaultTypeInternal;
extern SUserConsumeGiftListDefaultTypeInternal _SUserConsumeGiftList_default_instance_;
class SUserGiftList;
class SUserGiftListDefaultTypeInternal;
extern SUserGiftListDefaultTypeInternal _SUserGiftList_default_instance_;
class SUserObtainGiftList;
class SUserObtainGiftListDefaultTypeInternal;
extern SUserObtainGiftListDefaultTypeInternal _SUserObtainGiftList_default_instance_;
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::BUserGift* Arena::CreateMaybeMessage<::pb::BUserGift>(Arena*);
template<> ::pb::CUserConsumeGiftList* Arena::CreateMaybeMessage<::pb::CUserConsumeGiftList>(Arena*);
template<> ::pb::CUserGiftList* Arena::CreateMaybeMessage<::pb::CUserGiftList>(Arena*);
template<> ::pb::CUserObtainGiftList* Arena::CreateMaybeMessage<::pb::CUserObtainGiftList>(Arena*);
template<> ::pb::GiftInfo* Arena::CreateMaybeMessage<::pb::GiftInfo>(Arena*);
template<> ::pb::SUserConsumeGiftList* Arena::CreateMaybeMessage<::pb::SUserConsumeGiftList>(Arena*);
template<> ::pb::SUserGiftList* Arena::CreateMaybeMessage<::pb::SUserGiftList>(Arena*);
template<> ::pb::SUserObtainGiftList* Arena::CreateMaybeMessage<::pb::SUserObtainGiftList>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {

// ===================================================================

class CUserGiftList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.CUserGiftList) */ {
 public:
  CUserGiftList();
  virtual ~CUserGiftList();

  CUserGiftList(const CUserGiftList& from);
  CUserGiftList(CUserGiftList&& from) noexcept
    : CUserGiftList() {
    *this = ::std::move(from);
  }

  inline CUserGiftList& operator=(const CUserGiftList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CUserGiftList& operator=(CUserGiftList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CUserGiftList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserGiftList* internal_default_instance() {
    return reinterpret_cast<const CUserGiftList*>(
               &_CUserGiftList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CUserGiftList& a, CUserGiftList& b) {
    a.Swap(&b);
  }
  inline void Swap(CUserGiftList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CUserGiftList* New() const final {
    return CreateMaybeMessage<CUserGiftList>(nullptr);
  }

  CUserGiftList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CUserGiftList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CUserGiftList& from);
  void MergeFrom(const CUserGiftList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserGiftList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.CUserGiftList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shoppingGiftConsume_2eproto);
    return ::descriptor_table_shoppingGiftConsume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
  };
  // int32 uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.CUserGiftList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shoppingGiftConsume_2eproto;
};
// -------------------------------------------------------------------

class SUserGiftList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SUserGiftList) */ {
 public:
  SUserGiftList();
  virtual ~SUserGiftList();

  SUserGiftList(const SUserGiftList& from);
  SUserGiftList(SUserGiftList&& from) noexcept
    : SUserGiftList() {
    *this = ::std::move(from);
  }

  inline SUserGiftList& operator=(const SUserGiftList& from) {
    CopyFrom(from);
    return *this;
  }
  inline SUserGiftList& operator=(SUserGiftList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SUserGiftList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SUserGiftList* internal_default_instance() {
    return reinterpret_cast<const SUserGiftList*>(
               &_SUserGiftList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SUserGiftList& a, SUserGiftList& b) {
    a.Swap(&b);
  }
  inline void Swap(SUserGiftList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SUserGiftList* New() const final {
    return CreateMaybeMessage<SUserGiftList>(nullptr);
  }

  SUserGiftList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SUserGiftList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SUserGiftList& from);
  void MergeFrom(const SUserGiftList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SUserGiftList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SUserGiftList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shoppingGiftConsume_2eproto);
    return ::descriptor_table_shoppingGiftConsume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kListFieldNumber = 1,
  };
  // repeated .pb.BUserGift list = 1;
  int list_size() const;
  private:
  int _internal_list_size() const;
  public:
  void clear_list();
  ::pb::BUserGift* mutable_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::BUserGift >*
      mutable_list();
  private:
  const ::pb::BUserGift& _internal_list(int index) const;
  ::pb::BUserGift* _internal_add_list();
  public:
  const ::pb::BUserGift& list(int index) const;
  ::pb::BUserGift* add_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::BUserGift >&
      list() const;

  // @@protoc_insertion_point(class_scope:pb.SUserGiftList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::BUserGift > list_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shoppingGiftConsume_2eproto;
};
// -------------------------------------------------------------------

class BUserGift :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.BUserGift) */ {
 public:
  BUserGift();
  virtual ~BUserGift();

  BUserGift(const BUserGift& from);
  BUserGift(BUserGift&& from) noexcept
    : BUserGift() {
    *this = ::std::move(from);
  }

  inline BUserGift& operator=(const BUserGift& from) {
    CopyFrom(from);
    return *this;
  }
  inline BUserGift& operator=(BUserGift&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BUserGift& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BUserGift* internal_default_instance() {
    return reinterpret_cast<const BUserGift*>(
               &_BUserGift_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(BUserGift& a, BUserGift& b) {
    a.Swap(&b);
  }
  inline void Swap(BUserGift* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BUserGift* New() const final {
    return CreateMaybeMessage<BUserGift>(nullptr);
  }

  BUserGift* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BUserGift>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BUserGift& from);
  void MergeFrom(const BUserGift& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BUserGift* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.BUserGift";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shoppingGiftConsume_2eproto);
    return ::descriptor_table_shoppingGiftConsume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShoppingNameFieldNumber = 2,
    kCoverFieldNumber = 3,
    kShoppingIdFieldNumber = 1,
    kCountFieldNumber = 4,
  };
  // string shoppingName = 2;
  void clear_shoppingname();
  const std::string& shoppingname() const;
  void set_shoppingname(const std::string& value);
  void set_shoppingname(std::string&& value);
  void set_shoppingname(const char* value);
  void set_shoppingname(const char* value, size_t size);
  std::string* mutable_shoppingname();
  std::string* release_shoppingname();
  void set_allocated_shoppingname(std::string* shoppingname);
  private:
  const std::string& _internal_shoppingname() const;
  void _internal_set_shoppingname(const std::string& value);
  std::string* _internal_mutable_shoppingname();
  public:

  // string cover = 3;
  void clear_cover();
  const std::string& cover() const;
  void set_cover(const std::string& value);
  void set_cover(std::string&& value);
  void set_cover(const char* value);
  void set_cover(const char* value, size_t size);
  std::string* mutable_cover();
  std::string* release_cover();
  void set_allocated_cover(std::string* cover);
  private:
  const std::string& _internal_cover() const;
  void _internal_set_cover(const std::string& value);
  std::string* _internal_mutable_cover();
  public:

  // int32 shoppingId = 1;
  void clear_shoppingid();
  ::PROTOBUF_NAMESPACE_ID::int32 shoppingid() const;
  void set_shoppingid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_shoppingid() const;
  void _internal_set_shoppingid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 count = 4;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.BUserGift)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr shoppingname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cover_;
  ::PROTOBUF_NAMESPACE_ID::int32 shoppingid_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shoppingGiftConsume_2eproto;
};
// -------------------------------------------------------------------

class CUserConsumeGiftList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.CUserConsumeGiftList) */ {
 public:
  CUserConsumeGiftList();
  virtual ~CUserConsumeGiftList();

  CUserConsumeGiftList(const CUserConsumeGiftList& from);
  CUserConsumeGiftList(CUserConsumeGiftList&& from) noexcept
    : CUserConsumeGiftList() {
    *this = ::std::move(from);
  }

  inline CUserConsumeGiftList& operator=(const CUserConsumeGiftList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CUserConsumeGiftList& operator=(CUserConsumeGiftList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CUserConsumeGiftList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserConsumeGiftList* internal_default_instance() {
    return reinterpret_cast<const CUserConsumeGiftList*>(
               &_CUserConsumeGiftList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CUserConsumeGiftList& a, CUserConsumeGiftList& b) {
    a.Swap(&b);
  }
  inline void Swap(CUserConsumeGiftList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CUserConsumeGiftList* New() const final {
    return CreateMaybeMessage<CUserConsumeGiftList>(nullptr);
  }

  CUserConsumeGiftList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CUserConsumeGiftList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CUserConsumeGiftList& from);
  void MergeFrom(const CUserConsumeGiftList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserConsumeGiftList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.CUserConsumeGiftList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shoppingGiftConsume_2eproto);
    return ::descriptor_table_shoppingGiftConsume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurPageFieldNumber = 1,
    kPageLimitFieldNumber = 2,
  };
  // int32 curPage = 1;
  void clear_curpage();
  ::PROTOBUF_NAMESPACE_ID::int32 curpage() const;
  void set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_curpage() const;
  void _internal_set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 pageLimit = 2;
  void clear_pagelimit();
  ::PROTOBUF_NAMESPACE_ID::int32 pagelimit() const;
  void set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pagelimit() const;
  void _internal_set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.CUserConsumeGiftList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 curpage_;
  ::PROTOBUF_NAMESPACE_ID::int32 pagelimit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shoppingGiftConsume_2eproto;
};
// -------------------------------------------------------------------

class SUserConsumeGiftList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SUserConsumeGiftList) */ {
 public:
  SUserConsumeGiftList();
  virtual ~SUserConsumeGiftList();

  SUserConsumeGiftList(const SUserConsumeGiftList& from);
  SUserConsumeGiftList(SUserConsumeGiftList&& from) noexcept
    : SUserConsumeGiftList() {
    *this = ::std::move(from);
  }

  inline SUserConsumeGiftList& operator=(const SUserConsumeGiftList& from) {
    CopyFrom(from);
    return *this;
  }
  inline SUserConsumeGiftList& operator=(SUserConsumeGiftList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SUserConsumeGiftList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SUserConsumeGiftList* internal_default_instance() {
    return reinterpret_cast<const SUserConsumeGiftList*>(
               &_SUserConsumeGiftList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SUserConsumeGiftList& a, SUserConsumeGiftList& b) {
    a.Swap(&b);
  }
  inline void Swap(SUserConsumeGiftList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SUserConsumeGiftList* New() const final {
    return CreateMaybeMessage<SUserConsumeGiftList>(nullptr);
  }

  SUserConsumeGiftList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SUserConsumeGiftList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SUserConsumeGiftList& from);
  void MergeFrom(const SUserConsumeGiftList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SUserConsumeGiftList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SUserConsumeGiftList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shoppingGiftConsume_2eproto);
    return ::descriptor_table_shoppingGiftConsume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kListFieldNumber = 1,
    kMsgFieldNumber = 4,
    kCurPageFieldNumber = 2,
    kTotalFieldNumber = 3,
  };
  // repeated .pb.GiftInfo list = 1;
  int list_size() const;
  private:
  int _internal_list_size() const;
  public:
  void clear_list();
  ::pb::GiftInfo* mutable_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::GiftInfo >*
      mutable_list();
  private:
  const ::pb::GiftInfo& _internal_list(int index) const;
  ::pb::GiftInfo* _internal_add_list();
  public:
  const ::pb::GiftInfo& list(int index) const;
  ::pb::GiftInfo* add_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::GiftInfo >&
      list() const;

  // string msg = 4;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // int32 curPage = 2;
  void clear_curpage();
  ::PROTOBUF_NAMESPACE_ID::int32 curpage() const;
  void set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_curpage() const;
  void _internal_set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 total = 3;
  void clear_total();
  ::PROTOBUF_NAMESPACE_ID::int32 total() const;
  void set_total(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_total() const;
  void _internal_set_total(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SUserConsumeGiftList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::GiftInfo > list_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::PROTOBUF_NAMESPACE_ID::int32 curpage_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shoppingGiftConsume_2eproto;
};
// -------------------------------------------------------------------

class GiftInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.GiftInfo) */ {
 public:
  GiftInfo();
  virtual ~GiftInfo();

  GiftInfo(const GiftInfo& from);
  GiftInfo(GiftInfo&& from) noexcept
    : GiftInfo() {
    *this = ::std::move(from);
  }

  inline GiftInfo& operator=(const GiftInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GiftInfo& operator=(GiftInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GiftInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GiftInfo* internal_default_instance() {
    return reinterpret_cast<const GiftInfo*>(
               &_GiftInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GiftInfo& a, GiftInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(GiftInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GiftInfo* New() const final {
    return CreateMaybeMessage<GiftInfo>(nullptr);
  }

  GiftInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GiftInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GiftInfo& from);
  void MergeFrom(const GiftInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GiftInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.GiftInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shoppingGiftConsume_2eproto);
    return ::descriptor_table_shoppingGiftConsume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNickFieldNumber = 2,
    kUserIconFieldNumber = 3,
    kGiftNameFieldNumber = 4,
    kCoverFieldNumber = 5,
    kConsumeTimeFieldNumber = 6,
    kUidFieldNumber = 1,
  };
  // string nick = 2;
  void clear_nick();
  const std::string& nick() const;
  void set_nick(const std::string& value);
  void set_nick(std::string&& value);
  void set_nick(const char* value);
  void set_nick(const char* value, size_t size);
  std::string* mutable_nick();
  std::string* release_nick();
  void set_allocated_nick(std::string* nick);
  private:
  const std::string& _internal_nick() const;
  void _internal_set_nick(const std::string& value);
  std::string* _internal_mutable_nick();
  public:

  // string userIcon = 3;
  void clear_usericon();
  const std::string& usericon() const;
  void set_usericon(const std::string& value);
  void set_usericon(std::string&& value);
  void set_usericon(const char* value);
  void set_usericon(const char* value, size_t size);
  std::string* mutable_usericon();
  std::string* release_usericon();
  void set_allocated_usericon(std::string* usericon);
  private:
  const std::string& _internal_usericon() const;
  void _internal_set_usericon(const std::string& value);
  std::string* _internal_mutable_usericon();
  public:

  // string giftName = 4;
  void clear_giftname();
  const std::string& giftname() const;
  void set_giftname(const std::string& value);
  void set_giftname(std::string&& value);
  void set_giftname(const char* value);
  void set_giftname(const char* value, size_t size);
  std::string* mutable_giftname();
  std::string* release_giftname();
  void set_allocated_giftname(std::string* giftname);
  private:
  const std::string& _internal_giftname() const;
  void _internal_set_giftname(const std::string& value);
  std::string* _internal_mutable_giftname();
  public:

  // string cover = 5;
  void clear_cover();
  const std::string& cover() const;
  void set_cover(const std::string& value);
  void set_cover(std::string&& value);
  void set_cover(const char* value);
  void set_cover(const char* value, size_t size);
  std::string* mutable_cover();
  std::string* release_cover();
  void set_allocated_cover(std::string* cover);
  private:
  const std::string& _internal_cover() const;
  void _internal_set_cover(const std::string& value);
  std::string* _internal_mutable_cover();
  public:

  // string ConsumeTime = 6;
  void clear_consumetime();
  const std::string& consumetime() const;
  void set_consumetime(const std::string& value);
  void set_consumetime(std::string&& value);
  void set_consumetime(const char* value);
  void set_consumetime(const char* value, size_t size);
  std::string* mutable_consumetime();
  std::string* release_consumetime();
  void set_allocated_consumetime(std::string* consumetime);
  private:
  const std::string& _internal_consumetime() const;
  void _internal_set_consumetime(const std::string& value);
  std::string* _internal_mutable_consumetime();
  public:

  // int32 uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.GiftInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nick_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr usericon_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr giftname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cover_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr consumetime_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shoppingGiftConsume_2eproto;
};
// -------------------------------------------------------------------

class CUserObtainGiftList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.CUserObtainGiftList) */ {
 public:
  CUserObtainGiftList();
  virtual ~CUserObtainGiftList();

  CUserObtainGiftList(const CUserObtainGiftList& from);
  CUserObtainGiftList(CUserObtainGiftList&& from) noexcept
    : CUserObtainGiftList() {
    *this = ::std::move(from);
  }

  inline CUserObtainGiftList& operator=(const CUserObtainGiftList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CUserObtainGiftList& operator=(CUserObtainGiftList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CUserObtainGiftList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserObtainGiftList* internal_default_instance() {
    return reinterpret_cast<const CUserObtainGiftList*>(
               &_CUserObtainGiftList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CUserObtainGiftList& a, CUserObtainGiftList& b) {
    a.Swap(&b);
  }
  inline void Swap(CUserObtainGiftList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CUserObtainGiftList* New() const final {
    return CreateMaybeMessage<CUserObtainGiftList>(nullptr);
  }

  CUserObtainGiftList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CUserObtainGiftList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CUserObtainGiftList& from);
  void MergeFrom(const CUserObtainGiftList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserObtainGiftList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.CUserObtainGiftList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shoppingGiftConsume_2eproto);
    return ::descriptor_table_shoppingGiftConsume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurPageFieldNumber = 1,
    kPageLimitFieldNumber = 2,
  };
  // int32 curPage = 1;
  void clear_curpage();
  ::PROTOBUF_NAMESPACE_ID::int32 curpage() const;
  void set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_curpage() const;
  void _internal_set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 pageLimit = 2;
  void clear_pagelimit();
  ::PROTOBUF_NAMESPACE_ID::int32 pagelimit() const;
  void set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pagelimit() const;
  void _internal_set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.CUserObtainGiftList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 curpage_;
  ::PROTOBUF_NAMESPACE_ID::int32 pagelimit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shoppingGiftConsume_2eproto;
};
// -------------------------------------------------------------------

class SUserObtainGiftList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SUserObtainGiftList) */ {
 public:
  SUserObtainGiftList();
  virtual ~SUserObtainGiftList();

  SUserObtainGiftList(const SUserObtainGiftList& from);
  SUserObtainGiftList(SUserObtainGiftList&& from) noexcept
    : SUserObtainGiftList() {
    *this = ::std::move(from);
  }

  inline SUserObtainGiftList& operator=(const SUserObtainGiftList& from) {
    CopyFrom(from);
    return *this;
  }
  inline SUserObtainGiftList& operator=(SUserObtainGiftList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SUserObtainGiftList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SUserObtainGiftList* internal_default_instance() {
    return reinterpret_cast<const SUserObtainGiftList*>(
               &_SUserObtainGiftList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SUserObtainGiftList& a, SUserObtainGiftList& b) {
    a.Swap(&b);
  }
  inline void Swap(SUserObtainGiftList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SUserObtainGiftList* New() const final {
    return CreateMaybeMessage<SUserObtainGiftList>(nullptr);
  }

  SUserObtainGiftList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SUserObtainGiftList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SUserObtainGiftList& from);
  void MergeFrom(const SUserObtainGiftList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SUserObtainGiftList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SUserObtainGiftList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shoppingGiftConsume_2eproto);
    return ::descriptor_table_shoppingGiftConsume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kListFieldNumber = 1,
    kMsgFieldNumber = 4,
    kCurPageFieldNumber = 2,
    kTotalFieldNumber = 3,
  };
  // repeated .pb.GiftInfo list = 1;
  int list_size() const;
  private:
  int _internal_list_size() const;
  public:
  void clear_list();
  ::pb::GiftInfo* mutable_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::GiftInfo >*
      mutable_list();
  private:
  const ::pb::GiftInfo& _internal_list(int index) const;
  ::pb::GiftInfo* _internal_add_list();
  public:
  const ::pb::GiftInfo& list(int index) const;
  ::pb::GiftInfo* add_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::GiftInfo >&
      list() const;

  // string msg = 4;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // int32 curPage = 2;
  void clear_curpage();
  ::PROTOBUF_NAMESPACE_ID::int32 curpage() const;
  void set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_curpage() const;
  void _internal_set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 total = 3;
  void clear_total();
  ::PROTOBUF_NAMESPACE_ID::int32 total() const;
  void set_total(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_total() const;
  void _internal_set_total(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SUserObtainGiftList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::GiftInfo > list_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::PROTOBUF_NAMESPACE_ID::int32 curpage_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shoppingGiftConsume_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CUserGiftList

// int32 uid = 1;
inline void CUserGiftList::clear_uid() {
  uid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CUserGiftList::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CUserGiftList::uid() const {
  // @@protoc_insertion_point(field_get:pb.CUserGiftList.uid)
  return _internal_uid();
}
inline void CUserGiftList::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  uid_ = value;
}
inline void CUserGiftList::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:pb.CUserGiftList.uid)
}

// -------------------------------------------------------------------

// SUserGiftList

// repeated .pb.BUserGift list = 1;
inline int SUserGiftList::_internal_list_size() const {
  return list_.size();
}
inline int SUserGiftList::list_size() const {
  return _internal_list_size();
}
inline void SUserGiftList::clear_list() {
  list_.Clear();
}
inline ::pb::BUserGift* SUserGiftList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:pb.SUserGiftList.list)
  return list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::BUserGift >*
SUserGiftList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:pb.SUserGiftList.list)
  return &list_;
}
inline const ::pb::BUserGift& SUserGiftList::_internal_list(int index) const {
  return list_.Get(index);
}
inline const ::pb::BUserGift& SUserGiftList::list(int index) const {
  // @@protoc_insertion_point(field_get:pb.SUserGiftList.list)
  return _internal_list(index);
}
inline ::pb::BUserGift* SUserGiftList::_internal_add_list() {
  return list_.Add();
}
inline ::pb::BUserGift* SUserGiftList::add_list() {
  // @@protoc_insertion_point(field_add:pb.SUserGiftList.list)
  return _internal_add_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::BUserGift >&
SUserGiftList::list() const {
  // @@protoc_insertion_point(field_list:pb.SUserGiftList.list)
  return list_;
}

// -------------------------------------------------------------------

// BUserGift

// int32 shoppingId = 1;
inline void BUserGift::clear_shoppingid() {
  shoppingid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BUserGift::_internal_shoppingid() const {
  return shoppingid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BUserGift::shoppingid() const {
  // @@protoc_insertion_point(field_get:pb.BUserGift.shoppingId)
  return _internal_shoppingid();
}
inline void BUserGift::_internal_set_shoppingid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  shoppingid_ = value;
}
inline void BUserGift::set_shoppingid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_shoppingid(value);
  // @@protoc_insertion_point(field_set:pb.BUserGift.shoppingId)
}

// string shoppingName = 2;
inline void BUserGift::clear_shoppingname() {
  shoppingname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& BUserGift::shoppingname() const {
  // @@protoc_insertion_point(field_get:pb.BUserGift.shoppingName)
  return _internal_shoppingname();
}
inline void BUserGift::set_shoppingname(const std::string& value) {
  _internal_set_shoppingname(value);
  // @@protoc_insertion_point(field_set:pb.BUserGift.shoppingName)
}
inline std::string* BUserGift::mutable_shoppingname() {
  // @@protoc_insertion_point(field_mutable:pb.BUserGift.shoppingName)
  return _internal_mutable_shoppingname();
}
inline const std::string& BUserGift::_internal_shoppingname() const {
  return shoppingname_.GetNoArena();
}
inline void BUserGift::_internal_set_shoppingname(const std::string& value) {
  
  shoppingname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void BUserGift::set_shoppingname(std::string&& value) {
  
  shoppingname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.BUserGift.shoppingName)
}
inline void BUserGift::set_shoppingname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  shoppingname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.BUserGift.shoppingName)
}
inline void BUserGift::set_shoppingname(const char* value, size_t size) {
  
  shoppingname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.BUserGift.shoppingName)
}
inline std::string* BUserGift::_internal_mutable_shoppingname() {
  
  return shoppingname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* BUserGift::release_shoppingname() {
  // @@protoc_insertion_point(field_release:pb.BUserGift.shoppingName)
  
  return shoppingname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void BUserGift::set_allocated_shoppingname(std::string* shoppingname) {
  if (shoppingname != nullptr) {
    
  } else {
    
  }
  shoppingname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), shoppingname);
  // @@protoc_insertion_point(field_set_allocated:pb.BUserGift.shoppingName)
}

// string cover = 3;
inline void BUserGift::clear_cover() {
  cover_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& BUserGift::cover() const {
  // @@protoc_insertion_point(field_get:pb.BUserGift.cover)
  return _internal_cover();
}
inline void BUserGift::set_cover(const std::string& value) {
  _internal_set_cover(value);
  // @@protoc_insertion_point(field_set:pb.BUserGift.cover)
}
inline std::string* BUserGift::mutable_cover() {
  // @@protoc_insertion_point(field_mutable:pb.BUserGift.cover)
  return _internal_mutable_cover();
}
inline const std::string& BUserGift::_internal_cover() const {
  return cover_.GetNoArena();
}
inline void BUserGift::_internal_set_cover(const std::string& value) {
  
  cover_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void BUserGift::set_cover(std::string&& value) {
  
  cover_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.BUserGift.cover)
}
inline void BUserGift::set_cover(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cover_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.BUserGift.cover)
}
inline void BUserGift::set_cover(const char* value, size_t size) {
  
  cover_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.BUserGift.cover)
}
inline std::string* BUserGift::_internal_mutable_cover() {
  
  return cover_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* BUserGift::release_cover() {
  // @@protoc_insertion_point(field_release:pb.BUserGift.cover)
  
  return cover_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void BUserGift::set_allocated_cover(std::string* cover) {
  if (cover != nullptr) {
    
  } else {
    
  }
  cover_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cover);
  // @@protoc_insertion_point(field_set_allocated:pb.BUserGift.cover)
}

// int32 count = 4;
inline void BUserGift::clear_count() {
  count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BUserGift::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BUserGift::count() const {
  // @@protoc_insertion_point(field_get:pb.BUserGift.count)
  return _internal_count();
}
inline void BUserGift::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  count_ = value;
}
inline void BUserGift::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:pb.BUserGift.count)
}

// -------------------------------------------------------------------

// CUserConsumeGiftList

// int32 curPage = 1;
inline void CUserConsumeGiftList::clear_curpage() {
  curpage_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CUserConsumeGiftList::_internal_curpage() const {
  return curpage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CUserConsumeGiftList::curpage() const {
  // @@protoc_insertion_point(field_get:pb.CUserConsumeGiftList.curPage)
  return _internal_curpage();
}
inline void CUserConsumeGiftList::_internal_set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  curpage_ = value;
}
inline void CUserConsumeGiftList::set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_curpage(value);
  // @@protoc_insertion_point(field_set:pb.CUserConsumeGiftList.curPage)
}

// int32 pageLimit = 2;
inline void CUserConsumeGiftList::clear_pagelimit() {
  pagelimit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CUserConsumeGiftList::_internal_pagelimit() const {
  return pagelimit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CUserConsumeGiftList::pagelimit() const {
  // @@protoc_insertion_point(field_get:pb.CUserConsumeGiftList.pageLimit)
  return _internal_pagelimit();
}
inline void CUserConsumeGiftList::_internal_set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pagelimit_ = value;
}
inline void CUserConsumeGiftList::set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pagelimit(value);
  // @@protoc_insertion_point(field_set:pb.CUserConsumeGiftList.pageLimit)
}

// -------------------------------------------------------------------

// SUserConsumeGiftList

// repeated .pb.GiftInfo list = 1;
inline int SUserConsumeGiftList::_internal_list_size() const {
  return list_.size();
}
inline int SUserConsumeGiftList::list_size() const {
  return _internal_list_size();
}
inline void SUserConsumeGiftList::clear_list() {
  list_.Clear();
}
inline ::pb::GiftInfo* SUserConsumeGiftList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:pb.SUserConsumeGiftList.list)
  return list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::GiftInfo >*
SUserConsumeGiftList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:pb.SUserConsumeGiftList.list)
  return &list_;
}
inline const ::pb::GiftInfo& SUserConsumeGiftList::_internal_list(int index) const {
  return list_.Get(index);
}
inline const ::pb::GiftInfo& SUserConsumeGiftList::list(int index) const {
  // @@protoc_insertion_point(field_get:pb.SUserConsumeGiftList.list)
  return _internal_list(index);
}
inline ::pb::GiftInfo* SUserConsumeGiftList::_internal_add_list() {
  return list_.Add();
}
inline ::pb::GiftInfo* SUserConsumeGiftList::add_list() {
  // @@protoc_insertion_point(field_add:pb.SUserConsumeGiftList.list)
  return _internal_add_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::GiftInfo >&
SUserConsumeGiftList::list() const {
  // @@protoc_insertion_point(field_list:pb.SUserConsumeGiftList.list)
  return list_;
}

// int32 curPage = 2;
inline void SUserConsumeGiftList::clear_curpage() {
  curpage_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SUserConsumeGiftList::_internal_curpage() const {
  return curpage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SUserConsumeGiftList::curpage() const {
  // @@protoc_insertion_point(field_get:pb.SUserConsumeGiftList.curPage)
  return _internal_curpage();
}
inline void SUserConsumeGiftList::_internal_set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  curpage_ = value;
}
inline void SUserConsumeGiftList::set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_curpage(value);
  // @@protoc_insertion_point(field_set:pb.SUserConsumeGiftList.curPage)
}

// int32 total = 3;
inline void SUserConsumeGiftList::clear_total() {
  total_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SUserConsumeGiftList::_internal_total() const {
  return total_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SUserConsumeGiftList::total() const {
  // @@protoc_insertion_point(field_get:pb.SUserConsumeGiftList.total)
  return _internal_total();
}
inline void SUserConsumeGiftList::_internal_set_total(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  total_ = value;
}
inline void SUserConsumeGiftList::set_total(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_total(value);
  // @@protoc_insertion_point(field_set:pb.SUserConsumeGiftList.total)
}

// string msg = 4;
inline void SUserConsumeGiftList::clear_msg() {
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SUserConsumeGiftList::msg() const {
  // @@protoc_insertion_point(field_get:pb.SUserConsumeGiftList.msg)
  return _internal_msg();
}
inline void SUserConsumeGiftList::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:pb.SUserConsumeGiftList.msg)
}
inline std::string* SUserConsumeGiftList::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:pb.SUserConsumeGiftList.msg)
  return _internal_mutable_msg();
}
inline const std::string& SUserConsumeGiftList::_internal_msg() const {
  return msg_.GetNoArena();
}
inline void SUserConsumeGiftList::_internal_set_msg(const std::string& value) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SUserConsumeGiftList::set_msg(std::string&& value) {
  
  msg_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.SUserConsumeGiftList.msg)
}
inline void SUserConsumeGiftList::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.SUserConsumeGiftList.msg)
}
inline void SUserConsumeGiftList::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.SUserConsumeGiftList.msg)
}
inline std::string* SUserConsumeGiftList::_internal_mutable_msg() {
  
  return msg_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SUserConsumeGiftList::release_msg() {
  // @@protoc_insertion_point(field_release:pb.SUserConsumeGiftList.msg)
  
  return msg_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SUserConsumeGiftList::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:pb.SUserConsumeGiftList.msg)
}

// -------------------------------------------------------------------

// GiftInfo

// int32 uid = 1;
inline void GiftInfo::clear_uid() {
  uid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GiftInfo::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GiftInfo::uid() const {
  // @@protoc_insertion_point(field_get:pb.GiftInfo.uid)
  return _internal_uid();
}
inline void GiftInfo::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  uid_ = value;
}
inline void GiftInfo::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:pb.GiftInfo.uid)
}

// string nick = 2;
inline void GiftInfo::clear_nick() {
  nick_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GiftInfo::nick() const {
  // @@protoc_insertion_point(field_get:pb.GiftInfo.nick)
  return _internal_nick();
}
inline void GiftInfo::set_nick(const std::string& value) {
  _internal_set_nick(value);
  // @@protoc_insertion_point(field_set:pb.GiftInfo.nick)
}
inline std::string* GiftInfo::mutable_nick() {
  // @@protoc_insertion_point(field_mutable:pb.GiftInfo.nick)
  return _internal_mutable_nick();
}
inline const std::string& GiftInfo::_internal_nick() const {
  return nick_.GetNoArena();
}
inline void GiftInfo::_internal_set_nick(const std::string& value) {
  
  nick_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GiftInfo::set_nick(std::string&& value) {
  
  nick_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.GiftInfo.nick)
}
inline void GiftInfo::set_nick(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nick_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.GiftInfo.nick)
}
inline void GiftInfo::set_nick(const char* value, size_t size) {
  
  nick_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.GiftInfo.nick)
}
inline std::string* GiftInfo::_internal_mutable_nick() {
  
  return nick_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GiftInfo::release_nick() {
  // @@protoc_insertion_point(field_release:pb.GiftInfo.nick)
  
  return nick_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GiftInfo::set_allocated_nick(std::string* nick) {
  if (nick != nullptr) {
    
  } else {
    
  }
  nick_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nick);
  // @@protoc_insertion_point(field_set_allocated:pb.GiftInfo.nick)
}

// string userIcon = 3;
inline void GiftInfo::clear_usericon() {
  usericon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GiftInfo::usericon() const {
  // @@protoc_insertion_point(field_get:pb.GiftInfo.userIcon)
  return _internal_usericon();
}
inline void GiftInfo::set_usericon(const std::string& value) {
  _internal_set_usericon(value);
  // @@protoc_insertion_point(field_set:pb.GiftInfo.userIcon)
}
inline std::string* GiftInfo::mutable_usericon() {
  // @@protoc_insertion_point(field_mutable:pb.GiftInfo.userIcon)
  return _internal_mutable_usericon();
}
inline const std::string& GiftInfo::_internal_usericon() const {
  return usericon_.GetNoArena();
}
inline void GiftInfo::_internal_set_usericon(const std::string& value) {
  
  usericon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GiftInfo::set_usericon(std::string&& value) {
  
  usericon_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.GiftInfo.userIcon)
}
inline void GiftInfo::set_usericon(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  usericon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.GiftInfo.userIcon)
}
inline void GiftInfo::set_usericon(const char* value, size_t size) {
  
  usericon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.GiftInfo.userIcon)
}
inline std::string* GiftInfo::_internal_mutable_usericon() {
  
  return usericon_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GiftInfo::release_usericon() {
  // @@protoc_insertion_point(field_release:pb.GiftInfo.userIcon)
  
  return usericon_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GiftInfo::set_allocated_usericon(std::string* usericon) {
  if (usericon != nullptr) {
    
  } else {
    
  }
  usericon_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), usericon);
  // @@protoc_insertion_point(field_set_allocated:pb.GiftInfo.userIcon)
}

// string giftName = 4;
inline void GiftInfo::clear_giftname() {
  giftname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GiftInfo::giftname() const {
  // @@protoc_insertion_point(field_get:pb.GiftInfo.giftName)
  return _internal_giftname();
}
inline void GiftInfo::set_giftname(const std::string& value) {
  _internal_set_giftname(value);
  // @@protoc_insertion_point(field_set:pb.GiftInfo.giftName)
}
inline std::string* GiftInfo::mutable_giftname() {
  // @@protoc_insertion_point(field_mutable:pb.GiftInfo.giftName)
  return _internal_mutable_giftname();
}
inline const std::string& GiftInfo::_internal_giftname() const {
  return giftname_.GetNoArena();
}
inline void GiftInfo::_internal_set_giftname(const std::string& value) {
  
  giftname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GiftInfo::set_giftname(std::string&& value) {
  
  giftname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.GiftInfo.giftName)
}
inline void GiftInfo::set_giftname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  giftname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.GiftInfo.giftName)
}
inline void GiftInfo::set_giftname(const char* value, size_t size) {
  
  giftname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.GiftInfo.giftName)
}
inline std::string* GiftInfo::_internal_mutable_giftname() {
  
  return giftname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GiftInfo::release_giftname() {
  // @@protoc_insertion_point(field_release:pb.GiftInfo.giftName)
  
  return giftname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GiftInfo::set_allocated_giftname(std::string* giftname) {
  if (giftname != nullptr) {
    
  } else {
    
  }
  giftname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), giftname);
  // @@protoc_insertion_point(field_set_allocated:pb.GiftInfo.giftName)
}

// string cover = 5;
inline void GiftInfo::clear_cover() {
  cover_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GiftInfo::cover() const {
  // @@protoc_insertion_point(field_get:pb.GiftInfo.cover)
  return _internal_cover();
}
inline void GiftInfo::set_cover(const std::string& value) {
  _internal_set_cover(value);
  // @@protoc_insertion_point(field_set:pb.GiftInfo.cover)
}
inline std::string* GiftInfo::mutable_cover() {
  // @@protoc_insertion_point(field_mutable:pb.GiftInfo.cover)
  return _internal_mutable_cover();
}
inline const std::string& GiftInfo::_internal_cover() const {
  return cover_.GetNoArena();
}
inline void GiftInfo::_internal_set_cover(const std::string& value) {
  
  cover_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GiftInfo::set_cover(std::string&& value) {
  
  cover_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.GiftInfo.cover)
}
inline void GiftInfo::set_cover(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cover_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.GiftInfo.cover)
}
inline void GiftInfo::set_cover(const char* value, size_t size) {
  
  cover_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.GiftInfo.cover)
}
inline std::string* GiftInfo::_internal_mutable_cover() {
  
  return cover_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GiftInfo::release_cover() {
  // @@protoc_insertion_point(field_release:pb.GiftInfo.cover)
  
  return cover_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GiftInfo::set_allocated_cover(std::string* cover) {
  if (cover != nullptr) {
    
  } else {
    
  }
  cover_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cover);
  // @@protoc_insertion_point(field_set_allocated:pb.GiftInfo.cover)
}

// string ConsumeTime = 6;
inline void GiftInfo::clear_consumetime() {
  consumetime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GiftInfo::consumetime() const {
  // @@protoc_insertion_point(field_get:pb.GiftInfo.ConsumeTime)
  return _internal_consumetime();
}
inline void GiftInfo::set_consumetime(const std::string& value) {
  _internal_set_consumetime(value);
  // @@protoc_insertion_point(field_set:pb.GiftInfo.ConsumeTime)
}
inline std::string* GiftInfo::mutable_consumetime() {
  // @@protoc_insertion_point(field_mutable:pb.GiftInfo.ConsumeTime)
  return _internal_mutable_consumetime();
}
inline const std::string& GiftInfo::_internal_consumetime() const {
  return consumetime_.GetNoArena();
}
inline void GiftInfo::_internal_set_consumetime(const std::string& value) {
  
  consumetime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GiftInfo::set_consumetime(std::string&& value) {
  
  consumetime_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.GiftInfo.ConsumeTime)
}
inline void GiftInfo::set_consumetime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  consumetime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.GiftInfo.ConsumeTime)
}
inline void GiftInfo::set_consumetime(const char* value, size_t size) {
  
  consumetime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.GiftInfo.ConsumeTime)
}
inline std::string* GiftInfo::_internal_mutable_consumetime() {
  
  return consumetime_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GiftInfo::release_consumetime() {
  // @@protoc_insertion_point(field_release:pb.GiftInfo.ConsumeTime)
  
  return consumetime_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GiftInfo::set_allocated_consumetime(std::string* consumetime) {
  if (consumetime != nullptr) {
    
  } else {
    
  }
  consumetime_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), consumetime);
  // @@protoc_insertion_point(field_set_allocated:pb.GiftInfo.ConsumeTime)
}

// -------------------------------------------------------------------

// CUserObtainGiftList

// int32 curPage = 1;
inline void CUserObtainGiftList::clear_curpage() {
  curpage_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CUserObtainGiftList::_internal_curpage() const {
  return curpage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CUserObtainGiftList::curpage() const {
  // @@protoc_insertion_point(field_get:pb.CUserObtainGiftList.curPage)
  return _internal_curpage();
}
inline void CUserObtainGiftList::_internal_set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  curpage_ = value;
}
inline void CUserObtainGiftList::set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_curpage(value);
  // @@protoc_insertion_point(field_set:pb.CUserObtainGiftList.curPage)
}

// int32 pageLimit = 2;
inline void CUserObtainGiftList::clear_pagelimit() {
  pagelimit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CUserObtainGiftList::_internal_pagelimit() const {
  return pagelimit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CUserObtainGiftList::pagelimit() const {
  // @@protoc_insertion_point(field_get:pb.CUserObtainGiftList.pageLimit)
  return _internal_pagelimit();
}
inline void CUserObtainGiftList::_internal_set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pagelimit_ = value;
}
inline void CUserObtainGiftList::set_pagelimit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pagelimit(value);
  // @@protoc_insertion_point(field_set:pb.CUserObtainGiftList.pageLimit)
}

// -------------------------------------------------------------------

// SUserObtainGiftList

// repeated .pb.GiftInfo list = 1;
inline int SUserObtainGiftList::_internal_list_size() const {
  return list_.size();
}
inline int SUserObtainGiftList::list_size() const {
  return _internal_list_size();
}
inline void SUserObtainGiftList::clear_list() {
  list_.Clear();
}
inline ::pb::GiftInfo* SUserObtainGiftList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:pb.SUserObtainGiftList.list)
  return list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::GiftInfo >*
SUserObtainGiftList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:pb.SUserObtainGiftList.list)
  return &list_;
}
inline const ::pb::GiftInfo& SUserObtainGiftList::_internal_list(int index) const {
  return list_.Get(index);
}
inline const ::pb::GiftInfo& SUserObtainGiftList::list(int index) const {
  // @@protoc_insertion_point(field_get:pb.SUserObtainGiftList.list)
  return _internal_list(index);
}
inline ::pb::GiftInfo* SUserObtainGiftList::_internal_add_list() {
  return list_.Add();
}
inline ::pb::GiftInfo* SUserObtainGiftList::add_list() {
  // @@protoc_insertion_point(field_add:pb.SUserObtainGiftList.list)
  return _internal_add_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::GiftInfo >&
SUserObtainGiftList::list() const {
  // @@protoc_insertion_point(field_list:pb.SUserObtainGiftList.list)
  return list_;
}

// int32 curPage = 2;
inline void SUserObtainGiftList::clear_curpage() {
  curpage_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SUserObtainGiftList::_internal_curpage() const {
  return curpage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SUserObtainGiftList::curpage() const {
  // @@protoc_insertion_point(field_get:pb.SUserObtainGiftList.curPage)
  return _internal_curpage();
}
inline void SUserObtainGiftList::_internal_set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  curpage_ = value;
}
inline void SUserObtainGiftList::set_curpage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_curpage(value);
  // @@protoc_insertion_point(field_set:pb.SUserObtainGiftList.curPage)
}

// int32 total = 3;
inline void SUserObtainGiftList::clear_total() {
  total_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SUserObtainGiftList::_internal_total() const {
  return total_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SUserObtainGiftList::total() const {
  // @@protoc_insertion_point(field_get:pb.SUserObtainGiftList.total)
  return _internal_total();
}
inline void SUserObtainGiftList::_internal_set_total(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  total_ = value;
}
inline void SUserObtainGiftList::set_total(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_total(value);
  // @@protoc_insertion_point(field_set:pb.SUserObtainGiftList.total)
}

// string msg = 4;
inline void SUserObtainGiftList::clear_msg() {
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SUserObtainGiftList::msg() const {
  // @@protoc_insertion_point(field_get:pb.SUserObtainGiftList.msg)
  return _internal_msg();
}
inline void SUserObtainGiftList::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:pb.SUserObtainGiftList.msg)
}
inline std::string* SUserObtainGiftList::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:pb.SUserObtainGiftList.msg)
  return _internal_mutable_msg();
}
inline const std::string& SUserObtainGiftList::_internal_msg() const {
  return msg_.GetNoArena();
}
inline void SUserObtainGiftList::_internal_set_msg(const std::string& value) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SUserObtainGiftList::set_msg(std::string&& value) {
  
  msg_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.SUserObtainGiftList.msg)
}
inline void SUserObtainGiftList::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.SUserObtainGiftList.msg)
}
inline void SUserObtainGiftList::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.SUserObtainGiftList.msg)
}
inline std::string* SUserObtainGiftList::_internal_mutable_msg() {
  
  return msg_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SUserObtainGiftList::release_msg() {
  // @@protoc_insertion_point(field_release:pb.SUserObtainGiftList.msg)
  
  return msg_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SUserObtainGiftList::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:pb.SUserObtainGiftList.msg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_shoppingGiftConsume_2eproto
