// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buyGoods.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_buyGoods_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_buyGoods_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_buyGoods_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_buyGoods_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_buyGoods_2eproto;
namespace pb {
class CBuyGoods;
class CBuyGoodsDefaultTypeInternal;
extern CBuyGoodsDefaultTypeInternal _CBuyGoods_default_instance_;
class SBuyGoods;
class SBuyGoodsDefaultTypeInternal;
extern SBuyGoodsDefaultTypeInternal _SBuyGoods_default_instance_;
class thinBackInfo;
class thinBackInfoDefaultTypeInternal;
extern thinBackInfoDefaultTypeInternal _thinBackInfo_default_instance_;
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::CBuyGoods* Arena::CreateMaybeMessage<::pb::CBuyGoods>(Arena*);
template<> ::pb::SBuyGoods* Arena::CreateMaybeMessage<::pb::SBuyGoods>(Arena*);
template<> ::pb::thinBackInfo* Arena::CreateMaybeMessage<::pb::thinBackInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {

// ===================================================================

class thinBackInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.thinBackInfo) */ {
 public:
  thinBackInfo();
  virtual ~thinBackInfo();

  thinBackInfo(const thinBackInfo& from);
  thinBackInfo(thinBackInfo&& from) noexcept
    : thinBackInfo() {
    *this = ::std::move(from);
  }

  inline thinBackInfo& operator=(const thinBackInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline thinBackInfo& operator=(thinBackInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const thinBackInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const thinBackInfo* internal_default_instance() {
    return reinterpret_cast<const thinBackInfo*>(
               &_thinBackInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(thinBackInfo& a, thinBackInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(thinBackInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline thinBackInfo* New() const final {
    return CreateMaybeMessage<thinBackInfo>(nullptr);
  }

  thinBackInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<thinBackInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const thinBackInfo& from);
  void MergeFrom(const thinBackInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(thinBackInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.thinBackInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_buyGoods_2eproto);
    return ::descriptor_table_buyGoods_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShopGoodsIdFieldNumber = 1,
    kThinkBackIdFieldNumber = 2,
    kScenesBackIdFieldNumber = 3,
  };
  // int32 shopGoodsId = 1;
  void clear_shopgoodsid();
  ::PROTOBUF_NAMESPACE_ID::int32 shopgoodsid() const;
  void set_shopgoodsid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_shopgoodsid() const;
  void _internal_set_shopgoodsid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 thinkBackId = 2;
  void clear_thinkbackid();
  ::PROTOBUF_NAMESPACE_ID::int32 thinkbackid() const;
  void set_thinkbackid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_thinkbackid() const;
  void _internal_set_thinkbackid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 scenesBackId = 3;
  void clear_scenesbackid();
  ::PROTOBUF_NAMESPACE_ID::int32 scenesbackid() const;
  void set_scenesbackid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_scenesbackid() const;
  void _internal_set_scenesbackid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.thinBackInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 shopgoodsid_;
  ::PROTOBUF_NAMESPACE_ID::int32 thinkbackid_;
  ::PROTOBUF_NAMESPACE_ID::int32 scenesbackid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_buyGoods_2eproto;
};
// -------------------------------------------------------------------

class CBuyGoods :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.CBuyGoods) */ {
 public:
  CBuyGoods();
  virtual ~CBuyGoods();

  CBuyGoods(const CBuyGoods& from);
  CBuyGoods(CBuyGoods&& from) noexcept
    : CBuyGoods() {
    *this = ::std::move(from);
  }

  inline CBuyGoods& operator=(const CBuyGoods& from) {
    CopyFrom(from);
    return *this;
  }
  inline CBuyGoods& operator=(CBuyGoods&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CBuyGoods& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CBuyGoods* internal_default_instance() {
    return reinterpret_cast<const CBuyGoods*>(
               &_CBuyGoods_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CBuyGoods& a, CBuyGoods& b) {
    a.Swap(&b);
  }
  inline void Swap(CBuyGoods* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CBuyGoods* New() const final {
    return CreateMaybeMessage<CBuyGoods>(nullptr);
  }

  CBuyGoods* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CBuyGoods>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CBuyGoods& from);
  void MergeFrom(const CBuyGoods& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CBuyGoods* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.CBuyGoods";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_buyGoods_2eproto);
    return ::descriptor_table_buyGoods_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGoodsListFieldNumber = 1,
  };
  // repeated int32 goodsList = 1;
  int goodslist_size() const;
  private:
  int _internal_goodslist_size() const;
  public:
  void clear_goodslist();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_goodslist(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_goodslist() const;
  void _internal_add_goodslist(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_goodslist();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 goodslist(int index) const;
  void set_goodslist(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_goodslist(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      goodslist() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_goodslist();

  // @@protoc_insertion_point(class_scope:pb.CBuyGoods)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > goodslist_;
  mutable std::atomic<int> _goodslist_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_buyGoods_2eproto;
};
// -------------------------------------------------------------------

class SBuyGoods :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SBuyGoods) */ {
 public:
  SBuyGoods();
  virtual ~SBuyGoods();

  SBuyGoods(const SBuyGoods& from);
  SBuyGoods(SBuyGoods&& from) noexcept
    : SBuyGoods() {
    *this = ::std::move(from);
  }

  inline SBuyGoods& operator=(const SBuyGoods& from) {
    CopyFrom(from);
    return *this;
  }
  inline SBuyGoods& operator=(SBuyGoods&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SBuyGoods& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SBuyGoods* internal_default_instance() {
    return reinterpret_cast<const SBuyGoods*>(
               &_SBuyGoods_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SBuyGoods& a, SBuyGoods& b) {
    a.Swap(&b);
  }
  inline void Swap(SBuyGoods* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SBuyGoods* New() const final {
    return CreateMaybeMessage<SBuyGoods>(nullptr);
  }

  SBuyGoods* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SBuyGoods>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SBuyGoods& from);
  void MergeFrom(const SBuyGoods& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SBuyGoods* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SBuyGoods";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_buyGoods_2eproto);
    return ::descriptor_table_buyGoods_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 3,
    kMsgFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // repeated .pb.thinBackInfo info = 3;
  int info_size() const;
  private:
  int _internal_info_size() const;
  public:
  void clear_info();
  ::pb::thinBackInfo* mutable_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::thinBackInfo >*
      mutable_info();
  private:
  const ::pb::thinBackInfo& _internal_info(int index) const;
  ::pb::thinBackInfo* _internal_add_info();
  public:
  const ::pb::thinBackInfo& info(int index) const;
  ::pb::thinBackInfo* add_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::thinBackInfo >&
      info() const;

  // string msg = 1;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // bool result = 2;
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SBuyGoods)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::thinBackInfo > info_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  bool result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_buyGoods_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// thinBackInfo

// int32 shopGoodsId = 1;
inline void thinBackInfo::clear_shopgoodsid() {
  shopgoodsid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 thinBackInfo::_internal_shopgoodsid() const {
  return shopgoodsid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 thinBackInfo::shopgoodsid() const {
  // @@protoc_insertion_point(field_get:pb.thinBackInfo.shopGoodsId)
  return _internal_shopgoodsid();
}
inline void thinBackInfo::_internal_set_shopgoodsid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  shopgoodsid_ = value;
}
inline void thinBackInfo::set_shopgoodsid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_shopgoodsid(value);
  // @@protoc_insertion_point(field_set:pb.thinBackInfo.shopGoodsId)
}

// int32 thinkBackId = 2;
inline void thinBackInfo::clear_thinkbackid() {
  thinkbackid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 thinBackInfo::_internal_thinkbackid() const {
  return thinkbackid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 thinBackInfo::thinkbackid() const {
  // @@protoc_insertion_point(field_get:pb.thinBackInfo.thinkBackId)
  return _internal_thinkbackid();
}
inline void thinBackInfo::_internal_set_thinkbackid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  thinkbackid_ = value;
}
inline void thinBackInfo::set_thinkbackid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_thinkbackid(value);
  // @@protoc_insertion_point(field_set:pb.thinBackInfo.thinkBackId)
}

// int32 scenesBackId = 3;
inline void thinBackInfo::clear_scenesbackid() {
  scenesbackid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 thinBackInfo::_internal_scenesbackid() const {
  return scenesbackid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 thinBackInfo::scenesbackid() const {
  // @@protoc_insertion_point(field_get:pb.thinBackInfo.scenesBackId)
  return _internal_scenesbackid();
}
inline void thinBackInfo::_internal_set_scenesbackid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  scenesbackid_ = value;
}
inline void thinBackInfo::set_scenesbackid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_scenesbackid(value);
  // @@protoc_insertion_point(field_set:pb.thinBackInfo.scenesBackId)
}

// -------------------------------------------------------------------

// CBuyGoods

// repeated int32 goodsList = 1;
inline int CBuyGoods::_internal_goodslist_size() const {
  return goodslist_.size();
}
inline int CBuyGoods::goodslist_size() const {
  return _internal_goodslist_size();
}
inline void CBuyGoods::clear_goodslist() {
  goodslist_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CBuyGoods::_internal_goodslist(int index) const {
  return goodslist_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CBuyGoods::goodslist(int index) const {
  // @@protoc_insertion_point(field_get:pb.CBuyGoods.goodsList)
  return _internal_goodslist(index);
}
inline void CBuyGoods::set_goodslist(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  goodslist_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.CBuyGoods.goodsList)
}
inline void CBuyGoods::_internal_add_goodslist(::PROTOBUF_NAMESPACE_ID::int32 value) {
  goodslist_.Add(value);
}
inline void CBuyGoods::add_goodslist(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_goodslist(value);
  // @@protoc_insertion_point(field_add:pb.CBuyGoods.goodsList)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CBuyGoods::_internal_goodslist() const {
  return goodslist_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CBuyGoods::goodslist() const {
  // @@protoc_insertion_point(field_list:pb.CBuyGoods.goodsList)
  return _internal_goodslist();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CBuyGoods::_internal_mutable_goodslist() {
  return &goodslist_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CBuyGoods::mutable_goodslist() {
  // @@protoc_insertion_point(field_mutable_list:pb.CBuyGoods.goodsList)
  return _internal_mutable_goodslist();
}

// -------------------------------------------------------------------

// SBuyGoods

// string msg = 1;
inline void SBuyGoods::clear_msg() {
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SBuyGoods::msg() const {
  // @@protoc_insertion_point(field_get:pb.SBuyGoods.msg)
  return _internal_msg();
}
inline void SBuyGoods::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:pb.SBuyGoods.msg)
}
inline std::string* SBuyGoods::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:pb.SBuyGoods.msg)
  return _internal_mutable_msg();
}
inline const std::string& SBuyGoods::_internal_msg() const {
  return msg_.GetNoArena();
}
inline void SBuyGoods::_internal_set_msg(const std::string& value) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SBuyGoods::set_msg(std::string&& value) {
  
  msg_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.SBuyGoods.msg)
}
inline void SBuyGoods::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.SBuyGoods.msg)
}
inline void SBuyGoods::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.SBuyGoods.msg)
}
inline std::string* SBuyGoods::_internal_mutable_msg() {
  
  return msg_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SBuyGoods::release_msg() {
  // @@protoc_insertion_point(field_release:pb.SBuyGoods.msg)
  
  return msg_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SBuyGoods::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:pb.SBuyGoods.msg)
}

// bool result = 2;
inline void SBuyGoods::clear_result() {
  result_ = false;
}
inline bool SBuyGoods::_internal_result() const {
  return result_;
}
inline bool SBuyGoods::result() const {
  // @@protoc_insertion_point(field_get:pb.SBuyGoods.result)
  return _internal_result();
}
inline void SBuyGoods::_internal_set_result(bool value) {
  
  result_ = value;
}
inline void SBuyGoods::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:pb.SBuyGoods.result)
}

// repeated .pb.thinBackInfo info = 3;
inline int SBuyGoods::_internal_info_size() const {
  return info_.size();
}
inline int SBuyGoods::info_size() const {
  return _internal_info_size();
}
inline void SBuyGoods::clear_info() {
  info_.Clear();
}
inline ::pb::thinBackInfo* SBuyGoods::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:pb.SBuyGoods.info)
  return info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::thinBackInfo >*
SBuyGoods::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:pb.SBuyGoods.info)
  return &info_;
}
inline const ::pb::thinBackInfo& SBuyGoods::_internal_info(int index) const {
  return info_.Get(index);
}
inline const ::pb::thinBackInfo& SBuyGoods::info(int index) const {
  // @@protoc_insertion_point(field_get:pb.SBuyGoods.info)
  return _internal_info(index);
}
inline ::pb::thinBackInfo* SBuyGoods::_internal_add_info() {
  return info_.Add();
}
inline ::pb::thinBackInfo* SBuyGoods::add_info() {
  // @@protoc_insertion_point(field_add:pb.SBuyGoods.info)
  return _internal_add_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::thinBackInfo >&
SBuyGoods::info() const {
  // @@protoc_insertion_point(field_list:pb.SBuyGoods.info)
  return info_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_buyGoods_2eproto
