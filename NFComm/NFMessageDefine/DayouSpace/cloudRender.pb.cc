// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloudRender.proto

#include "cloudRender.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_syncAllObj_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ActionEvent_syncAllObj_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_userInfo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SUserInfo_userInfo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_userPosition_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UPosition_userPosition_2eproto;
namespace cloudRender {
class CVerifyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CVerify> _instance;
} _CVerify_default_instance_;
class SVerifyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SVerify> _instance;
} _SVerify_default_instance_;
class CRenderScaleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CRenderScale> _instance;
} _CRenderScale_default_instance_;
class SRenderScaleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SRenderScale> _instance;
} _SRenderScale_default_instance_;
class SRenderSwitchRoomDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SRenderSwitchRoom> _instance;
} _SRenderSwitchRoom_default_instance_;
class SRenderExitRoomDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SRenderExitRoom> _instance;
} _SRenderExitRoom_default_instance_;
class SRenderFrameDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SRenderFrame> _instance;
} _SRenderFrame_default_instance_;
class PingACKDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PingACK> _instance;
} _PingACK_default_instance_;
}  // namespace cloudRender
static void InitDefaultsscc_info_CRenderScale_cloudRender_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cloudRender::_CRenderScale_default_instance_;
    new (ptr) ::cloudRender::CRenderScale();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cloudRender::CRenderScale::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CRenderScale_cloudRender_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CRenderScale_cloudRender_2eproto}, {}};

static void InitDefaultsscc_info_CVerify_cloudRender_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cloudRender::_CVerify_default_instance_;
    new (ptr) ::cloudRender::CVerify();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cloudRender::CVerify::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CVerify_cloudRender_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CVerify_cloudRender_2eproto}, {}};

static void InitDefaultsscc_info_PingACK_cloudRender_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cloudRender::_PingACK_default_instance_;
    new (ptr) ::cloudRender::PingACK();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cloudRender::PingACK::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PingACK_cloudRender_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PingACK_cloudRender_2eproto}, {}};

static void InitDefaultsscc_info_SRenderExitRoom_cloudRender_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cloudRender::_SRenderExitRoom_default_instance_;
    new (ptr) ::cloudRender::SRenderExitRoom();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cloudRender::SRenderExitRoom::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SRenderExitRoom_cloudRender_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SRenderExitRoom_cloudRender_2eproto}, {}};

static void InitDefaultsscc_info_SRenderFrame_cloudRender_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cloudRender::_SRenderFrame_default_instance_;
    new (ptr) ::cloudRender::SRenderFrame();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cloudRender::SRenderFrame::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SRenderFrame_cloudRender_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SRenderFrame_cloudRender_2eproto}, {
      &scc_info_UPosition_userPosition_2eproto.base,
      &scc_info_ActionEvent_syncAllObj_2eproto.base,}};

static void InitDefaultsscc_info_SRenderScale_cloudRender_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cloudRender::_SRenderScale_default_instance_;
    new (ptr) ::cloudRender::SRenderScale();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cloudRender::SRenderScale::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SRenderScale_cloudRender_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SRenderScale_cloudRender_2eproto}, {}};

static void InitDefaultsscc_info_SRenderSwitchRoom_cloudRender_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cloudRender::_SRenderSwitchRoom_default_instance_;
    new (ptr) ::cloudRender::SRenderSwitchRoom();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cloudRender::SRenderSwitchRoom::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SRenderSwitchRoom_cloudRender_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SRenderSwitchRoom_cloudRender_2eproto}, {}};

static void InitDefaultsscc_info_SVerify_cloudRender_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cloudRender::_SVerify_default_instance_;
    new (ptr) ::cloudRender::SVerify();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cloudRender::SVerify::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SVerify_cloudRender_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SVerify_cloudRender_2eproto}, {
      &scc_info_SUserInfo_userInfo_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_cloudRender_2eproto[8];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_cloudRender_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_cloudRender_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_cloudRender_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cloudRender::CVerify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::cloudRender::CVerify, uid_),
  PROTOBUF_FIELD_OFFSET(::cloudRender::CVerify, houseindex_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cloudRender::SVerify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::cloudRender::SVerify, result_),
  PROTOBUF_FIELD_OFFSET(::cloudRender::SVerify, userlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cloudRender::CRenderScale, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::cloudRender::CRenderScale, uid_),
  PROTOBUF_FIELD_OFFSET(::cloudRender::CRenderScale, num_),
  PROTOBUF_FIELD_OFFSET(::cloudRender::CRenderScale, opt_),
  PROTOBUF_FIELD_OFFSET(::cloudRender::CRenderScale, isgeneral_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cloudRender::SRenderScale, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::cloudRender::SRenderScale, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cloudRender::SRenderSwitchRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::cloudRender::SRenderSwitchRoom, uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cloudRender::SRenderExitRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::cloudRender::SRenderExitRoom, uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cloudRender::SRenderFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::cloudRender::SRenderFrame, positionlist_),
  PROTOBUF_FIELD_OFFSET(::cloudRender::SRenderFrame, eventlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cloudRender::PingACK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::cloudRender::CVerify)},
  { 7, -1, sizeof(::cloudRender::SVerify)},
  { 14, -1, sizeof(::cloudRender::CRenderScale)},
  { 23, -1, sizeof(::cloudRender::SRenderScale)},
  { 29, -1, sizeof(::cloudRender::SRenderSwitchRoom)},
  { 35, -1, sizeof(::cloudRender::SRenderExitRoom)},
  { 41, -1, sizeof(::cloudRender::SRenderFrame)},
  { 48, -1, sizeof(::cloudRender::PingACK)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cloudRender::_CVerify_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cloudRender::_SVerify_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cloudRender::_CRenderScale_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cloudRender::_SRenderScale_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cloudRender::_SRenderSwitchRoom_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cloudRender::_SRenderExitRoom_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cloudRender::_SRenderFrame_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cloudRender::_PingACK_default_instance_),
};

const char descriptor_table_protodef_cloudRender_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021cloudRender.proto\022\013cloudRender\032\016userIn"
  "fo.proto\032\022userPosition.proto\032\020syncAllObj"
  ".proto\"*\n\007CVerify\022\013\n\003Uid\030\001 \001(\005\022\022\n\nHouseI"
  "ndex\030\002 \001(\005\"Y\n\007SVerify\022\'\n\006Result\030\001 \001(\0162\027."
  "cloudRender.ResultCode\022%\n\010UserList\030\002 \003(\013"
  "2\023.userInfo.SUserInfo\"H\n\014CRenderScale\022\013\n"
  "\003Uid\030\001 \001(\005\022\013\n\003Num\030\002 \001(\005\022\013\n\003Opt\030\003 \001(\005\022\021\n\t"
  "IsGeneral\030\004 \001(\010\"7\n\014SRenderScale\022\'\n\006Resul"
  "t\030\001 \001(\0162\027.cloudRender.ResultCode\" \n\021SRen"
  "derSwitchRoom\022\013\n\003Uid\030\001 \001(\005\"\036\n\017SRenderExi"
  "tRoom\022\013\n\003Uid\030\001 \001(\005\"i\n\014SRenderFrame\022-\n\014Po"
  "sitionList\030\001 \003(\0132\027.userPosition.UPositio"
  "n\022*\n\tEventList\030\002 \003(\0132\027.syncAllObj.Action"
  "Event\"\t\n\007PingACK*U\n\nResultCode\022\013\n\007NoErro"
  "r\020\000\022\021\n\rAgentNotFound\020e\022\025\n\021AgentAddressEr"
  "ror\020f\022\020\n\014GameNotFound\020gB0\n\030com.dayou.spa"
  "ce.protobufB\013CloudRenderZ\007./pb;pbb\006proto"
  "3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_cloudRender_2eproto_deps[3] = {
  &::descriptor_table_syncAllObj_2eproto,
  &::descriptor_table_userInfo_2eproto,
  &::descriptor_table_userPosition_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_cloudRender_2eproto_sccs[8] = {
  &scc_info_CRenderScale_cloudRender_2eproto.base,
  &scc_info_CVerify_cloudRender_2eproto.base,
  &scc_info_PingACK_cloudRender_2eproto.base,
  &scc_info_SRenderExitRoom_cloudRender_2eproto.base,
  &scc_info_SRenderFrame_cloudRender_2eproto.base,
  &scc_info_SRenderScale_cloudRender_2eproto.base,
  &scc_info_SRenderSwitchRoom_cloudRender_2eproto.base,
  &scc_info_SVerify_cloudRender_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_cloudRender_2eproto_once;
static bool descriptor_table_cloudRender_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cloudRender_2eproto = {
  &descriptor_table_cloudRender_2eproto_initialized, descriptor_table_protodef_cloudRender_2eproto, "cloudRender.proto", 681,
  &descriptor_table_cloudRender_2eproto_once, descriptor_table_cloudRender_2eproto_sccs, descriptor_table_cloudRender_2eproto_deps, 8, 3,
  schemas, file_default_instances, TableStruct_cloudRender_2eproto::offsets,
  file_level_metadata_cloudRender_2eproto, 8, file_level_enum_descriptors_cloudRender_2eproto, file_level_service_descriptors_cloudRender_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_cloudRender_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_cloudRender_2eproto), true);
namespace cloudRender {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ResultCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cloudRender_2eproto);
  return file_level_enum_descriptors_cloudRender_2eproto[0];
}
bool ResultCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 101:
    case 102:
    case 103:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CVerify::InitAsDefaultInstance() {
}
class CVerify::_Internal {
 public:
};

CVerify::CVerify()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cloudRender.CVerify)
}
CVerify::CVerify(const CVerify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&houseindex_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(houseindex_));
  // @@protoc_insertion_point(copy_constructor:cloudRender.CVerify)
}

void CVerify::SharedCtor() {
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&houseindex_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(houseindex_));
}

CVerify::~CVerify() {
  // @@protoc_insertion_point(destructor:cloudRender.CVerify)
  SharedDtor();
}

void CVerify::SharedDtor() {
}

void CVerify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CVerify& CVerify::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CVerify_cloudRender_2eproto.base);
  return *internal_default_instance();
}


void CVerify::Clear() {
// @@protoc_insertion_point(message_clear_start:cloudRender.CVerify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&houseindex_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(houseindex_));
  _internal_metadata_.Clear();
}

const char* CVerify::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 HouseIndex = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          houseindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CVerify::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cloudRender.CVerify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Uid = 1;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_uid(), target);
  }

  // int32 HouseIndex = 2;
  if (this->houseindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_houseindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cloudRender.CVerify)
  return target;
}

size_t CVerify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cloudRender.CVerify)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  // int32 HouseIndex = 2;
  if (this->houseindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_houseindex());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CVerify::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cloudRender.CVerify)
  GOOGLE_DCHECK_NE(&from, this);
  const CVerify* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CVerify>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cloudRender.CVerify)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cloudRender.CVerify)
    MergeFrom(*source);
  }
}

void CVerify::MergeFrom(const CVerify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cloudRender.CVerify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  if (from.houseindex() != 0) {
    _internal_set_houseindex(from._internal_houseindex());
  }
}

void CVerify::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cloudRender.CVerify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CVerify::CopyFrom(const CVerify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cloudRender.CVerify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CVerify::IsInitialized() const {
  return true;
}

void CVerify::InternalSwap(CVerify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(uid_, other->uid_);
  swap(houseindex_, other->houseindex_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CVerify::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SVerify::InitAsDefaultInstance() {
}
class SVerify::_Internal {
 public:
};

void SVerify::clear_userlist() {
  userlist_.Clear();
}
SVerify::SVerify()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cloudRender.SVerify)
}
SVerify::SVerify(const SVerify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      userlist_(from.userlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:cloudRender.SVerify)
}

void SVerify::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SVerify_cloudRender_2eproto.base);
  result_ = 0;
}

SVerify::~SVerify() {
  // @@protoc_insertion_point(destructor:cloudRender.SVerify)
  SharedDtor();
}

void SVerify::SharedDtor() {
}

void SVerify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SVerify& SVerify::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SVerify_cloudRender_2eproto.base);
  return *internal_default_instance();
}


void SVerify::Clear() {
// @@protoc_insertion_point(message_clear_start:cloudRender.SVerify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userlist_.Clear();
  result_ = 0;
  _internal_metadata_.Clear();
}

const char* SVerify::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .cloudRender.ResultCode Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::cloudRender::ResultCode>(val));
        } else goto handle_unusual;
        continue;
      // repeated .userInfo.SUserInfo UserList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_userlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SVerify::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cloudRender.SVerify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .cloudRender.ResultCode Result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // repeated .userInfo.SUserInfo UserList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_userlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_userlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cloudRender.SVerify)
  return target;
}

size_t SVerify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cloudRender.SVerify)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .userInfo.SUserInfo UserList = 2;
  total_size += 1UL * this->_internal_userlist_size();
  for (const auto& msg : this->userlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cloudRender.ResultCode Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SVerify::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cloudRender.SVerify)
  GOOGLE_DCHECK_NE(&from, this);
  const SVerify* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SVerify>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cloudRender.SVerify)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cloudRender.SVerify)
    MergeFrom(*source);
  }
}

void SVerify::MergeFrom(const SVerify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cloudRender.SVerify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  userlist_.MergeFrom(from.userlist_);
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SVerify::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cloudRender.SVerify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SVerify::CopyFrom(const SVerify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cloudRender.SVerify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SVerify::IsInitialized() const {
  return true;
}

void SVerify::InternalSwap(SVerify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  userlist_.InternalSwap(&other->userlist_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SVerify::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CRenderScale::InitAsDefaultInstance() {
}
class CRenderScale::_Internal {
 public:
};

CRenderScale::CRenderScale()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cloudRender.CRenderScale)
}
CRenderScale::CRenderScale(const CRenderScale& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&isgeneral_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(isgeneral_));
  // @@protoc_insertion_point(copy_constructor:cloudRender.CRenderScale)
}

void CRenderScale::SharedCtor() {
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isgeneral_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(isgeneral_));
}

CRenderScale::~CRenderScale() {
  // @@protoc_insertion_point(destructor:cloudRender.CRenderScale)
  SharedDtor();
}

void CRenderScale::SharedDtor() {
}

void CRenderScale::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CRenderScale& CRenderScale::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CRenderScale_cloudRender_2eproto.base);
  return *internal_default_instance();
}


void CRenderScale::Clear() {
// @@protoc_insertion_point(message_clear_start:cloudRender.CRenderScale)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isgeneral_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(isgeneral_));
  _internal_metadata_.Clear();
}

const char* CRenderScale::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Opt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          opt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool IsGeneral = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          isgeneral_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CRenderScale::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cloudRender.CRenderScale)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Uid = 1;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_uid(), target);
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_num(), target);
  }

  // int32 Opt = 3;
  if (this->opt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_opt(), target);
  }

  // bool IsGeneral = 4;
  if (this->isgeneral() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_isgeneral(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cloudRender.CRenderScale)
  return target;
}

size_t CRenderScale::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cloudRender.CRenderScale)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num());
  }

  // int32 Opt = 3;
  if (this->opt() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_opt());
  }

  // bool IsGeneral = 4;
  if (this->isgeneral() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CRenderScale::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cloudRender.CRenderScale)
  GOOGLE_DCHECK_NE(&from, this);
  const CRenderScale* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CRenderScale>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cloudRender.CRenderScale)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cloudRender.CRenderScale)
    MergeFrom(*source);
  }
}

void CRenderScale::MergeFrom(const CRenderScale& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cloudRender.CRenderScale)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  if (from.num() != 0) {
    _internal_set_num(from._internal_num());
  }
  if (from.opt() != 0) {
    _internal_set_opt(from._internal_opt());
  }
  if (from.isgeneral() != 0) {
    _internal_set_isgeneral(from._internal_isgeneral());
  }
}

void CRenderScale::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cloudRender.CRenderScale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CRenderScale::CopyFrom(const CRenderScale& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cloudRender.CRenderScale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CRenderScale::IsInitialized() const {
  return true;
}

void CRenderScale::InternalSwap(CRenderScale* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(uid_, other->uid_);
  swap(num_, other->num_);
  swap(opt_, other->opt_);
  swap(isgeneral_, other->isgeneral_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CRenderScale::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SRenderScale::InitAsDefaultInstance() {
}
class SRenderScale::_Internal {
 public:
};

SRenderScale::SRenderScale()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cloudRender.SRenderScale)
}
SRenderScale::SRenderScale(const SRenderScale& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:cloudRender.SRenderScale)
}

void SRenderScale::SharedCtor() {
  result_ = 0;
}

SRenderScale::~SRenderScale() {
  // @@protoc_insertion_point(destructor:cloudRender.SRenderScale)
  SharedDtor();
}

void SRenderScale::SharedDtor() {
}

void SRenderScale::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SRenderScale& SRenderScale::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SRenderScale_cloudRender_2eproto.base);
  return *internal_default_instance();
}


void SRenderScale::Clear() {
// @@protoc_insertion_point(message_clear_start:cloudRender.SRenderScale)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

const char* SRenderScale::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .cloudRender.ResultCode Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::cloudRender::ResultCode>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SRenderScale::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cloudRender.SRenderScale)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .cloudRender.ResultCode Result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cloudRender.SRenderScale)
  return target;
}

size_t SRenderScale::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cloudRender.SRenderScale)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cloudRender.ResultCode Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SRenderScale::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cloudRender.SRenderScale)
  GOOGLE_DCHECK_NE(&from, this);
  const SRenderScale* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SRenderScale>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cloudRender.SRenderScale)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cloudRender.SRenderScale)
    MergeFrom(*source);
  }
}

void SRenderScale::MergeFrom(const SRenderScale& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cloudRender.SRenderScale)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SRenderScale::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cloudRender.SRenderScale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SRenderScale::CopyFrom(const SRenderScale& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cloudRender.SRenderScale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SRenderScale::IsInitialized() const {
  return true;
}

void SRenderScale::InternalSwap(SRenderScale* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SRenderScale::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SRenderSwitchRoom::InitAsDefaultInstance() {
}
class SRenderSwitchRoom::_Internal {
 public:
};

SRenderSwitchRoom::SRenderSwitchRoom()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cloudRender.SRenderSwitchRoom)
}
SRenderSwitchRoom::SRenderSwitchRoom(const SRenderSwitchRoom& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:cloudRender.SRenderSwitchRoom)
}

void SRenderSwitchRoom::SharedCtor() {
  uid_ = 0;
}

SRenderSwitchRoom::~SRenderSwitchRoom() {
  // @@protoc_insertion_point(destructor:cloudRender.SRenderSwitchRoom)
  SharedDtor();
}

void SRenderSwitchRoom::SharedDtor() {
}

void SRenderSwitchRoom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SRenderSwitchRoom& SRenderSwitchRoom::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SRenderSwitchRoom_cloudRender_2eproto.base);
  return *internal_default_instance();
}


void SRenderSwitchRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:cloudRender.SRenderSwitchRoom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = 0;
  _internal_metadata_.Clear();
}

const char* SRenderSwitchRoom::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SRenderSwitchRoom::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cloudRender.SRenderSwitchRoom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Uid = 1;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cloudRender.SRenderSwitchRoom)
  return target;
}

size_t SRenderSwitchRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cloudRender.SRenderSwitchRoom)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SRenderSwitchRoom::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cloudRender.SRenderSwitchRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const SRenderSwitchRoom* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SRenderSwitchRoom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cloudRender.SRenderSwitchRoom)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cloudRender.SRenderSwitchRoom)
    MergeFrom(*source);
  }
}

void SRenderSwitchRoom::MergeFrom(const SRenderSwitchRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cloudRender.SRenderSwitchRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
}

void SRenderSwitchRoom::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cloudRender.SRenderSwitchRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SRenderSwitchRoom::CopyFrom(const SRenderSwitchRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cloudRender.SRenderSwitchRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SRenderSwitchRoom::IsInitialized() const {
  return true;
}

void SRenderSwitchRoom::InternalSwap(SRenderSwitchRoom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(uid_, other->uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SRenderSwitchRoom::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SRenderExitRoom::InitAsDefaultInstance() {
}
class SRenderExitRoom::_Internal {
 public:
};

SRenderExitRoom::SRenderExitRoom()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cloudRender.SRenderExitRoom)
}
SRenderExitRoom::SRenderExitRoom(const SRenderExitRoom& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:cloudRender.SRenderExitRoom)
}

void SRenderExitRoom::SharedCtor() {
  uid_ = 0;
}

SRenderExitRoom::~SRenderExitRoom() {
  // @@protoc_insertion_point(destructor:cloudRender.SRenderExitRoom)
  SharedDtor();
}

void SRenderExitRoom::SharedDtor() {
}

void SRenderExitRoom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SRenderExitRoom& SRenderExitRoom::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SRenderExitRoom_cloudRender_2eproto.base);
  return *internal_default_instance();
}


void SRenderExitRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:cloudRender.SRenderExitRoom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = 0;
  _internal_metadata_.Clear();
}

const char* SRenderExitRoom::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SRenderExitRoom::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cloudRender.SRenderExitRoom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Uid = 1;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cloudRender.SRenderExitRoom)
  return target;
}

size_t SRenderExitRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cloudRender.SRenderExitRoom)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SRenderExitRoom::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cloudRender.SRenderExitRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const SRenderExitRoom* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SRenderExitRoom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cloudRender.SRenderExitRoom)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cloudRender.SRenderExitRoom)
    MergeFrom(*source);
  }
}

void SRenderExitRoom::MergeFrom(const SRenderExitRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cloudRender.SRenderExitRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
}

void SRenderExitRoom::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cloudRender.SRenderExitRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SRenderExitRoom::CopyFrom(const SRenderExitRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cloudRender.SRenderExitRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SRenderExitRoom::IsInitialized() const {
  return true;
}

void SRenderExitRoom::InternalSwap(SRenderExitRoom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(uid_, other->uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SRenderExitRoom::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SRenderFrame::InitAsDefaultInstance() {
}
class SRenderFrame::_Internal {
 public:
};

void SRenderFrame::clear_positionlist() {
  positionlist_.Clear();
}
void SRenderFrame::clear_eventlist() {
  eventlist_.Clear();
}
SRenderFrame::SRenderFrame()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cloudRender.SRenderFrame)
}
SRenderFrame::SRenderFrame(const SRenderFrame& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      positionlist_(from.positionlist_),
      eventlist_(from.eventlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cloudRender.SRenderFrame)
}

void SRenderFrame::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SRenderFrame_cloudRender_2eproto.base);
}

SRenderFrame::~SRenderFrame() {
  // @@protoc_insertion_point(destructor:cloudRender.SRenderFrame)
  SharedDtor();
}

void SRenderFrame::SharedDtor() {
}

void SRenderFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SRenderFrame& SRenderFrame::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SRenderFrame_cloudRender_2eproto.base);
  return *internal_default_instance();
}


void SRenderFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:cloudRender.SRenderFrame)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  positionlist_.Clear();
  eventlist_.Clear();
  _internal_metadata_.Clear();
}

const char* SRenderFrame::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .userPosition.UPosition PositionList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_positionlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .syncAllObj.ActionEvent EventList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_eventlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SRenderFrame::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cloudRender.SRenderFrame)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .userPosition.UPosition PositionList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_positionlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_positionlist(i), target, stream);
  }

  // repeated .syncAllObj.ActionEvent EventList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_eventlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_eventlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cloudRender.SRenderFrame)
  return target;
}

size_t SRenderFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cloudRender.SRenderFrame)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .userPosition.UPosition PositionList = 1;
  total_size += 1UL * this->_internal_positionlist_size();
  for (const auto& msg : this->positionlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .syncAllObj.ActionEvent EventList = 2;
  total_size += 1UL * this->_internal_eventlist_size();
  for (const auto& msg : this->eventlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SRenderFrame::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cloudRender.SRenderFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const SRenderFrame* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SRenderFrame>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cloudRender.SRenderFrame)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cloudRender.SRenderFrame)
    MergeFrom(*source);
  }
}

void SRenderFrame::MergeFrom(const SRenderFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cloudRender.SRenderFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  positionlist_.MergeFrom(from.positionlist_);
  eventlist_.MergeFrom(from.eventlist_);
}

void SRenderFrame::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cloudRender.SRenderFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SRenderFrame::CopyFrom(const SRenderFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cloudRender.SRenderFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SRenderFrame::IsInitialized() const {
  return true;
}

void SRenderFrame::InternalSwap(SRenderFrame* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  positionlist_.InternalSwap(&other->positionlist_);
  eventlist_.InternalSwap(&other->eventlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SRenderFrame::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PingACK::InitAsDefaultInstance() {
}
class PingACK::_Internal {
 public:
};

PingACK::PingACK()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cloudRender.PingACK)
}
PingACK::PingACK(const PingACK& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cloudRender.PingACK)
}

void PingACK::SharedCtor() {
}

PingACK::~PingACK() {
  // @@protoc_insertion_point(destructor:cloudRender.PingACK)
  SharedDtor();
}

void PingACK::SharedDtor() {
}

void PingACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PingACK& PingACK::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PingACK_cloudRender_2eproto.base);
  return *internal_default_instance();
}


void PingACK::Clear() {
// @@protoc_insertion_point(message_clear_start:cloudRender.PingACK)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* PingACK::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PingACK::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cloudRender.PingACK)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cloudRender.PingACK)
  return target;
}

size_t PingACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cloudRender.PingACK)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PingACK::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cloudRender.PingACK)
  GOOGLE_DCHECK_NE(&from, this);
  const PingACK* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PingACK>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cloudRender.PingACK)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cloudRender.PingACK)
    MergeFrom(*source);
  }
}

void PingACK::MergeFrom(const PingACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cloudRender.PingACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PingACK::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cloudRender.PingACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingACK::CopyFrom(const PingACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cloudRender.PingACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingACK::IsInitialized() const {
  return true;
}

void PingACK::InternalSwap(PingACK* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PingACK::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace cloudRender
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cloudRender::CVerify* Arena::CreateMaybeMessage< ::cloudRender::CVerify >(Arena* arena) {
  return Arena::CreateInternal< ::cloudRender::CVerify >(arena);
}
template<> PROTOBUF_NOINLINE ::cloudRender::SVerify* Arena::CreateMaybeMessage< ::cloudRender::SVerify >(Arena* arena) {
  return Arena::CreateInternal< ::cloudRender::SVerify >(arena);
}
template<> PROTOBUF_NOINLINE ::cloudRender::CRenderScale* Arena::CreateMaybeMessage< ::cloudRender::CRenderScale >(Arena* arena) {
  return Arena::CreateInternal< ::cloudRender::CRenderScale >(arena);
}
template<> PROTOBUF_NOINLINE ::cloudRender::SRenderScale* Arena::CreateMaybeMessage< ::cloudRender::SRenderScale >(Arena* arena) {
  return Arena::CreateInternal< ::cloudRender::SRenderScale >(arena);
}
template<> PROTOBUF_NOINLINE ::cloudRender::SRenderSwitchRoom* Arena::CreateMaybeMessage< ::cloudRender::SRenderSwitchRoom >(Arena* arena) {
  return Arena::CreateInternal< ::cloudRender::SRenderSwitchRoom >(arena);
}
template<> PROTOBUF_NOINLINE ::cloudRender::SRenderExitRoom* Arena::CreateMaybeMessage< ::cloudRender::SRenderExitRoom >(Arena* arena) {
  return Arena::CreateInternal< ::cloudRender::SRenderExitRoom >(arena);
}
template<> PROTOBUF_NOINLINE ::cloudRender::SRenderFrame* Arena::CreateMaybeMessage< ::cloudRender::SRenderFrame >(Arena* arena) {
  return Arena::CreateInternal< ::cloudRender::SRenderFrame >(arena);
}
template<> PROTOBUF_NOINLINE ::cloudRender::PingACK* Arena::CreateMaybeMessage< ::cloudRender::PingACK >(Arena* arena) {
  return Arena::CreateInternal< ::cloudRender::PingACK >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
