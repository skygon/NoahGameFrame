// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: actionInterrupt.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_actionInterrupt_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_actionInterrupt_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "vector.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_actionInterrupt_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_actionInterrupt_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_actionInterrupt_2eproto;
namespace actionInterrupt {
class CActionInterrupt;
class CActionInterruptDefaultTypeInternal;
extern CActionInterruptDefaultTypeInternal _CActionInterrupt_default_instance_;
class SActionInterrupt;
class SActionInterruptDefaultTypeInternal;
extern SActionInterruptDefaultTypeInternal _SActionInterrupt_default_instance_;
}  // namespace actionInterrupt
PROTOBUF_NAMESPACE_OPEN
template<> ::actionInterrupt::CActionInterrupt* Arena::CreateMaybeMessage<::actionInterrupt::CActionInterrupt>(Arena*);
template<> ::actionInterrupt::SActionInterrupt* Arena::CreateMaybeMessage<::actionInterrupt::SActionInterrupt>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace actionInterrupt {

// ===================================================================

class CActionInterrupt :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:actionInterrupt.CActionInterrupt) */ {
 public:
  CActionInterrupt();
  virtual ~CActionInterrupt();

  CActionInterrupt(const CActionInterrupt& from);
  CActionInterrupt(CActionInterrupt&& from) noexcept
    : CActionInterrupt() {
    *this = ::std::move(from);
  }

  inline CActionInterrupt& operator=(const CActionInterrupt& from) {
    CopyFrom(from);
    return *this;
  }
  inline CActionInterrupt& operator=(CActionInterrupt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CActionInterrupt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CActionInterrupt* internal_default_instance() {
    return reinterpret_cast<const CActionInterrupt*>(
               &_CActionInterrupt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CActionInterrupt& a, CActionInterrupt& b) {
    a.Swap(&b);
  }
  inline void Swap(CActionInterrupt* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CActionInterrupt* New() const final {
    return CreateMaybeMessage<CActionInterrupt>(nullptr);
  }

  CActionInterrupt* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CActionInterrupt>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CActionInterrupt& from);
  void MergeFrom(const CActionInterrupt& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CActionInterrupt* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "actionInterrupt.CActionInterrupt";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_actionInterrupt_2eproto);
    return ::descriptor_table_actionInterrupt_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionIdFieldNumber = 1,
  };
  // int32 actionId = 1;
  void clear_actionid();
  ::PROTOBUF_NAMESPACE_ID::int32 actionid() const;
  void set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actionid() const;
  void _internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:actionInterrupt.CActionInterrupt)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 actionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_actionInterrupt_2eproto;
};
// -------------------------------------------------------------------

class SActionInterrupt :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:actionInterrupt.SActionInterrupt) */ {
 public:
  SActionInterrupt();
  virtual ~SActionInterrupt();

  SActionInterrupt(const SActionInterrupt& from);
  SActionInterrupt(SActionInterrupt&& from) noexcept
    : SActionInterrupt() {
    *this = ::std::move(from);
  }

  inline SActionInterrupt& operator=(const SActionInterrupt& from) {
    CopyFrom(from);
    return *this;
  }
  inline SActionInterrupt& operator=(SActionInterrupt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SActionInterrupt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SActionInterrupt* internal_default_instance() {
    return reinterpret_cast<const SActionInterrupt*>(
               &_SActionInterrupt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SActionInterrupt& a, SActionInterrupt& b) {
    a.Swap(&b);
  }
  inline void Swap(SActionInterrupt* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SActionInterrupt* New() const final {
    return CreateMaybeMessage<SActionInterrupt>(nullptr);
  }

  SActionInterrupt* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SActionInterrupt>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SActionInterrupt& from);
  void MergeFrom(const SActionInterrupt& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SActionInterrupt* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "actionInterrupt.SActionInterrupt";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_actionInterrupt_2eproto);
    return ::descriptor_table_actionInterrupt_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionIdFieldNumber = 1,
  };
  // int32 actionId = 1;
  void clear_actionid();
  ::PROTOBUF_NAMESPACE_ID::int32 actionid() const;
  void set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actionid() const;
  void _internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:actionInterrupt.SActionInterrupt)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 actionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_actionInterrupt_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CActionInterrupt

// int32 actionId = 1;
inline void CActionInterrupt::clear_actionid() {
  actionid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CActionInterrupt::_internal_actionid() const {
  return actionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CActionInterrupt::actionid() const {
  // @@protoc_insertion_point(field_get:actionInterrupt.CActionInterrupt.actionId)
  return _internal_actionid();
}
inline void CActionInterrupt::_internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actionid_ = value;
}
inline void CActionInterrupt::set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actionid(value);
  // @@protoc_insertion_point(field_set:actionInterrupt.CActionInterrupt.actionId)
}

// -------------------------------------------------------------------

// SActionInterrupt

// int32 actionId = 1;
inline void SActionInterrupt::clear_actionid() {
  actionid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SActionInterrupt::_internal_actionid() const {
  return actionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SActionInterrupt::actionid() const {
  // @@protoc_insertion_point(field_get:actionInterrupt.SActionInterrupt.actionId)
  return _internal_actionid();
}
inline void SActionInterrupt::_internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actionid_ = value;
}
inline void SActionInterrupt::set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actionid(value);
  // @@protoc_insertion_point(field_set:actionInterrupt.SActionInterrupt.actionId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace actionInterrupt

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_actionInterrupt_2eproto
