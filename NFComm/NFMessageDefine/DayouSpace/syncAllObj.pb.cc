// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: syncAllObj.proto

#include "syncAllObj.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_syncAllObj_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ActionEvent_syncAllObj_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_syncAllObj_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Buff_syncAllObj_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_syncAllObj_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CrashInfo_syncAllObj_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_syncAllObj_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OBJOrientate_syncAllObj_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_syncAllObj_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OBJPosition_syncAllObj_2eproto;
namespace syncAllObj {
class SSyncAllObjDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSyncAllObj> _instance;
} _SSyncAllObj_default_instance_;
class ActionEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActionEvent> _instance;
} _ActionEvent_default_instance_;
class BuffDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Buff> _instance;
} _Buff_default_instance_;
class OBJPositionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OBJPosition> _instance;
} _OBJPosition_default_instance_;
class OBJOrientateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OBJOrientate> _instance;
} _OBJOrientate_default_instance_;
class SCrashNoticeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SCrashNotice> _instance;
} _SCrashNotice_default_instance_;
class CrashInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CrashInfo> _instance;
} _CrashInfo_default_instance_;
}  // namespace syncAllObj
static void InitDefaultsscc_info_ActionEvent_syncAllObj_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syncAllObj::_ActionEvent_default_instance_;
    new (ptr) ::syncAllObj::ActionEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::syncAllObj::ActionEvent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ActionEvent_syncAllObj_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ActionEvent_syncAllObj_2eproto}, {
      &scc_info_OBJPosition_syncAllObj_2eproto.base,
      &scc_info_OBJOrientate_syncAllObj_2eproto.base,}};

static void InitDefaultsscc_info_Buff_syncAllObj_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syncAllObj::_Buff_default_instance_;
    new (ptr) ::syncAllObj::Buff();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::syncAllObj::Buff::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Buff_syncAllObj_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Buff_syncAllObj_2eproto}, {}};

static void InitDefaultsscc_info_CrashInfo_syncAllObj_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syncAllObj::_CrashInfo_default_instance_;
    new (ptr) ::syncAllObj::CrashInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::syncAllObj::CrashInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CrashInfo_syncAllObj_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CrashInfo_syncAllObj_2eproto}, {}};

static void InitDefaultsscc_info_OBJOrientate_syncAllObj_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syncAllObj::_OBJOrientate_default_instance_;
    new (ptr) ::syncAllObj::OBJOrientate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::syncAllObj::OBJOrientate::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OBJOrientate_syncAllObj_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OBJOrientate_syncAllObj_2eproto}, {}};

static void InitDefaultsscc_info_OBJPosition_syncAllObj_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syncAllObj::_OBJPosition_default_instance_;
    new (ptr) ::syncAllObj::OBJPosition();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::syncAllObj::OBJPosition::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OBJPosition_syncAllObj_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OBJPosition_syncAllObj_2eproto}, {}};

static void InitDefaultsscc_info_SCrashNotice_syncAllObj_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syncAllObj::_SCrashNotice_default_instance_;
    new (ptr) ::syncAllObj::SCrashNotice();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::syncAllObj::SCrashNotice::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SCrashNotice_syncAllObj_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SCrashNotice_syncAllObj_2eproto}, {
      &scc_info_CrashInfo_syncAllObj_2eproto.base,}};

static void InitDefaultsscc_info_SSyncAllObj_syncAllObj_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syncAllObj::_SSyncAllObj_default_instance_;
    new (ptr) ::syncAllObj::SSyncAllObj();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::syncAllObj::SSyncAllObj::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SSyncAllObj_syncAllObj_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SSyncAllObj_syncAllObj_2eproto}, {
      &scc_info_ActionEvent_syncAllObj_2eproto.base,
      &scc_info_Buff_syncAllObj_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_syncAllObj_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_syncAllObj_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_syncAllObj_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_syncAllObj_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syncAllObj::SSyncAllObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syncAllObj::SSyncAllObj, eventlist_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::SSyncAllObj, currenttime_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::SSyncAllObj, buff_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syncAllObj::ActionEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syncAllObj::ActionEvent, id_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::ActionEvent, uid_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::ActionEvent, objectid_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::ActionEvent, pos_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::ActionEvent, progress_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::ActionEvent, currenttime_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::ActionEvent, type_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::ActionEvent, starttime_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::ActionEvent, endtime_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::ActionEvent, orientate_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::ActionEvent, combo_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::ActionEvent, belongtoid_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::ActionEvent, sendtoid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syncAllObj::Buff, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syncAllObj::Buff, id_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::Buff, buffid_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::Buff, uid_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::Buff, progress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syncAllObj::OBJPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syncAllObj::OBJPosition, x_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::OBJPosition, y_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::OBJPosition, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syncAllObj::OBJOrientate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syncAllObj::OBJOrientate, x_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::OBJOrientate, y_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::OBJOrientate, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syncAllObj::SCrashNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syncAllObj::SCrashNotice, list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syncAllObj::CrashInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syncAllObj::CrashInfo, buffid_),
  PROTOBUF_FIELD_OFFSET(::syncAllObj::CrashInfo, uid_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::syncAllObj::SSyncAllObj)},
  { 8, -1, sizeof(::syncAllObj::ActionEvent)},
  { 26, -1, sizeof(::syncAllObj::Buff)},
  { 35, -1, sizeof(::syncAllObj::OBJPosition)},
  { 43, -1, sizeof(::syncAllObj::OBJOrientate)},
  { 51, -1, sizeof(::syncAllObj::SCrashNotice)},
  { 57, -1, sizeof(::syncAllObj::CrashInfo)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syncAllObj::_SSyncAllObj_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syncAllObj::_ActionEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syncAllObj::_Buff_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syncAllObj::_OBJPosition_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syncAllObj::_OBJOrientate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syncAllObj::_SCrashNotice_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syncAllObj::_CrashInfo_default_instance_),
};

const char descriptor_table_protodef_syncAllObj_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020syncAllObj.proto\022\nsyncAllObj\"n\n\013SSyncA"
  "llObj\022*\n\teventList\030\001 \003(\0132\027.syncAllObj.Ac"
  "tionEvent\022\023\n\013currentTime\030\002 \001(\003\022\036\n\004Buff\030\003"
  " \003(\0132\020.syncAllObj.Buff\"\231\002\n\013ActionEvent\022\n"
  "\n\002id\030\001 \001(\005\022\013\n\003uid\030\002 \001(\005\022\020\n\010objectId\030\003 \001("
  "\005\022$\n\003pos\030\004 \001(\0132\027.syncAllObj.OBJPosition\022"
  "\020\n\010progress\030\005 \001(\002\022\023\n\013currentTime\030\006 \001(\003\022\014"
  "\n\004type\030\007 \001(\003\022\021\n\tstartTime\030\010 \001(\003\022\017\n\007endTi"
  "me\030\t \001(\003\022+\n\torientate\030\n \001(\0132\030.syncAllObj"
  ".OBJOrientate\022\r\n\005combo\030\013 \001(\005\022\022\n\nbelongTo"
  "Id\030\014 \001(\005\022\020\n\010sendToId\030\r \001(\005\"A\n\004Buff\022\n\n\002ID"
  "\030\001 \001(\005\022\016\n\006BuffID\030\002 \001(\005\022\013\n\003UID\030\003 \001(\005\022\020\n\010p"
  "rogress\030\004 \001(\002\".\n\013OBJPosition\022\t\n\001x\030\001 \001(\002\022"
  "\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"/\n\014OBJOrientate\022\t\n"
  "\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"3\n\014SCrash"
  "Notice\022#\n\004list\030\001 \003(\0132\025.syncAllObj.CrashI"
  "nfo\"(\n\tCrashInfo\022\016\n\006BuffID\030\001 \001(\005\022\013\n\003UID\030"
  "\002 \001(\005B&\n\030com.dayou.space.protobufB\nSyncA"
  "llObjb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_syncAllObj_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_syncAllObj_2eproto_sccs[7] = {
  &scc_info_ActionEvent_syncAllObj_2eproto.base,
  &scc_info_Buff_syncAllObj_2eproto.base,
  &scc_info_CrashInfo_syncAllObj_2eproto.base,
  &scc_info_OBJOrientate_syncAllObj_2eproto.base,
  &scc_info_OBJPosition_syncAllObj_2eproto.base,
  &scc_info_SCrashNotice_syncAllObj_2eproto.base,
  &scc_info_SSyncAllObj_syncAllObj_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_syncAllObj_2eproto_once;
static bool descriptor_table_syncAllObj_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_syncAllObj_2eproto = {
  &descriptor_table_syncAllObj_2eproto_initialized, descriptor_table_protodef_syncAllObj_2eproto, "syncAllObj.proto", 733,
  &descriptor_table_syncAllObj_2eproto_once, descriptor_table_syncAllObj_2eproto_sccs, descriptor_table_syncAllObj_2eproto_deps, 7, 0,
  schemas, file_default_instances, TableStruct_syncAllObj_2eproto::offsets,
  file_level_metadata_syncAllObj_2eproto, 7, file_level_enum_descriptors_syncAllObj_2eproto, file_level_service_descriptors_syncAllObj_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_syncAllObj_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_syncAllObj_2eproto), true);
namespace syncAllObj {

// ===================================================================

void SSyncAllObj::InitAsDefaultInstance() {
}
class SSyncAllObj::_Internal {
 public:
};

SSyncAllObj::SSyncAllObj()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:syncAllObj.SSyncAllObj)
}
SSyncAllObj::SSyncAllObj(const SSyncAllObj& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      eventlist_(from.eventlist_),
      buff_(from.buff_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  currenttime_ = from.currenttime_;
  // @@protoc_insertion_point(copy_constructor:syncAllObj.SSyncAllObj)
}

void SSyncAllObj::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSyncAllObj_syncAllObj_2eproto.base);
  currenttime_ = PROTOBUF_LONGLONG(0);
}

SSyncAllObj::~SSyncAllObj() {
  // @@protoc_insertion_point(destructor:syncAllObj.SSyncAllObj)
  SharedDtor();
}

void SSyncAllObj::SharedDtor() {
}

void SSyncAllObj::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSyncAllObj& SSyncAllObj::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSyncAllObj_syncAllObj_2eproto.base);
  return *internal_default_instance();
}


void SSyncAllObj::Clear() {
// @@protoc_insertion_point(message_clear_start:syncAllObj.SSyncAllObj)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eventlist_.Clear();
  buff_.Clear();
  currenttime_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* SSyncAllObj::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .syncAllObj.ActionEvent eventList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_eventlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // int64 currentTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          currenttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .syncAllObj.Buff Buff = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_buff(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSyncAllObj::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syncAllObj.SSyncAllObj)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .syncAllObj.ActionEvent eventList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_eventlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_eventlist(i), target, stream);
  }

  // int64 currentTime = 2;
  if (this->currenttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_currenttime(), target);
  }

  // repeated .syncAllObj.Buff Buff = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_buff_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_buff(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syncAllObj.SSyncAllObj)
  return target;
}

size_t SSyncAllObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syncAllObj.SSyncAllObj)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .syncAllObj.ActionEvent eventList = 1;
  total_size += 1UL * this->_internal_eventlist_size();
  for (const auto& msg : this->eventlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .syncAllObj.Buff Buff = 3;
  total_size += 1UL * this->_internal_buff_size();
  for (const auto& msg : this->buff_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 currentTime = 2;
  if (this->currenttime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_currenttime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSyncAllObj::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syncAllObj.SSyncAllObj)
  GOOGLE_DCHECK_NE(&from, this);
  const SSyncAllObj* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSyncAllObj>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syncAllObj.SSyncAllObj)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syncAllObj.SSyncAllObj)
    MergeFrom(*source);
  }
}

void SSyncAllObj::MergeFrom(const SSyncAllObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syncAllObj.SSyncAllObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  eventlist_.MergeFrom(from.eventlist_);
  buff_.MergeFrom(from.buff_);
  if (from.currenttime() != 0) {
    _internal_set_currenttime(from._internal_currenttime());
  }
}

void SSyncAllObj::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syncAllObj.SSyncAllObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSyncAllObj::CopyFrom(const SSyncAllObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syncAllObj.SSyncAllObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSyncAllObj::IsInitialized() const {
  return true;
}

void SSyncAllObj::InternalSwap(SSyncAllObj* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  eventlist_.InternalSwap(&other->eventlist_);
  buff_.InternalSwap(&other->buff_);
  swap(currenttime_, other->currenttime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SSyncAllObj::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ActionEvent::InitAsDefaultInstance() {
  ::syncAllObj::_ActionEvent_default_instance_._instance.get_mutable()->pos_ = const_cast< ::syncAllObj::OBJPosition*>(
      ::syncAllObj::OBJPosition::internal_default_instance());
  ::syncAllObj::_ActionEvent_default_instance_._instance.get_mutable()->orientate_ = const_cast< ::syncAllObj::OBJOrientate*>(
      ::syncAllObj::OBJOrientate::internal_default_instance());
}
class ActionEvent::_Internal {
 public:
  static const ::syncAllObj::OBJPosition& pos(const ActionEvent* msg);
  static const ::syncAllObj::OBJOrientate& orientate(const ActionEvent* msg);
};

const ::syncAllObj::OBJPosition&
ActionEvent::_Internal::pos(const ActionEvent* msg) {
  return *msg->pos_;
}
const ::syncAllObj::OBJOrientate&
ActionEvent::_Internal::orientate(const ActionEvent* msg) {
  return *msg->orientate_;
}
ActionEvent::ActionEvent()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:syncAllObj.ActionEvent)
}
ActionEvent::ActionEvent(const ActionEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_pos()) {
    pos_ = new ::syncAllObj::OBJPosition(*from.pos_);
  } else {
    pos_ = nullptr;
  }
  if (from._internal_has_orientate()) {
    orientate_ = new ::syncAllObj::OBJOrientate(*from.orientate_);
  } else {
    orientate_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&sendtoid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(sendtoid_));
  // @@protoc_insertion_point(copy_constructor:syncAllObj.ActionEvent)
}

void ActionEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActionEvent_syncAllObj_2eproto.base);
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sendtoid_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(sendtoid_));
}

ActionEvent::~ActionEvent() {
  // @@protoc_insertion_point(destructor:syncAllObj.ActionEvent)
  SharedDtor();
}

void ActionEvent::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete orientate_;
}

void ActionEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActionEvent& ActionEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActionEvent_syncAllObj_2eproto.base);
  return *internal_default_instance();
}


void ActionEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:syncAllObj.ActionEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && orientate_ != nullptr) {
    delete orientate_;
  }
  orientate_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sendtoid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(sendtoid_));
  _internal_metadata_.Clear();
}

const char* ActionEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 objectId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syncAllObj.OBJPosition pos = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_pos(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float progress = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          progress_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int64 currentTime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          currenttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 type = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 startTime = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          starttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 endTime = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          endtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syncAllObj.OBJOrientate orientate = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_orientate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 combo = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          combo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 belongToId = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          belongtoid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sendToId = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          sendtoid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActionEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syncAllObj.ActionEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 uid = 2;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_uid(), target);
  }

  // int32 objectId = 3;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_objectid(), target);
  }

  // .syncAllObj.OBJPosition pos = 4;
  if (this->has_pos()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::pos(this), target, stream);
  }

  // float progress = 5;
  if (!(this->progress() <= 0 && this->progress() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_progress(), target);
  }

  // int64 currentTime = 6;
  if (this->currenttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_currenttime(), target);
  }

  // int64 type = 7;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_type(), target);
  }

  // int64 startTime = 8;
  if (this->starttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_starttime(), target);
  }

  // int64 endTime = 9;
  if (this->endtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(9, this->_internal_endtime(), target);
  }

  // .syncAllObj.OBJOrientate orientate = 10;
  if (this->has_orientate()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::orientate(this), target, stream);
  }

  // int32 combo = 11;
  if (this->combo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_combo(), target);
  }

  // int32 belongToId = 12;
  if (this->belongtoid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_belongtoid(), target);
  }

  // int32 sendToId = 13;
  if (this->sendtoid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(13, this->_internal_sendtoid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syncAllObj.ActionEvent)
  return target;
}

size_t ActionEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syncAllObj.ActionEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .syncAllObj.OBJPosition pos = 4;
  if (this->has_pos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // .syncAllObj.OBJOrientate orientate = 10;
  if (this->has_orientate()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *orientate_);
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  // int32 objectId = 3;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_objectid());
  }

  // float progress = 5;
  if (!(this->progress() <= 0 && this->progress() >= 0)) {
    total_size += 1 + 4;
  }

  // int64 currentTime = 6;
  if (this->currenttime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_currenttime());
  }

  // int64 type = 7;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_type());
  }

  // int64 startTime = 8;
  if (this->starttime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_starttime());
  }

  // int64 endTime = 9;
  if (this->endtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_endtime());
  }

  // int32 combo = 11;
  if (this->combo() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_combo());
  }

  // int32 belongToId = 12;
  if (this->belongtoid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_belongtoid());
  }

  // int32 sendToId = 13;
  if (this->sendtoid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sendtoid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syncAllObj.ActionEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActionEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syncAllObj.ActionEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syncAllObj.ActionEvent)
    MergeFrom(*source);
  }
}

void ActionEvent::MergeFrom(const ActionEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syncAllObj.ActionEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    _internal_mutable_pos()->::syncAllObj::OBJPosition::MergeFrom(from._internal_pos());
  }
  if (from.has_orientate()) {
    _internal_mutable_orientate()->::syncAllObj::OBJOrientate::MergeFrom(from._internal_orientate());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
  if (!(from.progress() <= 0 && from.progress() >= 0)) {
    _internal_set_progress(from._internal_progress());
  }
  if (from.currenttime() != 0) {
    _internal_set_currenttime(from._internal_currenttime());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.starttime() != 0) {
    _internal_set_starttime(from._internal_starttime());
  }
  if (from.endtime() != 0) {
    _internal_set_endtime(from._internal_endtime());
  }
  if (from.combo() != 0) {
    _internal_set_combo(from._internal_combo());
  }
  if (from.belongtoid() != 0) {
    _internal_set_belongtoid(from._internal_belongtoid());
  }
  if (from.sendtoid() != 0) {
    _internal_set_sendtoid(from._internal_sendtoid());
  }
}

void ActionEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syncAllObj.ActionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionEvent::CopyFrom(const ActionEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syncAllObj.ActionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionEvent::IsInitialized() const {
  return true;
}

void ActionEvent::InternalSwap(ActionEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pos_, other->pos_);
  swap(orientate_, other->orientate_);
  swap(id_, other->id_);
  swap(uid_, other->uid_);
  swap(objectid_, other->objectid_);
  swap(progress_, other->progress_);
  swap(currenttime_, other->currenttime_);
  swap(type_, other->type_);
  swap(starttime_, other->starttime_);
  swap(endtime_, other->endtime_);
  swap(combo_, other->combo_);
  swap(belongtoid_, other->belongtoid_);
  swap(sendtoid_, other->sendtoid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Buff::InitAsDefaultInstance() {
}
class Buff::_Internal {
 public:
};

Buff::Buff()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:syncAllObj.Buff)
}
Buff::Buff(const Buff& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&id_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:syncAllObj.Buff)
}

void Buff::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&id_)) + sizeof(progress_));
}

Buff::~Buff() {
  // @@protoc_insertion_point(destructor:syncAllObj.Buff)
  SharedDtor();
}

void Buff::SharedDtor() {
}

void Buff::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Buff& Buff::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Buff_syncAllObj_2eproto.base);
  return *internal_default_instance();
}


void Buff::Clear() {
// @@protoc_insertion_point(message_clear_start:syncAllObj.Buff)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&id_)) + sizeof(progress_));
  _internal_metadata_.Clear();
}

const char* Buff::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 ID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 BuffID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          buffid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 UID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float progress = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          progress_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Buff::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syncAllObj.Buff)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 BuffID = 2;
  if (this->buffid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_buffid(), target);
  }

  // int32 UID = 3;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_uid(), target);
  }

  // float progress = 4;
  if (!(this->progress() <= 0 && this->progress() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_progress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syncAllObj.Buff)
  return target;
}

size_t Buff::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syncAllObj.Buff)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 BuffID = 2;
  if (this->buffid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_buffid());
  }

  // int32 UID = 3;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  // float progress = 4;
  if (!(this->progress() <= 0 && this->progress() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Buff::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syncAllObj.Buff)
  GOOGLE_DCHECK_NE(&from, this);
  const Buff* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Buff>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syncAllObj.Buff)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syncAllObj.Buff)
    MergeFrom(*source);
  }
}

void Buff::MergeFrom(const Buff& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syncAllObj.Buff)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.buffid() != 0) {
    _internal_set_buffid(from._internal_buffid());
  }
  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  if (!(from.progress() <= 0 && from.progress() >= 0)) {
    _internal_set_progress(from._internal_progress());
  }
}

void Buff::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syncAllObj.Buff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Buff::CopyFrom(const Buff& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syncAllObj.Buff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Buff::IsInitialized() const {
  return true;
}

void Buff::InternalSwap(Buff* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
  swap(buffid_, other->buffid_);
  swap(uid_, other->uid_);
  swap(progress_, other->progress_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Buff::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OBJPosition::InitAsDefaultInstance() {
}
class OBJPosition::_Internal {
 public:
};

OBJPosition::OBJPosition()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:syncAllObj.OBJPosition)
}
OBJPosition::OBJPosition(const OBJPosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:syncAllObj.OBJPosition)
}

void OBJPosition::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

OBJPosition::~OBJPosition() {
  // @@protoc_insertion_point(destructor:syncAllObj.OBJPosition)
  SharedDtor();
}

void OBJPosition::SharedDtor() {
}

void OBJPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OBJPosition& OBJPosition::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OBJPosition_syncAllObj_2eproto.base);
  return *internal_default_instance();
}


void OBJPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:syncAllObj.OBJPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

const char* OBJPosition::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OBJPosition::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syncAllObj.OBJPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syncAllObj.OBJPosition)
  return target;
}

size_t OBJPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syncAllObj.OBJPosition)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OBJPosition::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syncAllObj.OBJPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const OBJPosition* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OBJPosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syncAllObj.OBJPosition)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syncAllObj.OBJPosition)
    MergeFrom(*source);
  }
}

void OBJPosition::MergeFrom(const OBJPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syncAllObj.OBJPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
}

void OBJPosition::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syncAllObj.OBJPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OBJPosition::CopyFrom(const OBJPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syncAllObj.OBJPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OBJPosition::IsInitialized() const {
  return true;
}

void OBJPosition::InternalSwap(OBJPosition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OBJPosition::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OBJOrientate::InitAsDefaultInstance() {
}
class OBJOrientate::_Internal {
 public:
};

OBJOrientate::OBJOrientate()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:syncAllObj.OBJOrientate)
}
OBJOrientate::OBJOrientate(const OBJOrientate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:syncAllObj.OBJOrientate)
}

void OBJOrientate::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

OBJOrientate::~OBJOrientate() {
  // @@protoc_insertion_point(destructor:syncAllObj.OBJOrientate)
  SharedDtor();
}

void OBJOrientate::SharedDtor() {
}

void OBJOrientate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OBJOrientate& OBJOrientate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OBJOrientate_syncAllObj_2eproto.base);
  return *internal_default_instance();
}


void OBJOrientate::Clear() {
// @@protoc_insertion_point(message_clear_start:syncAllObj.OBJOrientate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

const char* OBJOrientate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OBJOrientate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syncAllObj.OBJOrientate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syncAllObj.OBJOrientate)
  return target;
}

size_t OBJOrientate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syncAllObj.OBJOrientate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OBJOrientate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syncAllObj.OBJOrientate)
  GOOGLE_DCHECK_NE(&from, this);
  const OBJOrientate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OBJOrientate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syncAllObj.OBJOrientate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syncAllObj.OBJOrientate)
    MergeFrom(*source);
  }
}

void OBJOrientate::MergeFrom(const OBJOrientate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syncAllObj.OBJOrientate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
}

void OBJOrientate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syncAllObj.OBJOrientate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OBJOrientate::CopyFrom(const OBJOrientate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syncAllObj.OBJOrientate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OBJOrientate::IsInitialized() const {
  return true;
}

void OBJOrientate::InternalSwap(OBJOrientate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OBJOrientate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SCrashNotice::InitAsDefaultInstance() {
}
class SCrashNotice::_Internal {
 public:
};

SCrashNotice::SCrashNotice()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:syncAllObj.SCrashNotice)
}
SCrashNotice::SCrashNotice(const SCrashNotice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:syncAllObj.SCrashNotice)
}

void SCrashNotice::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SCrashNotice_syncAllObj_2eproto.base);
}

SCrashNotice::~SCrashNotice() {
  // @@protoc_insertion_point(destructor:syncAllObj.SCrashNotice)
  SharedDtor();
}

void SCrashNotice::SharedDtor() {
}

void SCrashNotice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SCrashNotice& SCrashNotice::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SCrashNotice_syncAllObj_2eproto.base);
  return *internal_default_instance();
}


void SCrashNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:syncAllObj.SCrashNotice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _internal_metadata_.Clear();
}

const char* SCrashNotice::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .syncAllObj.CrashInfo list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SCrashNotice::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syncAllObj.SCrashNotice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .syncAllObj.CrashInfo list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syncAllObj.SCrashNotice)
  return target;
}

size_t SCrashNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syncAllObj.SCrashNotice)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .syncAllObj.CrashInfo list = 1;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SCrashNotice::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syncAllObj.SCrashNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const SCrashNotice* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SCrashNotice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syncAllObj.SCrashNotice)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syncAllObj.SCrashNotice)
    MergeFrom(*source);
  }
}

void SCrashNotice::MergeFrom(const SCrashNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syncAllObj.SCrashNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void SCrashNotice::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syncAllObj.SCrashNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SCrashNotice::CopyFrom(const SCrashNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syncAllObj.SCrashNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SCrashNotice::IsInitialized() const {
  return true;
}

void SCrashNotice::InternalSwap(SCrashNotice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  list_.InternalSwap(&other->list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SCrashNotice::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CrashInfo::InitAsDefaultInstance() {
}
class CrashInfo::_Internal {
 public:
};

CrashInfo::CrashInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:syncAllObj.CrashInfo)
}
CrashInfo::CrashInfo(const CrashInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&buffid_, &from.buffid_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&buffid_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:syncAllObj.CrashInfo)
}

void CrashInfo::SharedCtor() {
  ::memset(&buffid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&buffid_)) + sizeof(uid_));
}

CrashInfo::~CrashInfo() {
  // @@protoc_insertion_point(destructor:syncAllObj.CrashInfo)
  SharedDtor();
}

void CrashInfo::SharedDtor() {
}

void CrashInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CrashInfo& CrashInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CrashInfo_syncAllObj_2eproto.base);
  return *internal_default_instance();
}


void CrashInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:syncAllObj.CrashInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&buffid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&buffid_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

const char* CrashInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 BuffID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          buffid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 UID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CrashInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syncAllObj.CrashInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 BuffID = 1;
  if (this->buffid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_buffid(), target);
  }

  // int32 UID = 2;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syncAllObj.CrashInfo)
  return target;
}

size_t CrashInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syncAllObj.CrashInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 BuffID = 1;
  if (this->buffid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_buffid());
  }

  // int32 UID = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CrashInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syncAllObj.CrashInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CrashInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CrashInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syncAllObj.CrashInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syncAllObj.CrashInfo)
    MergeFrom(*source);
  }
}

void CrashInfo::MergeFrom(const CrashInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syncAllObj.CrashInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.buffid() != 0) {
    _internal_set_buffid(from._internal_buffid());
  }
  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
}

void CrashInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syncAllObj.CrashInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrashInfo::CopyFrom(const CrashInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syncAllObj.CrashInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrashInfo::IsInitialized() const {
  return true;
}

void CrashInfo::InternalSwap(CrashInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(buffid_, other->buffid_);
  swap(uid_, other->uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CrashInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace syncAllObj
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::syncAllObj::SSyncAllObj* Arena::CreateMaybeMessage< ::syncAllObj::SSyncAllObj >(Arena* arena) {
  return Arena::CreateInternal< ::syncAllObj::SSyncAllObj >(arena);
}
template<> PROTOBUF_NOINLINE ::syncAllObj::ActionEvent* Arena::CreateMaybeMessage< ::syncAllObj::ActionEvent >(Arena* arena) {
  return Arena::CreateInternal< ::syncAllObj::ActionEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::syncAllObj::Buff* Arena::CreateMaybeMessage< ::syncAllObj::Buff >(Arena* arena) {
  return Arena::CreateInternal< ::syncAllObj::Buff >(arena);
}
template<> PROTOBUF_NOINLINE ::syncAllObj::OBJPosition* Arena::CreateMaybeMessage< ::syncAllObj::OBJPosition >(Arena* arena) {
  return Arena::CreateInternal< ::syncAllObj::OBJPosition >(arena);
}
template<> PROTOBUF_NOINLINE ::syncAllObj::OBJOrientate* Arena::CreateMaybeMessage< ::syncAllObj::OBJOrientate >(Arena* arena) {
  return Arena::CreateInternal< ::syncAllObj::OBJOrientate >(arena);
}
template<> PROTOBUF_NOINLINE ::syncAllObj::SCrashNotice* Arena::CreateMaybeMessage< ::syncAllObj::SCrashNotice >(Arena* arena) {
  return Arena::CreateInternal< ::syncAllObj::SCrashNotice >(arena);
}
template<> PROTOBUF_NOINLINE ::syncAllObj::CrashInfo* Arena::CreateMaybeMessage< ::syncAllObj::CrashInfo >(Arena* arena) {
  return Arena::CreateInternal< ::syncAllObj::CrashInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
