// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: treasureBox.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_treasureBox_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_treasureBox_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "vector.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_treasureBox_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_treasureBox_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[11]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_treasureBox_2eproto;
namespace treasureBox {
class CDailyTreasureBoxStatus;
class CDailyTreasureBoxStatusDefaultTypeInternal;
extern CDailyTreasureBoxStatusDefaultTypeInternal _CDailyTreasureBoxStatus_default_instance_;
class COpenDailyTreasureBox;
class COpenDailyTreasureBoxDefaultTypeInternal;
extern COpenDailyTreasureBoxDefaultTypeInternal _COpenDailyTreasureBox_default_instance_;
class COpenSpaceTreasureBox;
class COpenSpaceTreasureBoxDefaultTypeInternal;
extern COpenSpaceTreasureBoxDefaultTypeInternal _COpenSpaceTreasureBox_default_instance_;
class CSpaceTreasureBoxList;
class CSpaceTreasureBoxListDefaultTypeInternal;
extern CSpaceTreasureBoxListDefaultTypeInternal _CSpaceTreasureBoxList_default_instance_;
class SDailyTreasureBoxStatus;
class SDailyTreasureBoxStatusDefaultTypeInternal;
extern SDailyTreasureBoxStatusDefaultTypeInternal _SDailyTreasureBoxStatus_default_instance_;
class SOpenDailyTreasureBox;
class SOpenDailyTreasureBoxDefaultTypeInternal;
extern SOpenDailyTreasureBoxDefaultTypeInternal _SOpenDailyTreasureBox_default_instance_;
class SOpenSpaceTreasureBox;
class SOpenSpaceTreasureBoxDefaultTypeInternal;
extern SOpenSpaceTreasureBoxDefaultTypeInternal _SOpenSpaceTreasureBox_default_instance_;
class SSpaceTreasureBoxList;
class SSpaceTreasureBoxListDefaultTypeInternal;
extern SSpaceTreasureBoxListDefaultTypeInternal _SSpaceTreasureBoxList_default_instance_;
class SSpaceTreasureBoxRefreshNotice;
class SSpaceTreasureBoxRefreshNoticeDefaultTypeInternal;
extern SSpaceTreasureBoxRefreshNoticeDefaultTypeInternal _SSpaceTreasureBoxRefreshNotice_default_instance_;
class SpaceTreasureBoxInfo;
class SpaceTreasureBoxInfoDefaultTypeInternal;
extern SpaceTreasureBoxInfoDefaultTypeInternal _SpaceTreasureBoxInfo_default_instance_;
class TreasureBoxRewardContent;
class TreasureBoxRewardContentDefaultTypeInternal;
extern TreasureBoxRewardContentDefaultTypeInternal _TreasureBoxRewardContent_default_instance_;
}  // namespace treasureBox
PROTOBUF_NAMESPACE_OPEN
template<> ::treasureBox::CDailyTreasureBoxStatus* Arena::CreateMaybeMessage<::treasureBox::CDailyTreasureBoxStatus>(Arena*);
template<> ::treasureBox::COpenDailyTreasureBox* Arena::CreateMaybeMessage<::treasureBox::COpenDailyTreasureBox>(Arena*);
template<> ::treasureBox::COpenSpaceTreasureBox* Arena::CreateMaybeMessage<::treasureBox::COpenSpaceTreasureBox>(Arena*);
template<> ::treasureBox::CSpaceTreasureBoxList* Arena::CreateMaybeMessage<::treasureBox::CSpaceTreasureBoxList>(Arena*);
template<> ::treasureBox::SDailyTreasureBoxStatus* Arena::CreateMaybeMessage<::treasureBox::SDailyTreasureBoxStatus>(Arena*);
template<> ::treasureBox::SOpenDailyTreasureBox* Arena::CreateMaybeMessage<::treasureBox::SOpenDailyTreasureBox>(Arena*);
template<> ::treasureBox::SOpenSpaceTreasureBox* Arena::CreateMaybeMessage<::treasureBox::SOpenSpaceTreasureBox>(Arena*);
template<> ::treasureBox::SSpaceTreasureBoxList* Arena::CreateMaybeMessage<::treasureBox::SSpaceTreasureBoxList>(Arena*);
template<> ::treasureBox::SSpaceTreasureBoxRefreshNotice* Arena::CreateMaybeMessage<::treasureBox::SSpaceTreasureBoxRefreshNotice>(Arena*);
template<> ::treasureBox::SpaceTreasureBoxInfo* Arena::CreateMaybeMessage<::treasureBox::SpaceTreasureBoxInfo>(Arena*);
template<> ::treasureBox::TreasureBoxRewardContent* Arena::CreateMaybeMessage<::treasureBox::TreasureBoxRewardContent>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace treasureBox {

// ===================================================================

class CDailyTreasureBoxStatus :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:treasureBox.CDailyTreasureBoxStatus) */ {
 public:
  CDailyTreasureBoxStatus();
  virtual ~CDailyTreasureBoxStatus();

  CDailyTreasureBoxStatus(const CDailyTreasureBoxStatus& from);
  CDailyTreasureBoxStatus(CDailyTreasureBoxStatus&& from) noexcept
    : CDailyTreasureBoxStatus() {
    *this = ::std::move(from);
  }

  inline CDailyTreasureBoxStatus& operator=(const CDailyTreasureBoxStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDailyTreasureBoxStatus& operator=(CDailyTreasureBoxStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDailyTreasureBoxStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDailyTreasureBoxStatus* internal_default_instance() {
    return reinterpret_cast<const CDailyTreasureBoxStatus*>(
               &_CDailyTreasureBoxStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CDailyTreasureBoxStatus& a, CDailyTreasureBoxStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(CDailyTreasureBoxStatus* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDailyTreasureBoxStatus* New() const final {
    return CreateMaybeMessage<CDailyTreasureBoxStatus>(nullptr);
  }

  CDailyTreasureBoxStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDailyTreasureBoxStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDailyTreasureBoxStatus& from);
  void MergeFrom(const CDailyTreasureBoxStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDailyTreasureBoxStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "treasureBox.CDailyTreasureBoxStatus";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_treasureBox_2eproto);
    return ::descriptor_table_treasureBox_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:treasureBox.CDailyTreasureBoxStatus)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_treasureBox_2eproto;
};
// -------------------------------------------------------------------

class SDailyTreasureBoxStatus :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:treasureBox.SDailyTreasureBoxStatus) */ {
 public:
  SDailyTreasureBoxStatus();
  virtual ~SDailyTreasureBoxStatus();

  SDailyTreasureBoxStatus(const SDailyTreasureBoxStatus& from);
  SDailyTreasureBoxStatus(SDailyTreasureBoxStatus&& from) noexcept
    : SDailyTreasureBoxStatus() {
    *this = ::std::move(from);
  }

  inline SDailyTreasureBoxStatus& operator=(const SDailyTreasureBoxStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline SDailyTreasureBoxStatus& operator=(SDailyTreasureBoxStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SDailyTreasureBoxStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SDailyTreasureBoxStatus* internal_default_instance() {
    return reinterpret_cast<const SDailyTreasureBoxStatus*>(
               &_SDailyTreasureBoxStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SDailyTreasureBoxStatus& a, SDailyTreasureBoxStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(SDailyTreasureBoxStatus* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SDailyTreasureBoxStatus* New() const final {
    return CreateMaybeMessage<SDailyTreasureBoxStatus>(nullptr);
  }

  SDailyTreasureBoxStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SDailyTreasureBoxStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SDailyTreasureBoxStatus& from);
  void MergeFrom(const SDailyTreasureBoxStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SDailyTreasureBoxStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "treasureBox.SDailyTreasureBoxStatus";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_treasureBox_2eproto);
    return ::descriptor_table_treasureBox_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionFieldNumber = 3,
    kTreasureBoxTypeFieldNumber = 1,
    kIsOpenedFieldNumber = 2,
  };
  // .vector.PVector3 position = 3;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::vector::PVector3& position() const;
  ::vector::PVector3* release_position();
  ::vector::PVector3* mutable_position();
  void set_allocated_position(::vector::PVector3* position);
  private:
  const ::vector::PVector3& _internal_position() const;
  ::vector::PVector3* _internal_mutable_position();
  public:

  // int32 treasureBoxType = 1;
  void clear_treasureboxtype();
  ::PROTOBUF_NAMESPACE_ID::int32 treasureboxtype() const;
  void set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_treasureboxtype() const;
  void _internal_set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 isOpened = 2;
  void clear_isopened();
  ::PROTOBUF_NAMESPACE_ID::int32 isopened() const;
  void set_isopened(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_isopened() const;
  void _internal_set_isopened(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:treasureBox.SDailyTreasureBoxStatus)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::vector::PVector3* position_;
  ::PROTOBUF_NAMESPACE_ID::int32 treasureboxtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 isopened_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_treasureBox_2eproto;
};
// -------------------------------------------------------------------

class COpenDailyTreasureBox :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:treasureBox.COpenDailyTreasureBox) */ {
 public:
  COpenDailyTreasureBox();
  virtual ~COpenDailyTreasureBox();

  COpenDailyTreasureBox(const COpenDailyTreasureBox& from);
  COpenDailyTreasureBox(COpenDailyTreasureBox&& from) noexcept
    : COpenDailyTreasureBox() {
    *this = ::std::move(from);
  }

  inline COpenDailyTreasureBox& operator=(const COpenDailyTreasureBox& from) {
    CopyFrom(from);
    return *this;
  }
  inline COpenDailyTreasureBox& operator=(COpenDailyTreasureBox&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const COpenDailyTreasureBox& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const COpenDailyTreasureBox* internal_default_instance() {
    return reinterpret_cast<const COpenDailyTreasureBox*>(
               &_COpenDailyTreasureBox_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(COpenDailyTreasureBox& a, COpenDailyTreasureBox& b) {
    a.Swap(&b);
  }
  inline void Swap(COpenDailyTreasureBox* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline COpenDailyTreasureBox* New() const final {
    return CreateMaybeMessage<COpenDailyTreasureBox>(nullptr);
  }

  COpenDailyTreasureBox* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<COpenDailyTreasureBox>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const COpenDailyTreasureBox& from);
  void MergeFrom(const COpenDailyTreasureBox& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(COpenDailyTreasureBox* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "treasureBox.COpenDailyTreasureBox";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_treasureBox_2eproto);
    return ::descriptor_table_treasureBox_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTreasureBoxTypeFieldNumber = 1,
  };
  // int32 treasureBoxType = 1;
  void clear_treasureboxtype();
  ::PROTOBUF_NAMESPACE_ID::int32 treasureboxtype() const;
  void set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_treasureboxtype() const;
  void _internal_set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:treasureBox.COpenDailyTreasureBox)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 treasureboxtype_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_treasureBox_2eproto;
};
// -------------------------------------------------------------------

class SOpenDailyTreasureBox :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:treasureBox.SOpenDailyTreasureBox) */ {
 public:
  SOpenDailyTreasureBox();
  virtual ~SOpenDailyTreasureBox();

  SOpenDailyTreasureBox(const SOpenDailyTreasureBox& from);
  SOpenDailyTreasureBox(SOpenDailyTreasureBox&& from) noexcept
    : SOpenDailyTreasureBox() {
    *this = ::std::move(from);
  }

  inline SOpenDailyTreasureBox& operator=(const SOpenDailyTreasureBox& from) {
    CopyFrom(from);
    return *this;
  }
  inline SOpenDailyTreasureBox& operator=(SOpenDailyTreasureBox&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SOpenDailyTreasureBox& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SOpenDailyTreasureBox* internal_default_instance() {
    return reinterpret_cast<const SOpenDailyTreasureBox*>(
               &_SOpenDailyTreasureBox_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SOpenDailyTreasureBox& a, SOpenDailyTreasureBox& b) {
    a.Swap(&b);
  }
  inline void Swap(SOpenDailyTreasureBox* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SOpenDailyTreasureBox* New() const final {
    return CreateMaybeMessage<SOpenDailyTreasureBox>(nullptr);
  }

  SOpenDailyTreasureBox* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SOpenDailyTreasureBox>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SOpenDailyTreasureBox& from);
  void MergeFrom(const SOpenDailyTreasureBox& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SOpenDailyTreasureBox* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "treasureBox.SOpenDailyTreasureBox";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_treasureBox_2eproto);
    return ::descriptor_table_treasureBox_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kListFieldNumber = 1,
    kMsgFieldNumber = 3,
    kStateFieldNumber = 2,
  };
  // repeated .treasureBox.TreasureBoxRewardContent list = 1;
  int list_size() const;
  private:
  int _internal_list_size() const;
  public:
  void clear_list();
  ::treasureBox::TreasureBoxRewardContent* mutable_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::treasureBox::TreasureBoxRewardContent >*
      mutable_list();
  private:
  const ::treasureBox::TreasureBoxRewardContent& _internal_list(int index) const;
  ::treasureBox::TreasureBoxRewardContent* _internal_add_list();
  public:
  const ::treasureBox::TreasureBoxRewardContent& list(int index) const;
  ::treasureBox::TreasureBoxRewardContent* add_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::treasureBox::TreasureBoxRewardContent >&
      list() const;

  // string msg = 3;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // int32 state = 2;
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::int32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:treasureBox.SOpenDailyTreasureBox)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::treasureBox::TreasureBoxRewardContent > list_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::PROTOBUF_NAMESPACE_ID::int32 state_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_treasureBox_2eproto;
};
// -------------------------------------------------------------------

class CSpaceTreasureBoxList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:treasureBox.CSpaceTreasureBoxList) */ {
 public:
  CSpaceTreasureBoxList();
  virtual ~CSpaceTreasureBoxList();

  CSpaceTreasureBoxList(const CSpaceTreasureBoxList& from);
  CSpaceTreasureBoxList(CSpaceTreasureBoxList&& from) noexcept
    : CSpaceTreasureBoxList() {
    *this = ::std::move(from);
  }

  inline CSpaceTreasureBoxList& operator=(const CSpaceTreasureBoxList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSpaceTreasureBoxList& operator=(CSpaceTreasureBoxList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CSpaceTreasureBoxList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSpaceTreasureBoxList* internal_default_instance() {
    return reinterpret_cast<const CSpaceTreasureBoxList*>(
               &_CSpaceTreasureBoxList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CSpaceTreasureBoxList& a, CSpaceTreasureBoxList& b) {
    a.Swap(&b);
  }
  inline void Swap(CSpaceTreasureBoxList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CSpaceTreasureBoxList* New() const final {
    return CreateMaybeMessage<CSpaceTreasureBoxList>(nullptr);
  }

  CSpaceTreasureBoxList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CSpaceTreasureBoxList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CSpaceTreasureBoxList& from);
  void MergeFrom(const CSpaceTreasureBoxList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSpaceTreasureBoxList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "treasureBox.CSpaceTreasureBoxList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_treasureBox_2eproto);
    return ::descriptor_table_treasureBox_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:treasureBox.CSpaceTreasureBoxList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_treasureBox_2eproto;
};
// -------------------------------------------------------------------

class SSpaceTreasureBoxList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:treasureBox.SSpaceTreasureBoxList) */ {
 public:
  SSpaceTreasureBoxList();
  virtual ~SSpaceTreasureBoxList();

  SSpaceTreasureBoxList(const SSpaceTreasureBoxList& from);
  SSpaceTreasureBoxList(SSpaceTreasureBoxList&& from) noexcept
    : SSpaceTreasureBoxList() {
    *this = ::std::move(from);
  }

  inline SSpaceTreasureBoxList& operator=(const SSpaceTreasureBoxList& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSpaceTreasureBoxList& operator=(SSpaceTreasureBoxList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSpaceTreasureBoxList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SSpaceTreasureBoxList* internal_default_instance() {
    return reinterpret_cast<const SSpaceTreasureBoxList*>(
               &_SSpaceTreasureBoxList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SSpaceTreasureBoxList& a, SSpaceTreasureBoxList& b) {
    a.Swap(&b);
  }
  inline void Swap(SSpaceTreasureBoxList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSpaceTreasureBoxList* New() const final {
    return CreateMaybeMessage<SSpaceTreasureBoxList>(nullptr);
  }

  SSpaceTreasureBoxList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSpaceTreasureBoxList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSpaceTreasureBoxList& from);
  void MergeFrom(const SSpaceTreasureBoxList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSpaceTreasureBoxList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "treasureBox.SSpaceTreasureBoxList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_treasureBox_2eproto);
    return ::descriptor_table_treasureBox_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kListFieldNumber = 1,
  };
  // repeated .treasureBox.SpaceTreasureBoxInfo list = 1;
  int list_size() const;
  private:
  int _internal_list_size() const;
  public:
  void clear_list();
  ::treasureBox::SpaceTreasureBoxInfo* mutable_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::treasureBox::SpaceTreasureBoxInfo >*
      mutable_list();
  private:
  const ::treasureBox::SpaceTreasureBoxInfo& _internal_list(int index) const;
  ::treasureBox::SpaceTreasureBoxInfo* _internal_add_list();
  public:
  const ::treasureBox::SpaceTreasureBoxInfo& list(int index) const;
  ::treasureBox::SpaceTreasureBoxInfo* add_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::treasureBox::SpaceTreasureBoxInfo >&
      list() const;

  // @@protoc_insertion_point(class_scope:treasureBox.SSpaceTreasureBoxList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::treasureBox::SpaceTreasureBoxInfo > list_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_treasureBox_2eproto;
};
// -------------------------------------------------------------------

class COpenSpaceTreasureBox :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:treasureBox.COpenSpaceTreasureBox) */ {
 public:
  COpenSpaceTreasureBox();
  virtual ~COpenSpaceTreasureBox();

  COpenSpaceTreasureBox(const COpenSpaceTreasureBox& from);
  COpenSpaceTreasureBox(COpenSpaceTreasureBox&& from) noexcept
    : COpenSpaceTreasureBox() {
    *this = ::std::move(from);
  }

  inline COpenSpaceTreasureBox& operator=(const COpenSpaceTreasureBox& from) {
    CopyFrom(from);
    return *this;
  }
  inline COpenSpaceTreasureBox& operator=(COpenSpaceTreasureBox&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const COpenSpaceTreasureBox& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const COpenSpaceTreasureBox* internal_default_instance() {
    return reinterpret_cast<const COpenSpaceTreasureBox*>(
               &_COpenSpaceTreasureBox_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(COpenSpaceTreasureBox& a, COpenSpaceTreasureBox& b) {
    a.Swap(&b);
  }
  inline void Swap(COpenSpaceTreasureBox* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline COpenSpaceTreasureBox* New() const final {
    return CreateMaybeMessage<COpenSpaceTreasureBox>(nullptr);
  }

  COpenSpaceTreasureBox* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<COpenSpaceTreasureBox>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const COpenSpaceTreasureBox& from);
  void MergeFrom(const COpenSpaceTreasureBox& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(COpenSpaceTreasureBox* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "treasureBox.COpenSpaceTreasureBox";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_treasureBox_2eproto);
    return ::descriptor_table_treasureBox_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionFieldNumber = 2,
    kTreasureBoxTypeFieldNumber = 1,
  };
  // .vector.PVector3 position = 2;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::vector::PVector3& position() const;
  ::vector::PVector3* release_position();
  ::vector::PVector3* mutable_position();
  void set_allocated_position(::vector::PVector3* position);
  private:
  const ::vector::PVector3& _internal_position() const;
  ::vector::PVector3* _internal_mutable_position();
  public:

  // int32 treasureBoxType = 1;
  void clear_treasureboxtype();
  ::PROTOBUF_NAMESPACE_ID::int32 treasureboxtype() const;
  void set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_treasureboxtype() const;
  void _internal_set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:treasureBox.COpenSpaceTreasureBox)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::vector::PVector3* position_;
  ::PROTOBUF_NAMESPACE_ID::int32 treasureboxtype_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_treasureBox_2eproto;
};
// -------------------------------------------------------------------

class SOpenSpaceTreasureBox :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:treasureBox.SOpenSpaceTreasureBox) */ {
 public:
  SOpenSpaceTreasureBox();
  virtual ~SOpenSpaceTreasureBox();

  SOpenSpaceTreasureBox(const SOpenSpaceTreasureBox& from);
  SOpenSpaceTreasureBox(SOpenSpaceTreasureBox&& from) noexcept
    : SOpenSpaceTreasureBox() {
    *this = ::std::move(from);
  }

  inline SOpenSpaceTreasureBox& operator=(const SOpenSpaceTreasureBox& from) {
    CopyFrom(from);
    return *this;
  }
  inline SOpenSpaceTreasureBox& operator=(SOpenSpaceTreasureBox&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SOpenSpaceTreasureBox& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SOpenSpaceTreasureBox* internal_default_instance() {
    return reinterpret_cast<const SOpenSpaceTreasureBox*>(
               &_SOpenSpaceTreasureBox_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SOpenSpaceTreasureBox& a, SOpenSpaceTreasureBox& b) {
    a.Swap(&b);
  }
  inline void Swap(SOpenSpaceTreasureBox* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SOpenSpaceTreasureBox* New() const final {
    return CreateMaybeMessage<SOpenSpaceTreasureBox>(nullptr);
  }

  SOpenSpaceTreasureBox* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SOpenSpaceTreasureBox>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SOpenSpaceTreasureBox& from);
  void MergeFrom(const SOpenSpaceTreasureBox& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SOpenSpaceTreasureBox* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "treasureBox.SOpenSpaceTreasureBox";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_treasureBox_2eproto);
    return ::descriptor_table_treasureBox_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kListFieldNumber = 2,
    kMsgFieldNumber = 4,
    kPositionFieldNumber = 5,
    kOpenerUidFieldNumber = 1,
    kStateFieldNumber = 3,
  };
  // repeated .treasureBox.TreasureBoxRewardContent list = 2;
  int list_size() const;
  private:
  int _internal_list_size() const;
  public:
  void clear_list();
  ::treasureBox::TreasureBoxRewardContent* mutable_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::treasureBox::TreasureBoxRewardContent >*
      mutable_list();
  private:
  const ::treasureBox::TreasureBoxRewardContent& _internal_list(int index) const;
  ::treasureBox::TreasureBoxRewardContent* _internal_add_list();
  public:
  const ::treasureBox::TreasureBoxRewardContent& list(int index) const;
  ::treasureBox::TreasureBoxRewardContent* add_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::treasureBox::TreasureBoxRewardContent >&
      list() const;

  // string msg = 4;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // .vector.PVector3 position = 5;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::vector::PVector3& position() const;
  ::vector::PVector3* release_position();
  ::vector::PVector3* mutable_position();
  void set_allocated_position(::vector::PVector3* position);
  private:
  const ::vector::PVector3& _internal_position() const;
  ::vector::PVector3* _internal_mutable_position();
  public:

  // int32 OpenerUid = 1;
  void clear_openeruid();
  ::PROTOBUF_NAMESPACE_ID::int32 openeruid() const;
  void set_openeruid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_openeruid() const;
  void _internal_set_openeruid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 state = 3;
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::int32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:treasureBox.SOpenSpaceTreasureBox)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::treasureBox::TreasureBoxRewardContent > list_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::vector::PVector3* position_;
  ::PROTOBUF_NAMESPACE_ID::int32 openeruid_;
  ::PROTOBUF_NAMESPACE_ID::int32 state_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_treasureBox_2eproto;
};
// -------------------------------------------------------------------

class TreasureBoxRewardContent :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:treasureBox.TreasureBoxRewardContent) */ {
 public:
  TreasureBoxRewardContent();
  virtual ~TreasureBoxRewardContent();

  TreasureBoxRewardContent(const TreasureBoxRewardContent& from);
  TreasureBoxRewardContent(TreasureBoxRewardContent&& from) noexcept
    : TreasureBoxRewardContent() {
    *this = ::std::move(from);
  }

  inline TreasureBoxRewardContent& operator=(const TreasureBoxRewardContent& from) {
    CopyFrom(from);
    return *this;
  }
  inline TreasureBoxRewardContent& operator=(TreasureBoxRewardContent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TreasureBoxRewardContent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TreasureBoxRewardContent* internal_default_instance() {
    return reinterpret_cast<const TreasureBoxRewardContent*>(
               &_TreasureBoxRewardContent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(TreasureBoxRewardContent& a, TreasureBoxRewardContent& b) {
    a.Swap(&b);
  }
  inline void Swap(TreasureBoxRewardContent* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TreasureBoxRewardContent* New() const final {
    return CreateMaybeMessage<TreasureBoxRewardContent>(nullptr);
  }

  TreasureBoxRewardContent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TreasureBoxRewardContent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TreasureBoxRewardContent& from);
  void MergeFrom(const TreasureBoxRewardContent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TreasureBoxRewardContent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "treasureBox.TreasureBoxRewardContent";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_treasureBox_2eproto);
    return ::descriptor_table_treasureBox_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGoodNameFieldNumber = 2,
    kIconFieldNumber = 4,
    kGoodIdFieldNumber = 1,
    kNumFieldNumber = 3,
  };
  // string goodName = 2;
  void clear_goodname();
  const std::string& goodname() const;
  void set_goodname(const std::string& value);
  void set_goodname(std::string&& value);
  void set_goodname(const char* value);
  void set_goodname(const char* value, size_t size);
  std::string* mutable_goodname();
  std::string* release_goodname();
  void set_allocated_goodname(std::string* goodname);
  private:
  const std::string& _internal_goodname() const;
  void _internal_set_goodname(const std::string& value);
  std::string* _internal_mutable_goodname();
  public:

  // string icon = 4;
  void clear_icon();
  const std::string& icon() const;
  void set_icon(const std::string& value);
  void set_icon(std::string&& value);
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  std::string* mutable_icon();
  std::string* release_icon();
  void set_allocated_icon(std::string* icon);
  private:
  const std::string& _internal_icon() const;
  void _internal_set_icon(const std::string& value);
  std::string* _internal_mutable_icon();
  public:

  // int32 goodId = 1;
  void clear_goodid();
  ::PROTOBUF_NAMESPACE_ID::int32 goodid() const;
  void set_goodid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_goodid() const;
  void _internal_set_goodid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 num = 3;
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::int32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:treasureBox.TreasureBoxRewardContent)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr goodname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr icon_;
  ::PROTOBUF_NAMESPACE_ID::int32 goodid_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_treasureBox_2eproto;
};
// -------------------------------------------------------------------

class SpaceTreasureBoxInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:treasureBox.SpaceTreasureBoxInfo) */ {
 public:
  SpaceTreasureBoxInfo();
  virtual ~SpaceTreasureBoxInfo();

  SpaceTreasureBoxInfo(const SpaceTreasureBoxInfo& from);
  SpaceTreasureBoxInfo(SpaceTreasureBoxInfo&& from) noexcept
    : SpaceTreasureBoxInfo() {
    *this = ::std::move(from);
  }

  inline SpaceTreasureBoxInfo& operator=(const SpaceTreasureBoxInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpaceTreasureBoxInfo& operator=(SpaceTreasureBoxInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SpaceTreasureBoxInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SpaceTreasureBoxInfo* internal_default_instance() {
    return reinterpret_cast<const SpaceTreasureBoxInfo*>(
               &_SpaceTreasureBoxInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SpaceTreasureBoxInfo& a, SpaceTreasureBoxInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(SpaceTreasureBoxInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpaceTreasureBoxInfo* New() const final {
    return CreateMaybeMessage<SpaceTreasureBoxInfo>(nullptr);
  }

  SpaceTreasureBoxInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpaceTreasureBoxInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SpaceTreasureBoxInfo& from);
  void MergeFrom(const SpaceTreasureBoxInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpaceTreasureBoxInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "treasureBox.SpaceTreasureBoxInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_treasureBox_2eproto);
    return ::descriptor_table_treasureBox_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionFieldNumber = 3,
    kTreasureBoxTypeFieldNumber = 1,
  };
  // .vector.PVector3 position = 3;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::vector::PVector3& position() const;
  ::vector::PVector3* release_position();
  ::vector::PVector3* mutable_position();
  void set_allocated_position(::vector::PVector3* position);
  private:
  const ::vector::PVector3& _internal_position() const;
  ::vector::PVector3* _internal_mutable_position();
  public:

  // int32 treasureBoxType = 1;
  void clear_treasureboxtype();
  ::PROTOBUF_NAMESPACE_ID::int32 treasureboxtype() const;
  void set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_treasureboxtype() const;
  void _internal_set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:treasureBox.SpaceTreasureBoxInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::vector::PVector3* position_;
  ::PROTOBUF_NAMESPACE_ID::int32 treasureboxtype_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_treasureBox_2eproto;
};
// -------------------------------------------------------------------

class SSpaceTreasureBoxRefreshNotice :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:treasureBox.SSpaceTreasureBoxRefreshNotice) */ {
 public:
  SSpaceTreasureBoxRefreshNotice();
  virtual ~SSpaceTreasureBoxRefreshNotice();

  SSpaceTreasureBoxRefreshNotice(const SSpaceTreasureBoxRefreshNotice& from);
  SSpaceTreasureBoxRefreshNotice(SSpaceTreasureBoxRefreshNotice&& from) noexcept
    : SSpaceTreasureBoxRefreshNotice() {
    *this = ::std::move(from);
  }

  inline SSpaceTreasureBoxRefreshNotice& operator=(const SSpaceTreasureBoxRefreshNotice& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSpaceTreasureBoxRefreshNotice& operator=(SSpaceTreasureBoxRefreshNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSpaceTreasureBoxRefreshNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SSpaceTreasureBoxRefreshNotice* internal_default_instance() {
    return reinterpret_cast<const SSpaceTreasureBoxRefreshNotice*>(
               &_SSpaceTreasureBoxRefreshNotice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SSpaceTreasureBoxRefreshNotice& a, SSpaceTreasureBoxRefreshNotice& b) {
    a.Swap(&b);
  }
  inline void Swap(SSpaceTreasureBoxRefreshNotice* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSpaceTreasureBoxRefreshNotice* New() const final {
    return CreateMaybeMessage<SSpaceTreasureBoxRefreshNotice>(nullptr);
  }

  SSpaceTreasureBoxRefreshNotice* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSpaceTreasureBoxRefreshNotice>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSpaceTreasureBoxRefreshNotice& from);
  void MergeFrom(const SSpaceTreasureBoxRefreshNotice& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSpaceTreasureBoxRefreshNotice* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "treasureBox.SSpaceTreasureBoxRefreshNotice";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_treasureBox_2eproto);
    return ::descriptor_table_treasureBox_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionFieldNumber = 3,
    kTreasureBoxTypeFieldNumber = 1,
  };
  // .vector.PVector3 position = 3;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::vector::PVector3& position() const;
  ::vector::PVector3* release_position();
  ::vector::PVector3* mutable_position();
  void set_allocated_position(::vector::PVector3* position);
  private:
  const ::vector::PVector3& _internal_position() const;
  ::vector::PVector3* _internal_mutable_position();
  public:

  // int32 treasureBoxType = 1;
  void clear_treasureboxtype();
  ::PROTOBUF_NAMESPACE_ID::int32 treasureboxtype() const;
  void set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_treasureboxtype() const;
  void _internal_set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:treasureBox.SSpaceTreasureBoxRefreshNotice)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::vector::PVector3* position_;
  ::PROTOBUF_NAMESPACE_ID::int32 treasureboxtype_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_treasureBox_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CDailyTreasureBoxStatus

// -------------------------------------------------------------------

// SDailyTreasureBoxStatus

// int32 treasureBoxType = 1;
inline void SDailyTreasureBoxStatus::clear_treasureboxtype() {
  treasureboxtype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SDailyTreasureBoxStatus::_internal_treasureboxtype() const {
  return treasureboxtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SDailyTreasureBoxStatus::treasureboxtype() const {
  // @@protoc_insertion_point(field_get:treasureBox.SDailyTreasureBoxStatus.treasureBoxType)
  return _internal_treasureboxtype();
}
inline void SDailyTreasureBoxStatus::_internal_set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  treasureboxtype_ = value;
}
inline void SDailyTreasureBoxStatus::set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_treasureboxtype(value);
  // @@protoc_insertion_point(field_set:treasureBox.SDailyTreasureBoxStatus.treasureBoxType)
}

// int32 isOpened = 2;
inline void SDailyTreasureBoxStatus::clear_isopened() {
  isopened_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SDailyTreasureBoxStatus::_internal_isopened() const {
  return isopened_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SDailyTreasureBoxStatus::isopened() const {
  // @@protoc_insertion_point(field_get:treasureBox.SDailyTreasureBoxStatus.isOpened)
  return _internal_isopened();
}
inline void SDailyTreasureBoxStatus::_internal_set_isopened(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  isopened_ = value;
}
inline void SDailyTreasureBoxStatus::set_isopened(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_isopened(value);
  // @@protoc_insertion_point(field_set:treasureBox.SDailyTreasureBoxStatus.isOpened)
}

// .vector.PVector3 position = 3;
inline bool SDailyTreasureBoxStatus::_internal_has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline bool SDailyTreasureBoxStatus::has_position() const {
  return _internal_has_position();
}
inline const ::vector::PVector3& SDailyTreasureBoxStatus::_internal_position() const {
  const ::vector::PVector3* p = position_;
  return p != nullptr ? *p : *reinterpret_cast<const ::vector::PVector3*>(
      &::vector::_PVector3_default_instance_);
}
inline const ::vector::PVector3& SDailyTreasureBoxStatus::position() const {
  // @@protoc_insertion_point(field_get:treasureBox.SDailyTreasureBoxStatus.position)
  return _internal_position();
}
inline ::vector::PVector3* SDailyTreasureBoxStatus::release_position() {
  // @@protoc_insertion_point(field_release:treasureBox.SDailyTreasureBoxStatus.position)
  
  ::vector::PVector3* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::vector::PVector3* SDailyTreasureBoxStatus::_internal_mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::vector::PVector3>(GetArenaNoVirtual());
    position_ = p;
  }
  return position_;
}
inline ::vector::PVector3* SDailyTreasureBoxStatus::mutable_position() {
  // @@protoc_insertion_point(field_mutable:treasureBox.SDailyTreasureBoxStatus.position)
  return _internal_mutable_position();
}
inline void SDailyTreasureBoxStatus::set_allocated_position(::vector::PVector3* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:treasureBox.SDailyTreasureBoxStatus.position)
}

// -------------------------------------------------------------------

// COpenDailyTreasureBox

// int32 treasureBoxType = 1;
inline void COpenDailyTreasureBox::clear_treasureboxtype() {
  treasureboxtype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 COpenDailyTreasureBox::_internal_treasureboxtype() const {
  return treasureboxtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 COpenDailyTreasureBox::treasureboxtype() const {
  // @@protoc_insertion_point(field_get:treasureBox.COpenDailyTreasureBox.treasureBoxType)
  return _internal_treasureboxtype();
}
inline void COpenDailyTreasureBox::_internal_set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  treasureboxtype_ = value;
}
inline void COpenDailyTreasureBox::set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_treasureboxtype(value);
  // @@protoc_insertion_point(field_set:treasureBox.COpenDailyTreasureBox.treasureBoxType)
}

// -------------------------------------------------------------------

// SOpenDailyTreasureBox

// repeated .treasureBox.TreasureBoxRewardContent list = 1;
inline int SOpenDailyTreasureBox::_internal_list_size() const {
  return list_.size();
}
inline int SOpenDailyTreasureBox::list_size() const {
  return _internal_list_size();
}
inline void SOpenDailyTreasureBox::clear_list() {
  list_.Clear();
}
inline ::treasureBox::TreasureBoxRewardContent* SOpenDailyTreasureBox::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:treasureBox.SOpenDailyTreasureBox.list)
  return list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::treasureBox::TreasureBoxRewardContent >*
SOpenDailyTreasureBox::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:treasureBox.SOpenDailyTreasureBox.list)
  return &list_;
}
inline const ::treasureBox::TreasureBoxRewardContent& SOpenDailyTreasureBox::_internal_list(int index) const {
  return list_.Get(index);
}
inline const ::treasureBox::TreasureBoxRewardContent& SOpenDailyTreasureBox::list(int index) const {
  // @@protoc_insertion_point(field_get:treasureBox.SOpenDailyTreasureBox.list)
  return _internal_list(index);
}
inline ::treasureBox::TreasureBoxRewardContent* SOpenDailyTreasureBox::_internal_add_list() {
  return list_.Add();
}
inline ::treasureBox::TreasureBoxRewardContent* SOpenDailyTreasureBox::add_list() {
  // @@protoc_insertion_point(field_add:treasureBox.SOpenDailyTreasureBox.list)
  return _internal_add_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::treasureBox::TreasureBoxRewardContent >&
SOpenDailyTreasureBox::list() const {
  // @@protoc_insertion_point(field_list:treasureBox.SOpenDailyTreasureBox.list)
  return list_;
}

// int32 state = 2;
inline void SOpenDailyTreasureBox::clear_state() {
  state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SOpenDailyTreasureBox::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SOpenDailyTreasureBox::state() const {
  // @@protoc_insertion_point(field_get:treasureBox.SOpenDailyTreasureBox.state)
  return _internal_state();
}
inline void SOpenDailyTreasureBox::_internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  state_ = value;
}
inline void SOpenDailyTreasureBox::set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:treasureBox.SOpenDailyTreasureBox.state)
}

// string msg = 3;
inline void SOpenDailyTreasureBox::clear_msg() {
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SOpenDailyTreasureBox::msg() const {
  // @@protoc_insertion_point(field_get:treasureBox.SOpenDailyTreasureBox.msg)
  return _internal_msg();
}
inline void SOpenDailyTreasureBox::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:treasureBox.SOpenDailyTreasureBox.msg)
}
inline std::string* SOpenDailyTreasureBox::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:treasureBox.SOpenDailyTreasureBox.msg)
  return _internal_mutable_msg();
}
inline const std::string& SOpenDailyTreasureBox::_internal_msg() const {
  return msg_.GetNoArena();
}
inline void SOpenDailyTreasureBox::_internal_set_msg(const std::string& value) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SOpenDailyTreasureBox::set_msg(std::string&& value) {
  
  msg_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:treasureBox.SOpenDailyTreasureBox.msg)
}
inline void SOpenDailyTreasureBox::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:treasureBox.SOpenDailyTreasureBox.msg)
}
inline void SOpenDailyTreasureBox::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:treasureBox.SOpenDailyTreasureBox.msg)
}
inline std::string* SOpenDailyTreasureBox::_internal_mutable_msg() {
  
  return msg_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SOpenDailyTreasureBox::release_msg() {
  // @@protoc_insertion_point(field_release:treasureBox.SOpenDailyTreasureBox.msg)
  
  return msg_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SOpenDailyTreasureBox::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:treasureBox.SOpenDailyTreasureBox.msg)
}

// -------------------------------------------------------------------

// CSpaceTreasureBoxList

// -------------------------------------------------------------------

// SSpaceTreasureBoxList

// repeated .treasureBox.SpaceTreasureBoxInfo list = 1;
inline int SSpaceTreasureBoxList::_internal_list_size() const {
  return list_.size();
}
inline int SSpaceTreasureBoxList::list_size() const {
  return _internal_list_size();
}
inline void SSpaceTreasureBoxList::clear_list() {
  list_.Clear();
}
inline ::treasureBox::SpaceTreasureBoxInfo* SSpaceTreasureBoxList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:treasureBox.SSpaceTreasureBoxList.list)
  return list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::treasureBox::SpaceTreasureBoxInfo >*
SSpaceTreasureBoxList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:treasureBox.SSpaceTreasureBoxList.list)
  return &list_;
}
inline const ::treasureBox::SpaceTreasureBoxInfo& SSpaceTreasureBoxList::_internal_list(int index) const {
  return list_.Get(index);
}
inline const ::treasureBox::SpaceTreasureBoxInfo& SSpaceTreasureBoxList::list(int index) const {
  // @@protoc_insertion_point(field_get:treasureBox.SSpaceTreasureBoxList.list)
  return _internal_list(index);
}
inline ::treasureBox::SpaceTreasureBoxInfo* SSpaceTreasureBoxList::_internal_add_list() {
  return list_.Add();
}
inline ::treasureBox::SpaceTreasureBoxInfo* SSpaceTreasureBoxList::add_list() {
  // @@protoc_insertion_point(field_add:treasureBox.SSpaceTreasureBoxList.list)
  return _internal_add_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::treasureBox::SpaceTreasureBoxInfo >&
SSpaceTreasureBoxList::list() const {
  // @@protoc_insertion_point(field_list:treasureBox.SSpaceTreasureBoxList.list)
  return list_;
}

// -------------------------------------------------------------------

// COpenSpaceTreasureBox

// int32 treasureBoxType = 1;
inline void COpenSpaceTreasureBox::clear_treasureboxtype() {
  treasureboxtype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 COpenSpaceTreasureBox::_internal_treasureboxtype() const {
  return treasureboxtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 COpenSpaceTreasureBox::treasureboxtype() const {
  // @@protoc_insertion_point(field_get:treasureBox.COpenSpaceTreasureBox.treasureBoxType)
  return _internal_treasureboxtype();
}
inline void COpenSpaceTreasureBox::_internal_set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  treasureboxtype_ = value;
}
inline void COpenSpaceTreasureBox::set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_treasureboxtype(value);
  // @@protoc_insertion_point(field_set:treasureBox.COpenSpaceTreasureBox.treasureBoxType)
}

// .vector.PVector3 position = 2;
inline bool COpenSpaceTreasureBox::_internal_has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline bool COpenSpaceTreasureBox::has_position() const {
  return _internal_has_position();
}
inline const ::vector::PVector3& COpenSpaceTreasureBox::_internal_position() const {
  const ::vector::PVector3* p = position_;
  return p != nullptr ? *p : *reinterpret_cast<const ::vector::PVector3*>(
      &::vector::_PVector3_default_instance_);
}
inline const ::vector::PVector3& COpenSpaceTreasureBox::position() const {
  // @@protoc_insertion_point(field_get:treasureBox.COpenSpaceTreasureBox.position)
  return _internal_position();
}
inline ::vector::PVector3* COpenSpaceTreasureBox::release_position() {
  // @@protoc_insertion_point(field_release:treasureBox.COpenSpaceTreasureBox.position)
  
  ::vector::PVector3* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::vector::PVector3* COpenSpaceTreasureBox::_internal_mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::vector::PVector3>(GetArenaNoVirtual());
    position_ = p;
  }
  return position_;
}
inline ::vector::PVector3* COpenSpaceTreasureBox::mutable_position() {
  // @@protoc_insertion_point(field_mutable:treasureBox.COpenSpaceTreasureBox.position)
  return _internal_mutable_position();
}
inline void COpenSpaceTreasureBox::set_allocated_position(::vector::PVector3* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:treasureBox.COpenSpaceTreasureBox.position)
}

// -------------------------------------------------------------------

// SOpenSpaceTreasureBox

// int32 OpenerUid = 1;
inline void SOpenSpaceTreasureBox::clear_openeruid() {
  openeruid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SOpenSpaceTreasureBox::_internal_openeruid() const {
  return openeruid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SOpenSpaceTreasureBox::openeruid() const {
  // @@protoc_insertion_point(field_get:treasureBox.SOpenSpaceTreasureBox.OpenerUid)
  return _internal_openeruid();
}
inline void SOpenSpaceTreasureBox::_internal_set_openeruid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  openeruid_ = value;
}
inline void SOpenSpaceTreasureBox::set_openeruid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_openeruid(value);
  // @@protoc_insertion_point(field_set:treasureBox.SOpenSpaceTreasureBox.OpenerUid)
}

// repeated .treasureBox.TreasureBoxRewardContent list = 2;
inline int SOpenSpaceTreasureBox::_internal_list_size() const {
  return list_.size();
}
inline int SOpenSpaceTreasureBox::list_size() const {
  return _internal_list_size();
}
inline void SOpenSpaceTreasureBox::clear_list() {
  list_.Clear();
}
inline ::treasureBox::TreasureBoxRewardContent* SOpenSpaceTreasureBox::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:treasureBox.SOpenSpaceTreasureBox.list)
  return list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::treasureBox::TreasureBoxRewardContent >*
SOpenSpaceTreasureBox::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:treasureBox.SOpenSpaceTreasureBox.list)
  return &list_;
}
inline const ::treasureBox::TreasureBoxRewardContent& SOpenSpaceTreasureBox::_internal_list(int index) const {
  return list_.Get(index);
}
inline const ::treasureBox::TreasureBoxRewardContent& SOpenSpaceTreasureBox::list(int index) const {
  // @@protoc_insertion_point(field_get:treasureBox.SOpenSpaceTreasureBox.list)
  return _internal_list(index);
}
inline ::treasureBox::TreasureBoxRewardContent* SOpenSpaceTreasureBox::_internal_add_list() {
  return list_.Add();
}
inline ::treasureBox::TreasureBoxRewardContent* SOpenSpaceTreasureBox::add_list() {
  // @@protoc_insertion_point(field_add:treasureBox.SOpenSpaceTreasureBox.list)
  return _internal_add_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::treasureBox::TreasureBoxRewardContent >&
SOpenSpaceTreasureBox::list() const {
  // @@protoc_insertion_point(field_list:treasureBox.SOpenSpaceTreasureBox.list)
  return list_;
}

// int32 state = 3;
inline void SOpenSpaceTreasureBox::clear_state() {
  state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SOpenSpaceTreasureBox::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SOpenSpaceTreasureBox::state() const {
  // @@protoc_insertion_point(field_get:treasureBox.SOpenSpaceTreasureBox.state)
  return _internal_state();
}
inline void SOpenSpaceTreasureBox::_internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  state_ = value;
}
inline void SOpenSpaceTreasureBox::set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:treasureBox.SOpenSpaceTreasureBox.state)
}

// string msg = 4;
inline void SOpenSpaceTreasureBox::clear_msg() {
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SOpenSpaceTreasureBox::msg() const {
  // @@protoc_insertion_point(field_get:treasureBox.SOpenSpaceTreasureBox.msg)
  return _internal_msg();
}
inline void SOpenSpaceTreasureBox::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:treasureBox.SOpenSpaceTreasureBox.msg)
}
inline std::string* SOpenSpaceTreasureBox::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:treasureBox.SOpenSpaceTreasureBox.msg)
  return _internal_mutable_msg();
}
inline const std::string& SOpenSpaceTreasureBox::_internal_msg() const {
  return msg_.GetNoArena();
}
inline void SOpenSpaceTreasureBox::_internal_set_msg(const std::string& value) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SOpenSpaceTreasureBox::set_msg(std::string&& value) {
  
  msg_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:treasureBox.SOpenSpaceTreasureBox.msg)
}
inline void SOpenSpaceTreasureBox::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:treasureBox.SOpenSpaceTreasureBox.msg)
}
inline void SOpenSpaceTreasureBox::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:treasureBox.SOpenSpaceTreasureBox.msg)
}
inline std::string* SOpenSpaceTreasureBox::_internal_mutable_msg() {
  
  return msg_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SOpenSpaceTreasureBox::release_msg() {
  // @@protoc_insertion_point(field_release:treasureBox.SOpenSpaceTreasureBox.msg)
  
  return msg_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SOpenSpaceTreasureBox::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:treasureBox.SOpenSpaceTreasureBox.msg)
}

// .vector.PVector3 position = 5;
inline bool SOpenSpaceTreasureBox::_internal_has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline bool SOpenSpaceTreasureBox::has_position() const {
  return _internal_has_position();
}
inline const ::vector::PVector3& SOpenSpaceTreasureBox::_internal_position() const {
  const ::vector::PVector3* p = position_;
  return p != nullptr ? *p : *reinterpret_cast<const ::vector::PVector3*>(
      &::vector::_PVector3_default_instance_);
}
inline const ::vector::PVector3& SOpenSpaceTreasureBox::position() const {
  // @@protoc_insertion_point(field_get:treasureBox.SOpenSpaceTreasureBox.position)
  return _internal_position();
}
inline ::vector::PVector3* SOpenSpaceTreasureBox::release_position() {
  // @@protoc_insertion_point(field_release:treasureBox.SOpenSpaceTreasureBox.position)
  
  ::vector::PVector3* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::vector::PVector3* SOpenSpaceTreasureBox::_internal_mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::vector::PVector3>(GetArenaNoVirtual());
    position_ = p;
  }
  return position_;
}
inline ::vector::PVector3* SOpenSpaceTreasureBox::mutable_position() {
  // @@protoc_insertion_point(field_mutable:treasureBox.SOpenSpaceTreasureBox.position)
  return _internal_mutable_position();
}
inline void SOpenSpaceTreasureBox::set_allocated_position(::vector::PVector3* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:treasureBox.SOpenSpaceTreasureBox.position)
}

// -------------------------------------------------------------------

// TreasureBoxRewardContent

// int32 goodId = 1;
inline void TreasureBoxRewardContent::clear_goodid() {
  goodid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TreasureBoxRewardContent::_internal_goodid() const {
  return goodid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TreasureBoxRewardContent::goodid() const {
  // @@protoc_insertion_point(field_get:treasureBox.TreasureBoxRewardContent.goodId)
  return _internal_goodid();
}
inline void TreasureBoxRewardContent::_internal_set_goodid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  goodid_ = value;
}
inline void TreasureBoxRewardContent::set_goodid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_goodid(value);
  // @@protoc_insertion_point(field_set:treasureBox.TreasureBoxRewardContent.goodId)
}

// string goodName = 2;
inline void TreasureBoxRewardContent::clear_goodname() {
  goodname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& TreasureBoxRewardContent::goodname() const {
  // @@protoc_insertion_point(field_get:treasureBox.TreasureBoxRewardContent.goodName)
  return _internal_goodname();
}
inline void TreasureBoxRewardContent::set_goodname(const std::string& value) {
  _internal_set_goodname(value);
  // @@protoc_insertion_point(field_set:treasureBox.TreasureBoxRewardContent.goodName)
}
inline std::string* TreasureBoxRewardContent::mutable_goodname() {
  // @@protoc_insertion_point(field_mutable:treasureBox.TreasureBoxRewardContent.goodName)
  return _internal_mutable_goodname();
}
inline const std::string& TreasureBoxRewardContent::_internal_goodname() const {
  return goodname_.GetNoArena();
}
inline void TreasureBoxRewardContent::_internal_set_goodname(const std::string& value) {
  
  goodname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void TreasureBoxRewardContent::set_goodname(std::string&& value) {
  
  goodname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:treasureBox.TreasureBoxRewardContent.goodName)
}
inline void TreasureBoxRewardContent::set_goodname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  goodname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:treasureBox.TreasureBoxRewardContent.goodName)
}
inline void TreasureBoxRewardContent::set_goodname(const char* value, size_t size) {
  
  goodname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:treasureBox.TreasureBoxRewardContent.goodName)
}
inline std::string* TreasureBoxRewardContent::_internal_mutable_goodname() {
  
  return goodname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TreasureBoxRewardContent::release_goodname() {
  // @@protoc_insertion_point(field_release:treasureBox.TreasureBoxRewardContent.goodName)
  
  return goodname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TreasureBoxRewardContent::set_allocated_goodname(std::string* goodname) {
  if (goodname != nullptr) {
    
  } else {
    
  }
  goodname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), goodname);
  // @@protoc_insertion_point(field_set_allocated:treasureBox.TreasureBoxRewardContent.goodName)
}

// int32 num = 3;
inline void TreasureBoxRewardContent::clear_num() {
  num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TreasureBoxRewardContent::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TreasureBoxRewardContent::num() const {
  // @@protoc_insertion_point(field_get:treasureBox.TreasureBoxRewardContent.num)
  return _internal_num();
}
inline void TreasureBoxRewardContent::_internal_set_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  num_ = value;
}
inline void TreasureBoxRewardContent::set_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:treasureBox.TreasureBoxRewardContent.num)
}

// string icon = 4;
inline void TreasureBoxRewardContent::clear_icon() {
  icon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& TreasureBoxRewardContent::icon() const {
  // @@protoc_insertion_point(field_get:treasureBox.TreasureBoxRewardContent.icon)
  return _internal_icon();
}
inline void TreasureBoxRewardContent::set_icon(const std::string& value) {
  _internal_set_icon(value);
  // @@protoc_insertion_point(field_set:treasureBox.TreasureBoxRewardContent.icon)
}
inline std::string* TreasureBoxRewardContent::mutable_icon() {
  // @@protoc_insertion_point(field_mutable:treasureBox.TreasureBoxRewardContent.icon)
  return _internal_mutable_icon();
}
inline const std::string& TreasureBoxRewardContent::_internal_icon() const {
  return icon_.GetNoArena();
}
inline void TreasureBoxRewardContent::_internal_set_icon(const std::string& value) {
  
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void TreasureBoxRewardContent::set_icon(std::string&& value) {
  
  icon_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:treasureBox.TreasureBoxRewardContent.icon)
}
inline void TreasureBoxRewardContent::set_icon(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:treasureBox.TreasureBoxRewardContent.icon)
}
inline void TreasureBoxRewardContent::set_icon(const char* value, size_t size) {
  
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:treasureBox.TreasureBoxRewardContent.icon)
}
inline std::string* TreasureBoxRewardContent::_internal_mutable_icon() {
  
  return icon_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TreasureBoxRewardContent::release_icon() {
  // @@protoc_insertion_point(field_release:treasureBox.TreasureBoxRewardContent.icon)
  
  return icon_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TreasureBoxRewardContent::set_allocated_icon(std::string* icon) {
  if (icon != nullptr) {
    
  } else {
    
  }
  icon_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:treasureBox.TreasureBoxRewardContent.icon)
}

// -------------------------------------------------------------------

// SpaceTreasureBoxInfo

// int32 treasureBoxType = 1;
inline void SpaceTreasureBoxInfo::clear_treasureboxtype() {
  treasureboxtype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceTreasureBoxInfo::_internal_treasureboxtype() const {
  return treasureboxtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpaceTreasureBoxInfo::treasureboxtype() const {
  // @@protoc_insertion_point(field_get:treasureBox.SpaceTreasureBoxInfo.treasureBoxType)
  return _internal_treasureboxtype();
}
inline void SpaceTreasureBoxInfo::_internal_set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  treasureboxtype_ = value;
}
inline void SpaceTreasureBoxInfo::set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_treasureboxtype(value);
  // @@protoc_insertion_point(field_set:treasureBox.SpaceTreasureBoxInfo.treasureBoxType)
}

// .vector.PVector3 position = 3;
inline bool SpaceTreasureBoxInfo::_internal_has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline bool SpaceTreasureBoxInfo::has_position() const {
  return _internal_has_position();
}
inline const ::vector::PVector3& SpaceTreasureBoxInfo::_internal_position() const {
  const ::vector::PVector3* p = position_;
  return p != nullptr ? *p : *reinterpret_cast<const ::vector::PVector3*>(
      &::vector::_PVector3_default_instance_);
}
inline const ::vector::PVector3& SpaceTreasureBoxInfo::position() const {
  // @@protoc_insertion_point(field_get:treasureBox.SpaceTreasureBoxInfo.position)
  return _internal_position();
}
inline ::vector::PVector3* SpaceTreasureBoxInfo::release_position() {
  // @@protoc_insertion_point(field_release:treasureBox.SpaceTreasureBoxInfo.position)
  
  ::vector::PVector3* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::vector::PVector3* SpaceTreasureBoxInfo::_internal_mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::vector::PVector3>(GetArenaNoVirtual());
    position_ = p;
  }
  return position_;
}
inline ::vector::PVector3* SpaceTreasureBoxInfo::mutable_position() {
  // @@protoc_insertion_point(field_mutable:treasureBox.SpaceTreasureBoxInfo.position)
  return _internal_mutable_position();
}
inline void SpaceTreasureBoxInfo::set_allocated_position(::vector::PVector3* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:treasureBox.SpaceTreasureBoxInfo.position)
}

// -------------------------------------------------------------------

// SSpaceTreasureBoxRefreshNotice

// int32 treasureBoxType = 1;
inline void SSpaceTreasureBoxRefreshNotice::clear_treasureboxtype() {
  treasureboxtype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SSpaceTreasureBoxRefreshNotice::_internal_treasureboxtype() const {
  return treasureboxtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SSpaceTreasureBoxRefreshNotice::treasureboxtype() const {
  // @@protoc_insertion_point(field_get:treasureBox.SSpaceTreasureBoxRefreshNotice.treasureBoxType)
  return _internal_treasureboxtype();
}
inline void SSpaceTreasureBoxRefreshNotice::_internal_set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  treasureboxtype_ = value;
}
inline void SSpaceTreasureBoxRefreshNotice::set_treasureboxtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_treasureboxtype(value);
  // @@protoc_insertion_point(field_set:treasureBox.SSpaceTreasureBoxRefreshNotice.treasureBoxType)
}

// .vector.PVector3 position = 3;
inline bool SSpaceTreasureBoxRefreshNotice::_internal_has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline bool SSpaceTreasureBoxRefreshNotice::has_position() const {
  return _internal_has_position();
}
inline const ::vector::PVector3& SSpaceTreasureBoxRefreshNotice::_internal_position() const {
  const ::vector::PVector3* p = position_;
  return p != nullptr ? *p : *reinterpret_cast<const ::vector::PVector3*>(
      &::vector::_PVector3_default_instance_);
}
inline const ::vector::PVector3& SSpaceTreasureBoxRefreshNotice::position() const {
  // @@protoc_insertion_point(field_get:treasureBox.SSpaceTreasureBoxRefreshNotice.position)
  return _internal_position();
}
inline ::vector::PVector3* SSpaceTreasureBoxRefreshNotice::release_position() {
  // @@protoc_insertion_point(field_release:treasureBox.SSpaceTreasureBoxRefreshNotice.position)
  
  ::vector::PVector3* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::vector::PVector3* SSpaceTreasureBoxRefreshNotice::_internal_mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::vector::PVector3>(GetArenaNoVirtual());
    position_ = p;
  }
  return position_;
}
inline ::vector::PVector3* SSpaceTreasureBoxRefreshNotice::mutable_position() {
  // @@protoc_insertion_point(field_mutable:treasureBox.SSpaceTreasureBoxRefreshNotice.position)
  return _internal_mutable_position();
}
inline void SSpaceTreasureBoxRefreshNotice::set_allocated_position(::vector::PVector3* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:treasureBox.SSpaceTreasureBoxRefreshNotice.position)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace treasureBox

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_treasureBox_2eproto
