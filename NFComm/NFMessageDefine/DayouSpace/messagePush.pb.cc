// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messagePush.proto

#include "messagePush.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace push {
class CPushUserStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CPushUserStatus> _instance;
} _CPushUserStatus_default_instance_;
class SPushUserStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SPushUserStatus> _instance;
} _SPushUserStatus_default_instance_;
class SPushUserOnlineMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SPushUserOnlineMessage> _instance;
} _SPushUserOnlineMessage_default_instance_;
class SPushSpaceMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SPushSpaceMessage> _instance;
} _SPushSpaceMessage_default_instance_;
class SPushMjLeaveMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SPushMjLeaveMsg> _instance;
} _SPushMjLeaveMsg_default_instance_;
}  // namespace push
static void InitDefaultsscc_info_CPushUserStatus_messagePush_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::push::_CPushUserStatus_default_instance_;
    new (ptr) ::push::CPushUserStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::push::CPushUserStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CPushUserStatus_messagePush_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CPushUserStatus_messagePush_2eproto}, {}};

static void InitDefaultsscc_info_SPushMjLeaveMsg_messagePush_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::push::_SPushMjLeaveMsg_default_instance_;
    new (ptr) ::push::SPushMjLeaveMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::push::SPushMjLeaveMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SPushMjLeaveMsg_messagePush_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SPushMjLeaveMsg_messagePush_2eproto}, {}};

static void InitDefaultsscc_info_SPushSpaceMessage_messagePush_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::push::_SPushSpaceMessage_default_instance_;
    new (ptr) ::push::SPushSpaceMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::push::SPushSpaceMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SPushSpaceMessage_messagePush_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SPushSpaceMessage_messagePush_2eproto}, {}};

static void InitDefaultsscc_info_SPushUserOnlineMessage_messagePush_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::push::_SPushUserOnlineMessage_default_instance_;
    new (ptr) ::push::SPushUserOnlineMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::push::SPushUserOnlineMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SPushUserOnlineMessage_messagePush_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SPushUserOnlineMessage_messagePush_2eproto}, {}};

static void InitDefaultsscc_info_SPushUserStatus_messagePush_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::push::_SPushUserStatus_default_instance_;
    new (ptr) ::push::SPushUserStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::push::SPushUserStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SPushUserStatus_messagePush_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SPushUserStatus_messagePush_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_messagePush_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_messagePush_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_messagePush_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_messagePush_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::push::CPushUserStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::push::CPushUserStatus, uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::push::SPushUserStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::push::SPushUserStatus, userstatus_),
  PROTOBUF_FIELD_OFFSET(::push::SPushUserStatus, houseid_),
  PROTOBUF_FIELD_OFFSET(::push::SPushUserStatus, housetype_),
  PROTOBUF_FIELD_OFFSET(::push::SPushUserStatus, seq_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::push::SPushUserOnlineMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::push::SPushUserOnlineMessage, msgtype_),
  PROTOBUF_FIELD_OFFSET(::push::SPushUserOnlineMessage, uid_),
  PROTOBUF_FIELD_OFFSET(::push::SPushUserOnlineMessage, nick_),
  PROTOBUF_FIELD_OFFSET(::push::SPushUserOnlineMessage, headpic_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::push::SPushSpaceMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::push::SPushSpaceMessage, msgtype_),
  PROTOBUF_FIELD_OFFSET(::push::SPushSpaceMessage, housetype_),
  PROTOBUF_FIELD_OFFSET(::push::SPushSpaceMessage, houseid_),
  PROTOBUF_FIELD_OFFSET(::push::SPushSpaceMessage, innertitle_),
  PROTOBUF_FIELD_OFFSET(::push::SPushSpaceMessage, innerimg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::push::SPushMjLeaveMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::push::SPushMjLeaveMsg, msgtype_),
  PROTOBUF_FIELD_OFFSET(::push::SPushMjLeaveMsg, housetype_),
  PROTOBUF_FIELD_OFFSET(::push::SPushMjLeaveMsg, houseid_),
  PROTOBUF_FIELD_OFFSET(::push::SPushMjLeaveMsg, innertitle_),
  PROTOBUF_FIELD_OFFSET(::push::SPushMjLeaveMsg, innerimg_),
  PROTOBUF_FIELD_OFFSET(::push::SPushMjLeaveMsg, leavemsgid_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::push::CPushUserStatus)},
  { 6, -1, sizeof(::push::SPushUserStatus)},
  { 15, -1, sizeof(::push::SPushUserOnlineMessage)},
  { 24, -1, sizeof(::push::SPushSpaceMessage)},
  { 34, -1, sizeof(::push::SPushMjLeaveMsg)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::push::_CPushUserStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::push::_SPushUserStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::push::_SPushUserOnlineMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::push::_SPushSpaceMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::push::_SPushMjLeaveMsg_default_instance_),
};

const char descriptor_table_protodef_messagePush_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021messagePush.proto\022\004push\"\036\n\017CPushUserSt"
  "atus\022\013\n\003uid\030\001 \001(\005\"V\n\017SPushUserStatus\022\022\n\n"
  "userStatus\030\001 \001(\005\022\017\n\007houseId\030\002 \001(\005\022\021\n\thou"
  "seType\030\003 \001(\005\022\013\n\003seq\030\004 \001(\005\"U\n\026SPushUserOn"
  "lineMessage\022\017\n\007msgType\030\001 \001(\005\022\013\n\003uid\030\002 \001("
  "\005\022\014\n\004nick\030\003 \001(\t\022\017\n\007headPic\030\004 \001(\t\"n\n\021SPus"
  "hSpaceMessage\022\017\n\007msgType\030\001 \001(\005\022\021\n\thouseT"
  "ype\030\002 \001(\005\022\017\n\007houseId\030\003 \001(\005\022\022\n\ninnerTitle"
  "\030\004 \001(\t\022\020\n\010innerImg\030\005 \001(\t\"\200\001\n\017SPushMjLeav"
  "eMsg\022\017\n\007msgType\030\001 \001(\005\022\021\n\thouseType\030\002 \001(\005"
  "\022\017\n\007houseId\030\003 \001(\005\022\022\n\ninnerTitle\030\004 \001(\t\022\020\n"
  "\010innerImg\030\005 \001(\t\022\022\n\nleaveMsgId\030\006 \001(\005B0\n\030c"
  "om.dayou.space.protobufB\013MessagePushZ\007./"
  "pb;pbb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_messagePush_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_messagePush_2eproto_sccs[5] = {
  &scc_info_CPushUserStatus_messagePush_2eproto.base,
  &scc_info_SPushMjLeaveMsg_messagePush_2eproto.base,
  &scc_info_SPushSpaceMessage_messagePush_2eproto.base,
  &scc_info_SPushUserOnlineMessage_messagePush_2eproto.base,
  &scc_info_SPushUserStatus_messagePush_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_messagePush_2eproto_once;
static bool descriptor_table_messagePush_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_messagePush_2eproto = {
  &descriptor_table_messagePush_2eproto_initialized, descriptor_table_protodef_messagePush_2eproto, "messagePush.proto", 533,
  &descriptor_table_messagePush_2eproto_once, descriptor_table_messagePush_2eproto_sccs, descriptor_table_messagePush_2eproto_deps, 5, 0,
  schemas, file_default_instances, TableStruct_messagePush_2eproto::offsets,
  file_level_metadata_messagePush_2eproto, 5, file_level_enum_descriptors_messagePush_2eproto, file_level_service_descriptors_messagePush_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_messagePush_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_messagePush_2eproto), true);
namespace push {

// ===================================================================

void CPushUserStatus::InitAsDefaultInstance() {
}
class CPushUserStatus::_Internal {
 public:
};

CPushUserStatus::CPushUserStatus()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:push.CPushUserStatus)
}
CPushUserStatus::CPushUserStatus(const CPushUserStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:push.CPushUserStatus)
}

void CPushUserStatus::SharedCtor() {
  uid_ = 0;
}

CPushUserStatus::~CPushUserStatus() {
  // @@protoc_insertion_point(destructor:push.CPushUserStatus)
  SharedDtor();
}

void CPushUserStatus::SharedDtor() {
}

void CPushUserStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CPushUserStatus& CPushUserStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CPushUserStatus_messagePush_2eproto.base);
  return *internal_default_instance();
}


void CPushUserStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:push.CPushUserStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = 0;
  _internal_metadata_.Clear();
}

const char* CPushUserStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPushUserStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:push.CPushUserStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:push.CPushUserStatus)
  return target;
}

size_t CPushUserStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:push.CPushUserStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPushUserStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:push.CPushUserStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CPushUserStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPushUserStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:push.CPushUserStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:push.CPushUserStatus)
    MergeFrom(*source);
  }
}

void CPushUserStatus::MergeFrom(const CPushUserStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:push.CPushUserStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
}

void CPushUserStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:push.CPushUserStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPushUserStatus::CopyFrom(const CPushUserStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:push.CPushUserStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPushUserStatus::IsInitialized() const {
  return true;
}

void CPushUserStatus::InternalSwap(CPushUserStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(uid_, other->uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CPushUserStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SPushUserStatus::InitAsDefaultInstance() {
}
class SPushUserStatus::_Internal {
 public:
};

SPushUserStatus::SPushUserStatus()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:push.SPushUserStatus)
}
SPushUserStatus::SPushUserStatus(const SPushUserStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userstatus_, &from.userstatus_,
    static_cast<size_t>(reinterpret_cast<char*>(&seq_) -
    reinterpret_cast<char*>(&userstatus_)) + sizeof(seq_));
  // @@protoc_insertion_point(copy_constructor:push.SPushUserStatus)
}

void SPushUserStatus::SharedCtor() {
  ::memset(&userstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seq_) -
      reinterpret_cast<char*>(&userstatus_)) + sizeof(seq_));
}

SPushUserStatus::~SPushUserStatus() {
  // @@protoc_insertion_point(destructor:push.SPushUserStatus)
  SharedDtor();
}

void SPushUserStatus::SharedDtor() {
}

void SPushUserStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SPushUserStatus& SPushUserStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SPushUserStatus_messagePush_2eproto.base);
  return *internal_default_instance();
}


void SPushUserStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:push.SPushUserStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&userstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seq_) -
      reinterpret_cast<char*>(&userstatus_)) + sizeof(seq_));
  _internal_metadata_.Clear();
}

const char* SPushUserStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 userStatus = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          userstatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 houseId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          houseid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 houseType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          housetype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 seq = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SPushUserStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:push.SPushUserStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 userStatus = 1;
  if (this->userstatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_userstatus(), target);
  }

  // int32 houseId = 2;
  if (this->houseid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_houseid(), target);
  }

  // int32 houseType = 3;
  if (this->housetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_housetype(), target);
  }

  // int32 seq = 4;
  if (this->seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_seq(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:push.SPushUserStatus)
  return target;
}

size_t SPushUserStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:push.SPushUserStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 userStatus = 1;
  if (this->userstatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_userstatus());
  }

  // int32 houseId = 2;
  if (this->houseid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_houseid());
  }

  // int32 houseType = 3;
  if (this->housetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_housetype());
  }

  // int32 seq = 4;
  if (this->seq() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_seq());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SPushUserStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:push.SPushUserStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const SPushUserStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SPushUserStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:push.SPushUserStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:push.SPushUserStatus)
    MergeFrom(*source);
  }
}

void SPushUserStatus::MergeFrom(const SPushUserStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:push.SPushUserStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userstatus() != 0) {
    _internal_set_userstatus(from._internal_userstatus());
  }
  if (from.houseid() != 0) {
    _internal_set_houseid(from._internal_houseid());
  }
  if (from.housetype() != 0) {
    _internal_set_housetype(from._internal_housetype());
  }
  if (from.seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
}

void SPushUserStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:push.SPushUserStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SPushUserStatus::CopyFrom(const SPushUserStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:push.SPushUserStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SPushUserStatus::IsInitialized() const {
  return true;
}

void SPushUserStatus::InternalSwap(SPushUserStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(userstatus_, other->userstatus_);
  swap(houseid_, other->houseid_);
  swap(housetype_, other->housetype_);
  swap(seq_, other->seq_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SPushUserStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SPushUserOnlineMessage::InitAsDefaultInstance() {
}
class SPushUserOnlineMessage::_Internal {
 public:
};

SPushUserOnlineMessage::SPushUserOnlineMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:push.SPushUserOnlineMessage)
}
SPushUserOnlineMessage::SPushUserOnlineMessage(const SPushUserOnlineMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nick_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nick().empty()) {
    nick_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  headpic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_headpic().empty()) {
    headpic_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.headpic_);
  }
  ::memcpy(&msgtype_, &from.msgtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&msgtype_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:push.SPushUserOnlineMessage)
}

void SPushUserOnlineMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SPushUserOnlineMessage_messagePush_2eproto.base);
  nick_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  headpic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&msgtype_)) + sizeof(uid_));
}

SPushUserOnlineMessage::~SPushUserOnlineMessage() {
  // @@protoc_insertion_point(destructor:push.SPushUserOnlineMessage)
  SharedDtor();
}

void SPushUserOnlineMessage::SharedDtor() {
  nick_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  headpic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SPushUserOnlineMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SPushUserOnlineMessage& SPushUserOnlineMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SPushUserOnlineMessage_messagePush_2eproto.base);
  return *internal_default_instance();
}


void SPushUserOnlineMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:push.SPushUserOnlineMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nick_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  headpic_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&msgtype_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

const char* SPushUserOnlineMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 msgType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          msgtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string nick = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_nick();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "push.SPushUserOnlineMessage.nick"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string headPic = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_headpic();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "push.SPushUserOnlineMessage.headPic"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SPushUserOnlineMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:push.SPushUserOnlineMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 msgType = 1;
  if (this->msgtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_msgtype(), target);
  }

  // int32 uid = 2;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_uid(), target);
  }

  // string nick = 3;
  if (this->nick().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nick().data(), static_cast<int>(this->_internal_nick().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "push.SPushUserOnlineMessage.nick");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_nick(), target);
  }

  // string headPic = 4;
  if (this->headpic().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_headpic().data(), static_cast<int>(this->_internal_headpic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "push.SPushUserOnlineMessage.headPic");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_headpic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:push.SPushUserOnlineMessage)
  return target;
}

size_t SPushUserOnlineMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:push.SPushUserOnlineMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nick = 3;
  if (this->nick().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nick());
  }

  // string headPic = 4;
  if (this->headpic().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_headpic());
  }

  // int32 msgType = 1;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_msgtype());
  }

  // int32 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SPushUserOnlineMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:push.SPushUserOnlineMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SPushUserOnlineMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SPushUserOnlineMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:push.SPushUserOnlineMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:push.SPushUserOnlineMessage)
    MergeFrom(*source);
  }
}

void SPushUserOnlineMessage::MergeFrom(const SPushUserOnlineMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:push.SPushUserOnlineMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nick().size() > 0) {

    nick_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  if (from.headpic().size() > 0) {

    headpic_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.headpic_);
  }
  if (from.msgtype() != 0) {
    _internal_set_msgtype(from._internal_msgtype());
  }
  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
}

void SPushUserOnlineMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:push.SPushUserOnlineMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SPushUserOnlineMessage::CopyFrom(const SPushUserOnlineMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:push.SPushUserOnlineMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SPushUserOnlineMessage::IsInitialized() const {
  return true;
}

void SPushUserOnlineMessage::InternalSwap(SPushUserOnlineMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  nick_.Swap(&other->nick_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  headpic_.Swap(&other->headpic_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtype_, other->msgtype_);
  swap(uid_, other->uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SPushUserOnlineMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SPushSpaceMessage::InitAsDefaultInstance() {
}
class SPushSpaceMessage::_Internal {
 public:
};

SPushSpaceMessage::SPushSpaceMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:push.SPushSpaceMessage)
}
SPushSpaceMessage::SPushSpaceMessage(const SPushSpaceMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  innertitle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_innertitle().empty()) {
    innertitle_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.innertitle_);
  }
  innerimg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_innerimg().empty()) {
    innerimg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.innerimg_);
  }
  ::memcpy(&msgtype_, &from.msgtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&houseid_) -
    reinterpret_cast<char*>(&msgtype_)) + sizeof(houseid_));
  // @@protoc_insertion_point(copy_constructor:push.SPushSpaceMessage)
}

void SPushSpaceMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SPushSpaceMessage_messagePush_2eproto.base);
  innertitle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  innerimg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&houseid_) -
      reinterpret_cast<char*>(&msgtype_)) + sizeof(houseid_));
}

SPushSpaceMessage::~SPushSpaceMessage() {
  // @@protoc_insertion_point(destructor:push.SPushSpaceMessage)
  SharedDtor();
}

void SPushSpaceMessage::SharedDtor() {
  innertitle_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  innerimg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SPushSpaceMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SPushSpaceMessage& SPushSpaceMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SPushSpaceMessage_messagePush_2eproto.base);
  return *internal_default_instance();
}


void SPushSpaceMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:push.SPushSpaceMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  innertitle_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  innerimg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&houseid_) -
      reinterpret_cast<char*>(&msgtype_)) + sizeof(houseid_));
  _internal_metadata_.Clear();
}

const char* SPushSpaceMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 msgType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          msgtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 houseType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          housetype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 houseId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          houseid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string innerTitle = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_innertitle();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "push.SPushSpaceMessage.innerTitle"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string innerImg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_innerimg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "push.SPushSpaceMessage.innerImg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SPushSpaceMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:push.SPushSpaceMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 msgType = 1;
  if (this->msgtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_msgtype(), target);
  }

  // int32 houseType = 2;
  if (this->housetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_housetype(), target);
  }

  // int32 houseId = 3;
  if (this->houseid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_houseid(), target);
  }

  // string innerTitle = 4;
  if (this->innertitle().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_innertitle().data(), static_cast<int>(this->_internal_innertitle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "push.SPushSpaceMessage.innerTitle");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_innertitle(), target);
  }

  // string innerImg = 5;
  if (this->innerimg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_innerimg().data(), static_cast<int>(this->_internal_innerimg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "push.SPushSpaceMessage.innerImg");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_innerimg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:push.SPushSpaceMessage)
  return target;
}

size_t SPushSpaceMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:push.SPushSpaceMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string innerTitle = 4;
  if (this->innertitle().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_innertitle());
  }

  // string innerImg = 5;
  if (this->innerimg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_innerimg());
  }

  // int32 msgType = 1;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_msgtype());
  }

  // int32 houseType = 2;
  if (this->housetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_housetype());
  }

  // int32 houseId = 3;
  if (this->houseid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_houseid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SPushSpaceMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:push.SPushSpaceMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SPushSpaceMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SPushSpaceMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:push.SPushSpaceMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:push.SPushSpaceMessage)
    MergeFrom(*source);
  }
}

void SPushSpaceMessage::MergeFrom(const SPushSpaceMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:push.SPushSpaceMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.innertitle().size() > 0) {

    innertitle_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.innertitle_);
  }
  if (from.innerimg().size() > 0) {

    innerimg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.innerimg_);
  }
  if (from.msgtype() != 0) {
    _internal_set_msgtype(from._internal_msgtype());
  }
  if (from.housetype() != 0) {
    _internal_set_housetype(from._internal_housetype());
  }
  if (from.houseid() != 0) {
    _internal_set_houseid(from._internal_houseid());
  }
}

void SPushSpaceMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:push.SPushSpaceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SPushSpaceMessage::CopyFrom(const SPushSpaceMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:push.SPushSpaceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SPushSpaceMessage::IsInitialized() const {
  return true;
}

void SPushSpaceMessage::InternalSwap(SPushSpaceMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  innertitle_.Swap(&other->innertitle_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  innerimg_.Swap(&other->innerimg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtype_, other->msgtype_);
  swap(housetype_, other->housetype_);
  swap(houseid_, other->houseid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SPushSpaceMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SPushMjLeaveMsg::InitAsDefaultInstance() {
}
class SPushMjLeaveMsg::_Internal {
 public:
};

SPushMjLeaveMsg::SPushMjLeaveMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:push.SPushMjLeaveMsg)
}
SPushMjLeaveMsg::SPushMjLeaveMsg(const SPushMjLeaveMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  innertitle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_innertitle().empty()) {
    innertitle_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.innertitle_);
  }
  innerimg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_innerimg().empty()) {
    innerimg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.innerimg_);
  }
  ::memcpy(&msgtype_, &from.msgtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&leavemsgid_) -
    reinterpret_cast<char*>(&msgtype_)) + sizeof(leavemsgid_));
  // @@protoc_insertion_point(copy_constructor:push.SPushMjLeaveMsg)
}

void SPushMjLeaveMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SPushMjLeaveMsg_messagePush_2eproto.base);
  innertitle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  innerimg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leavemsgid_) -
      reinterpret_cast<char*>(&msgtype_)) + sizeof(leavemsgid_));
}

SPushMjLeaveMsg::~SPushMjLeaveMsg() {
  // @@protoc_insertion_point(destructor:push.SPushMjLeaveMsg)
  SharedDtor();
}

void SPushMjLeaveMsg::SharedDtor() {
  innertitle_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  innerimg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SPushMjLeaveMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SPushMjLeaveMsg& SPushMjLeaveMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SPushMjLeaveMsg_messagePush_2eproto.base);
  return *internal_default_instance();
}


void SPushMjLeaveMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:push.SPushMjLeaveMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  innertitle_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  innerimg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leavemsgid_) -
      reinterpret_cast<char*>(&msgtype_)) + sizeof(leavemsgid_));
  _internal_metadata_.Clear();
}

const char* SPushMjLeaveMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 msgType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          msgtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 houseType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          housetype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 houseId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          houseid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string innerTitle = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_innertitle();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "push.SPushMjLeaveMsg.innerTitle"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string innerImg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_innerimg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "push.SPushMjLeaveMsg.innerImg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 leaveMsgId = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          leavemsgid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SPushMjLeaveMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:push.SPushMjLeaveMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 msgType = 1;
  if (this->msgtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_msgtype(), target);
  }

  // int32 houseType = 2;
  if (this->housetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_housetype(), target);
  }

  // int32 houseId = 3;
  if (this->houseid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_houseid(), target);
  }

  // string innerTitle = 4;
  if (this->innertitle().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_innertitle().data(), static_cast<int>(this->_internal_innertitle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "push.SPushMjLeaveMsg.innerTitle");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_innertitle(), target);
  }

  // string innerImg = 5;
  if (this->innerimg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_innerimg().data(), static_cast<int>(this->_internal_innerimg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "push.SPushMjLeaveMsg.innerImg");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_innerimg(), target);
  }

  // int32 leaveMsgId = 6;
  if (this->leavemsgid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_leavemsgid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:push.SPushMjLeaveMsg)
  return target;
}

size_t SPushMjLeaveMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:push.SPushMjLeaveMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string innerTitle = 4;
  if (this->innertitle().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_innertitle());
  }

  // string innerImg = 5;
  if (this->innerimg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_innerimg());
  }

  // int32 msgType = 1;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_msgtype());
  }

  // int32 houseType = 2;
  if (this->housetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_housetype());
  }

  // int32 houseId = 3;
  if (this->houseid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_houseid());
  }

  // int32 leaveMsgId = 6;
  if (this->leavemsgid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_leavemsgid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SPushMjLeaveMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:push.SPushMjLeaveMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SPushMjLeaveMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SPushMjLeaveMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:push.SPushMjLeaveMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:push.SPushMjLeaveMsg)
    MergeFrom(*source);
  }
}

void SPushMjLeaveMsg::MergeFrom(const SPushMjLeaveMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:push.SPushMjLeaveMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.innertitle().size() > 0) {

    innertitle_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.innertitle_);
  }
  if (from.innerimg().size() > 0) {

    innerimg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.innerimg_);
  }
  if (from.msgtype() != 0) {
    _internal_set_msgtype(from._internal_msgtype());
  }
  if (from.housetype() != 0) {
    _internal_set_housetype(from._internal_housetype());
  }
  if (from.houseid() != 0) {
    _internal_set_houseid(from._internal_houseid());
  }
  if (from.leavemsgid() != 0) {
    _internal_set_leavemsgid(from._internal_leavemsgid());
  }
}

void SPushMjLeaveMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:push.SPushMjLeaveMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SPushMjLeaveMsg::CopyFrom(const SPushMjLeaveMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:push.SPushMjLeaveMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SPushMjLeaveMsg::IsInitialized() const {
  return true;
}

void SPushMjLeaveMsg::InternalSwap(SPushMjLeaveMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  innertitle_.Swap(&other->innertitle_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  innerimg_.Swap(&other->innerimg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtype_, other->msgtype_);
  swap(housetype_, other->housetype_);
  swap(houseid_, other->houseid_);
  swap(leavemsgid_, other->leavemsgid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SPushMjLeaveMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace push
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::push::CPushUserStatus* Arena::CreateMaybeMessage< ::push::CPushUserStatus >(Arena* arena) {
  return Arena::CreateInternal< ::push::CPushUserStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::push::SPushUserStatus* Arena::CreateMaybeMessage< ::push::SPushUserStatus >(Arena* arena) {
  return Arena::CreateInternal< ::push::SPushUserStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::push::SPushUserOnlineMessage* Arena::CreateMaybeMessage< ::push::SPushUserOnlineMessage >(Arena* arena) {
  return Arena::CreateInternal< ::push::SPushUserOnlineMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::push::SPushSpaceMessage* Arena::CreateMaybeMessage< ::push::SPushSpaceMessage >(Arena* arena) {
  return Arena::CreateInternal< ::push::SPushSpaceMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::push::SPushMjLeaveMsg* Arena::CreateMaybeMessage< ::push::SPushMjLeaveMsg >(Arena* arena) {
  return Arena::CreateInternal< ::push::SPushMjLeaveMsg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
