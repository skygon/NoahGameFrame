// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buyGoods.proto

#include "buyGoods.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_buyGoods_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_thinBackInfo_buyGoods_2eproto;
namespace pb {
class thinBackInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<thinBackInfo> _instance;
} _thinBackInfo_default_instance_;
class CBuyGoodsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CBuyGoods> _instance;
} _CBuyGoods_default_instance_;
class SBuyGoodsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SBuyGoods> _instance;
} _SBuyGoods_default_instance_;
}  // namespace pb
static void InitDefaultsscc_info_CBuyGoods_buyGoods_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CBuyGoods_default_instance_;
    new (ptr) ::pb::CBuyGoods();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CBuyGoods::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CBuyGoods_buyGoods_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CBuyGoods_buyGoods_2eproto}, {}};

static void InitDefaultsscc_info_SBuyGoods_buyGoods_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SBuyGoods_default_instance_;
    new (ptr) ::pb::SBuyGoods();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::SBuyGoods::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SBuyGoods_buyGoods_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SBuyGoods_buyGoods_2eproto}, {
      &scc_info_thinBackInfo_buyGoods_2eproto.base,}};

static void InitDefaultsscc_info_thinBackInfo_buyGoods_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_thinBackInfo_default_instance_;
    new (ptr) ::pb::thinBackInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::thinBackInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_thinBackInfo_buyGoods_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_thinBackInfo_buyGoods_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_buyGoods_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_buyGoods_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_buyGoods_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_buyGoods_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::thinBackInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::thinBackInfo, shopgoodsid_),
  PROTOBUF_FIELD_OFFSET(::pb::thinBackInfo, thinkbackid_),
  PROTOBUF_FIELD_OFFSET(::pb::thinBackInfo, scenesbackid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CBuyGoods, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::CBuyGoods, goodslist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SBuyGoods, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SBuyGoods, msg_),
  PROTOBUF_FIELD_OFFSET(::pb::SBuyGoods, result_),
  PROTOBUF_FIELD_OFFSET(::pb::SBuyGoods, info_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::thinBackInfo)},
  { 8, -1, sizeof(::pb::CBuyGoods)},
  { 14, -1, sizeof(::pb::SBuyGoods)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_thinBackInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_CBuyGoods_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SBuyGoods_default_instance_),
};

const char descriptor_table_protodef_buyGoods_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016buyGoods.proto\022\002pb\"N\n\014thinBackInfo\022\023\n\013"
  "shopGoodsId\030\001 \001(\005\022\023\n\013thinkBackId\030\002 \001(\005\022\024"
  "\n\014scenesBackId\030\003 \001(\005\"\036\n\tCBuyGoods\022\021\n\tgoo"
  "dsList\030\001 \003(\005\"H\n\tSBuyGoods\022\013\n\003msg\030\001 \001(\t\022\016"
  "\n\006result\030\002 \001(\010\022\036\n\004info\030\003 \003(\0132\020.pb.thinBa"
  "ckInfoB-\n\030com.dayou.space.protobufB\010BuyG"
  "oodsZ\002./\252\002\002Pbb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_buyGoods_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_buyGoods_2eproto_sccs[3] = {
  &scc_info_CBuyGoods_buyGoods_2eproto.base,
  &scc_info_SBuyGoods_buyGoods_2eproto.base,
  &scc_info_thinBackInfo_buyGoods_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_buyGoods_2eproto_once;
static bool descriptor_table_buyGoods_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_buyGoods_2eproto = {
  &descriptor_table_buyGoods_2eproto_initialized, descriptor_table_protodef_buyGoods_2eproto, "buyGoods.proto", 261,
  &descriptor_table_buyGoods_2eproto_once, descriptor_table_buyGoods_2eproto_sccs, descriptor_table_buyGoods_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_buyGoods_2eproto::offsets,
  file_level_metadata_buyGoods_2eproto, 3, file_level_enum_descriptors_buyGoods_2eproto, file_level_service_descriptors_buyGoods_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_buyGoods_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_buyGoods_2eproto), true);
namespace pb {

// ===================================================================

void thinBackInfo::InitAsDefaultInstance() {
}
class thinBackInfo::_Internal {
 public:
};

thinBackInfo::thinBackInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.thinBackInfo)
}
thinBackInfo::thinBackInfo(const thinBackInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shopgoodsid_, &from.shopgoodsid_,
    static_cast<size_t>(reinterpret_cast<char*>(&scenesbackid_) -
    reinterpret_cast<char*>(&shopgoodsid_)) + sizeof(scenesbackid_));
  // @@protoc_insertion_point(copy_constructor:pb.thinBackInfo)
}

void thinBackInfo::SharedCtor() {
  ::memset(&shopgoodsid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scenesbackid_) -
      reinterpret_cast<char*>(&shopgoodsid_)) + sizeof(scenesbackid_));
}

thinBackInfo::~thinBackInfo() {
  // @@protoc_insertion_point(destructor:pb.thinBackInfo)
  SharedDtor();
}

void thinBackInfo::SharedDtor() {
}

void thinBackInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const thinBackInfo& thinBackInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_thinBackInfo_buyGoods_2eproto.base);
  return *internal_default_instance();
}


void thinBackInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.thinBackInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&shopgoodsid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scenesbackid_) -
      reinterpret_cast<char*>(&shopgoodsid_)) + sizeof(scenesbackid_));
  _internal_metadata_.Clear();
}

const char* thinBackInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 shopGoodsId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          shopgoodsid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 thinkBackId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          thinkbackid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 scenesBackId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          scenesbackid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* thinBackInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.thinBackInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 shopGoodsId = 1;
  if (this->shopgoodsid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_shopgoodsid(), target);
  }

  // int32 thinkBackId = 2;
  if (this->thinkbackid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_thinkbackid(), target);
  }

  // int32 scenesBackId = 3;
  if (this->scenesbackid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_scenesbackid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.thinBackInfo)
  return target;
}

size_t thinBackInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.thinBackInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 shopGoodsId = 1;
  if (this->shopgoodsid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_shopgoodsid());
  }

  // int32 thinkBackId = 2;
  if (this->thinkbackid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_thinkbackid());
  }

  // int32 scenesBackId = 3;
  if (this->scenesbackid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_scenesbackid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void thinBackInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.thinBackInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const thinBackInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<thinBackInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.thinBackInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.thinBackInfo)
    MergeFrom(*source);
  }
}

void thinBackInfo::MergeFrom(const thinBackInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.thinBackInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shopgoodsid() != 0) {
    _internal_set_shopgoodsid(from._internal_shopgoodsid());
  }
  if (from.thinkbackid() != 0) {
    _internal_set_thinkbackid(from._internal_thinkbackid());
  }
  if (from.scenesbackid() != 0) {
    _internal_set_scenesbackid(from._internal_scenesbackid());
  }
}

void thinBackInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.thinBackInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void thinBackInfo::CopyFrom(const thinBackInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.thinBackInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool thinBackInfo::IsInitialized() const {
  return true;
}

void thinBackInfo::InternalSwap(thinBackInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(shopgoodsid_, other->shopgoodsid_);
  swap(thinkbackid_, other->thinkbackid_);
  swap(scenesbackid_, other->scenesbackid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata thinBackInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CBuyGoods::InitAsDefaultInstance() {
}
class CBuyGoods::_Internal {
 public:
};

CBuyGoods::CBuyGoods()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CBuyGoods)
}
CBuyGoods::CBuyGoods(const CBuyGoods& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      goodslist_(from.goodslist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.CBuyGoods)
}

void CBuyGoods::SharedCtor() {
}

CBuyGoods::~CBuyGoods() {
  // @@protoc_insertion_point(destructor:pb.CBuyGoods)
  SharedDtor();
}

void CBuyGoods::SharedDtor() {
}

void CBuyGoods::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CBuyGoods& CBuyGoods::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CBuyGoods_buyGoods_2eproto.base);
  return *internal_default_instance();
}


void CBuyGoods::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CBuyGoods)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  goodslist_.Clear();
  _internal_metadata_.Clear();
}

const char* CBuyGoods::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 goodsList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_goodslist(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_goodslist(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CBuyGoods::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CBuyGoods)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 goodsList = 1;
  {
    int byte_size = _goodslist_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_goodslist(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CBuyGoods)
  return target;
}

size_t CBuyGoods::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CBuyGoods)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 goodsList = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->goodslist_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _goodslist_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CBuyGoods::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CBuyGoods)
  GOOGLE_DCHECK_NE(&from, this);
  const CBuyGoods* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CBuyGoods>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CBuyGoods)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CBuyGoods)
    MergeFrom(*source);
  }
}

void CBuyGoods::MergeFrom(const CBuyGoods& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CBuyGoods)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  goodslist_.MergeFrom(from.goodslist_);
}

void CBuyGoods::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CBuyGoods)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CBuyGoods::CopyFrom(const CBuyGoods& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CBuyGoods)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CBuyGoods::IsInitialized() const {
  return true;
}

void CBuyGoods::InternalSwap(CBuyGoods* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  goodslist_.InternalSwap(&other->goodslist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CBuyGoods::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SBuyGoods::InitAsDefaultInstance() {
}
class SBuyGoods::_Internal {
 public:
};

SBuyGoods::SBuyGoods()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.SBuyGoods)
}
SBuyGoods::SBuyGoods(const SBuyGoods& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      info_(from.info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:pb.SBuyGoods)
}

void SBuyGoods::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SBuyGoods_buyGoods_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

SBuyGoods::~SBuyGoods() {
  // @@protoc_insertion_point(destructor:pb.SBuyGoods)
  SharedDtor();
}

void SBuyGoods::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SBuyGoods::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SBuyGoods& SBuyGoods::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SBuyGoods_buyGoods_2eproto.base);
  return *internal_default_instance();
}


void SBuyGoods::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SBuyGoods)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

const char* SBuyGoods::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string msg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.SBuyGoods.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .pb.thinBackInfo info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SBuyGoods::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SBuyGoods)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.SBuyGoods.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  // bool result = 2;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_result(), target);
  }

  // repeated .pb.thinBackInfo info = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_info_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_info(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SBuyGoods)
  return target;
}

size_t SBuyGoods::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SBuyGoods)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.thinBackInfo info = 3;
  total_size += 1UL * this->_internal_info_size();
  for (const auto& msg : this->info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // bool result = 2;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SBuyGoods::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SBuyGoods)
  GOOGLE_DCHECK_NE(&from, this);
  const SBuyGoods* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SBuyGoods>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SBuyGoods)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SBuyGoods)
    MergeFrom(*source);
  }
}

void SBuyGoods::MergeFrom(const SBuyGoods& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SBuyGoods)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SBuyGoods::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SBuyGoods)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SBuyGoods::CopyFrom(const SBuyGoods& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SBuyGoods)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SBuyGoods::IsInitialized() const {
  return true;
}

void SBuyGoods::InternalSwap(SBuyGoods* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  info_.InternalSwap(&other->info_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SBuyGoods::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::thinBackInfo* Arena::CreateMaybeMessage< ::pb::thinBackInfo >(Arena* arena) {
  return Arena::CreateInternal< ::pb::thinBackInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CBuyGoods* Arena::CreateMaybeMessage< ::pb::CBuyGoods >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CBuyGoods >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SBuyGoods* Arena::CreateMaybeMessage< ::pb::SBuyGoods >(Arena* arena) {
  return Arena::CreateInternal< ::pb::SBuyGoods >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
