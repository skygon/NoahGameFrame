// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: position.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_position_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_position_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_position_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_position_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_position_2eproto;
namespace position {
class BPosition;
class BPositionDefaultTypeInternal;
extern BPositionDefaultTypeInternal _BPosition_default_instance_;
class BPosition2;
class BPosition2DefaultTypeInternal;
extern BPosition2DefaultTypeInternal _BPosition2_default_instance_;
}  // namespace position
PROTOBUF_NAMESPACE_OPEN
template<> ::position::BPosition* Arena::CreateMaybeMessage<::position::BPosition>(Arena*);
template<> ::position::BPosition2* Arena::CreateMaybeMessage<::position::BPosition2>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace position {

// ===================================================================

class BPosition :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:position.BPosition) */ {
 public:
  BPosition();
  virtual ~BPosition();

  BPosition(const BPosition& from);
  BPosition(BPosition&& from) noexcept
    : BPosition() {
    *this = ::std::move(from);
  }

  inline BPosition& operator=(const BPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline BPosition& operator=(BPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BPosition* internal_default_instance() {
    return reinterpret_cast<const BPosition*>(
               &_BPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BPosition& a, BPosition& b) {
    a.Swap(&b);
  }
  inline void Swap(BPosition* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BPosition* New() const final {
    return CreateMaybeMessage<BPosition>(nullptr);
  }

  BPosition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BPosition>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BPosition& from);
  void MergeFrom(const BPosition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BPosition* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "position.BPosition";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_position_2eproto);
    return ::descriptor_table_position_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kPxFieldNumber = 4,
    kPyFieldNumber = 5,
    kPzFieldNumber = 6,
    kStickXFieldNumber = 7,
    kStickYFieldNumber = 8,
    kNameHashFieldNumber = 9,
    kNormalizedTimeFieldNumber = 10,
    kSpeedFieldNumber = 99,
  };
  // float x = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 3;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // float px = 4;
  void clear_px();
  float px() const;
  void set_px(float value);
  private:
  float _internal_px() const;
  void _internal_set_px(float value);
  public:

  // float py = 5;
  void clear_py();
  float py() const;
  void set_py(float value);
  private:
  float _internal_py() const;
  void _internal_set_py(float value);
  public:

  // float pz = 6;
  void clear_pz();
  float pz() const;
  void set_pz(float value);
  private:
  float _internal_pz() const;
  void _internal_set_pz(float value);
  public:

  // float stickX = 7;
  void clear_stickx();
  float stickx() const;
  void set_stickx(float value);
  private:
  float _internal_stickx() const;
  void _internal_set_stickx(float value);
  public:

  // float stickY = 8;
  void clear_sticky();
  float sticky() const;
  void set_sticky(float value);
  private:
  float _internal_sticky() const;
  void _internal_set_sticky(float value);
  public:

  // int32 nameHash = 9;
  void clear_namehash();
  ::PROTOBUF_NAMESPACE_ID::int32 namehash() const;
  void set_namehash(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_namehash() const;
  void _internal_set_namehash(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float normalizedTime = 10;
  void clear_normalizedtime();
  float normalizedtime() const;
  void set_normalizedtime(float value);
  private:
  float _internal_normalizedtime() const;
  void _internal_set_normalizedtime(float value);
  public:

  // float speed = 99;
  void clear_speed();
  float speed() const;
  void set_speed(float value);
  private:
  float _internal_speed() const;
  void _internal_set_speed(float value);
  public:

  // @@protoc_insertion_point(class_scope:position.BPosition)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  float px_;
  float py_;
  float pz_;
  float stickx_;
  float sticky_;
  ::PROTOBUF_NAMESPACE_ID::int32 namehash_;
  float normalizedtime_;
  float speed_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_position_2eproto;
};
// -------------------------------------------------------------------

class BPosition2 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:position.BPosition2) */ {
 public:
  BPosition2();
  virtual ~BPosition2();

  BPosition2(const BPosition2& from);
  BPosition2(BPosition2&& from) noexcept
    : BPosition2() {
    *this = ::std::move(from);
  }

  inline BPosition2& operator=(const BPosition2& from) {
    CopyFrom(from);
    return *this;
  }
  inline BPosition2& operator=(BPosition2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BPosition2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BPosition2* internal_default_instance() {
    return reinterpret_cast<const BPosition2*>(
               &_BPosition2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(BPosition2& a, BPosition2& b) {
    a.Swap(&b);
  }
  inline void Swap(BPosition2* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BPosition2* New() const final {
    return CreateMaybeMessage<BPosition2>(nullptr);
  }

  BPosition2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BPosition2>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BPosition2& from);
  void MergeFrom(const BPosition2& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BPosition2* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "position.BPosition2";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_position_2eproto);
    return ::descriptor_table_position_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kPxFieldNumber = 4,
    kPyFieldNumber = 5,
    kPzFieldNumber = 6,
    kStickXFieldNumber = 7,
    kStickYFieldNumber = 8,
    kNameHashFieldNumber = 9,
    kNormalizedTimeFieldNumber = 10,
    kSpeedFieldNumber = 99,
  };
  // int32 x = 1;
  void clear_x();
  ::PROTOBUF_NAMESPACE_ID::int32 x() const;
  void set_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_x() const;
  void _internal_set_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 y = 2;
  void clear_y();
  ::PROTOBUF_NAMESPACE_ID::int32 y() const;
  void set_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_y() const;
  void _internal_set_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 z = 3;
  void clear_z();
  ::PROTOBUF_NAMESPACE_ID::int32 z() const;
  void set_z(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_z() const;
  void _internal_set_z(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 px = 4;
  void clear_px();
  ::PROTOBUF_NAMESPACE_ID::int32 px() const;
  void set_px(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_px() const;
  void _internal_set_px(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 py = 5;
  void clear_py();
  ::PROTOBUF_NAMESPACE_ID::int32 py() const;
  void set_py(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_py() const;
  void _internal_set_py(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 pz = 6;
  void clear_pz();
  ::PROTOBUF_NAMESPACE_ID::int32 pz() const;
  void set_pz(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pz() const;
  void _internal_set_pz(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float stickX = 7;
  void clear_stickx();
  float stickx() const;
  void set_stickx(float value);
  private:
  float _internal_stickx() const;
  void _internal_set_stickx(float value);
  public:

  // float stickY = 8;
  void clear_sticky();
  float sticky() const;
  void set_sticky(float value);
  private:
  float _internal_sticky() const;
  void _internal_set_sticky(float value);
  public:

  // int32 nameHash = 9;
  void clear_namehash();
  ::PROTOBUF_NAMESPACE_ID::int32 namehash() const;
  void set_namehash(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_namehash() const;
  void _internal_set_namehash(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float normalizedTime = 10;
  void clear_normalizedtime();
  float normalizedtime() const;
  void set_normalizedtime(float value);
  private:
  float _internal_normalizedtime() const;
  void _internal_set_normalizedtime(float value);
  public:

  // float speed = 99;
  void clear_speed();
  float speed() const;
  void set_speed(float value);
  private:
  float _internal_speed() const;
  void _internal_set_speed(float value);
  public:

  // @@protoc_insertion_point(class_scope:position.BPosition2)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 x_;
  ::PROTOBUF_NAMESPACE_ID::int32 y_;
  ::PROTOBUF_NAMESPACE_ID::int32 z_;
  ::PROTOBUF_NAMESPACE_ID::int32 px_;
  ::PROTOBUF_NAMESPACE_ID::int32 py_;
  ::PROTOBUF_NAMESPACE_ID::int32 pz_;
  float stickx_;
  float sticky_;
  ::PROTOBUF_NAMESPACE_ID::int32 namehash_;
  float normalizedtime_;
  float speed_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_position_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BPosition

// float x = 1;
inline void BPosition::clear_x() {
  x_ = 0;
}
inline float BPosition::_internal_x() const {
  return x_;
}
inline float BPosition::x() const {
  // @@protoc_insertion_point(field_get:position.BPosition.x)
  return _internal_x();
}
inline void BPosition::_internal_set_x(float value) {
  
  x_ = value;
}
inline void BPosition::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:position.BPosition.x)
}

// float y = 2;
inline void BPosition::clear_y() {
  y_ = 0;
}
inline float BPosition::_internal_y() const {
  return y_;
}
inline float BPosition::y() const {
  // @@protoc_insertion_point(field_get:position.BPosition.y)
  return _internal_y();
}
inline void BPosition::_internal_set_y(float value) {
  
  y_ = value;
}
inline void BPosition::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:position.BPosition.y)
}

// float z = 3;
inline void BPosition::clear_z() {
  z_ = 0;
}
inline float BPosition::_internal_z() const {
  return z_;
}
inline float BPosition::z() const {
  // @@protoc_insertion_point(field_get:position.BPosition.z)
  return _internal_z();
}
inline void BPosition::_internal_set_z(float value) {
  
  z_ = value;
}
inline void BPosition::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:position.BPosition.z)
}

// float px = 4;
inline void BPosition::clear_px() {
  px_ = 0;
}
inline float BPosition::_internal_px() const {
  return px_;
}
inline float BPosition::px() const {
  // @@protoc_insertion_point(field_get:position.BPosition.px)
  return _internal_px();
}
inline void BPosition::_internal_set_px(float value) {
  
  px_ = value;
}
inline void BPosition::set_px(float value) {
  _internal_set_px(value);
  // @@protoc_insertion_point(field_set:position.BPosition.px)
}

// float py = 5;
inline void BPosition::clear_py() {
  py_ = 0;
}
inline float BPosition::_internal_py() const {
  return py_;
}
inline float BPosition::py() const {
  // @@protoc_insertion_point(field_get:position.BPosition.py)
  return _internal_py();
}
inline void BPosition::_internal_set_py(float value) {
  
  py_ = value;
}
inline void BPosition::set_py(float value) {
  _internal_set_py(value);
  // @@protoc_insertion_point(field_set:position.BPosition.py)
}

// float pz = 6;
inline void BPosition::clear_pz() {
  pz_ = 0;
}
inline float BPosition::_internal_pz() const {
  return pz_;
}
inline float BPosition::pz() const {
  // @@protoc_insertion_point(field_get:position.BPosition.pz)
  return _internal_pz();
}
inline void BPosition::_internal_set_pz(float value) {
  
  pz_ = value;
}
inline void BPosition::set_pz(float value) {
  _internal_set_pz(value);
  // @@protoc_insertion_point(field_set:position.BPosition.pz)
}

// float stickX = 7;
inline void BPosition::clear_stickx() {
  stickx_ = 0;
}
inline float BPosition::_internal_stickx() const {
  return stickx_;
}
inline float BPosition::stickx() const {
  // @@protoc_insertion_point(field_get:position.BPosition.stickX)
  return _internal_stickx();
}
inline void BPosition::_internal_set_stickx(float value) {
  
  stickx_ = value;
}
inline void BPosition::set_stickx(float value) {
  _internal_set_stickx(value);
  // @@protoc_insertion_point(field_set:position.BPosition.stickX)
}

// float stickY = 8;
inline void BPosition::clear_sticky() {
  sticky_ = 0;
}
inline float BPosition::_internal_sticky() const {
  return sticky_;
}
inline float BPosition::sticky() const {
  // @@protoc_insertion_point(field_get:position.BPosition.stickY)
  return _internal_sticky();
}
inline void BPosition::_internal_set_sticky(float value) {
  
  sticky_ = value;
}
inline void BPosition::set_sticky(float value) {
  _internal_set_sticky(value);
  // @@protoc_insertion_point(field_set:position.BPosition.stickY)
}

// int32 nameHash = 9;
inline void BPosition::clear_namehash() {
  namehash_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition::_internal_namehash() const {
  return namehash_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition::namehash() const {
  // @@protoc_insertion_point(field_get:position.BPosition.nameHash)
  return _internal_namehash();
}
inline void BPosition::_internal_set_namehash(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  namehash_ = value;
}
inline void BPosition::set_namehash(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_namehash(value);
  // @@protoc_insertion_point(field_set:position.BPosition.nameHash)
}

// float normalizedTime = 10;
inline void BPosition::clear_normalizedtime() {
  normalizedtime_ = 0;
}
inline float BPosition::_internal_normalizedtime() const {
  return normalizedtime_;
}
inline float BPosition::normalizedtime() const {
  // @@protoc_insertion_point(field_get:position.BPosition.normalizedTime)
  return _internal_normalizedtime();
}
inline void BPosition::_internal_set_normalizedtime(float value) {
  
  normalizedtime_ = value;
}
inline void BPosition::set_normalizedtime(float value) {
  _internal_set_normalizedtime(value);
  // @@protoc_insertion_point(field_set:position.BPosition.normalizedTime)
}

// float speed = 99;
inline void BPosition::clear_speed() {
  speed_ = 0;
}
inline float BPosition::_internal_speed() const {
  return speed_;
}
inline float BPosition::speed() const {
  // @@protoc_insertion_point(field_get:position.BPosition.speed)
  return _internal_speed();
}
inline void BPosition::_internal_set_speed(float value) {
  
  speed_ = value;
}
inline void BPosition::set_speed(float value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:position.BPosition.speed)
}

// -------------------------------------------------------------------

// BPosition2

// int32 x = 1;
inline void BPosition2::clear_x() {
  x_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition2::_internal_x() const {
  return x_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition2::x() const {
  // @@protoc_insertion_point(field_get:position.BPosition2.x)
  return _internal_x();
}
inline void BPosition2::_internal_set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  x_ = value;
}
inline void BPosition2::set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:position.BPosition2.x)
}

// int32 y = 2;
inline void BPosition2::clear_y() {
  y_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition2::_internal_y() const {
  return y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition2::y() const {
  // @@protoc_insertion_point(field_get:position.BPosition2.y)
  return _internal_y();
}
inline void BPosition2::_internal_set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  y_ = value;
}
inline void BPosition2::set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:position.BPosition2.y)
}

// int32 z = 3;
inline void BPosition2::clear_z() {
  z_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition2::_internal_z() const {
  return z_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition2::z() const {
  // @@protoc_insertion_point(field_get:position.BPosition2.z)
  return _internal_z();
}
inline void BPosition2::_internal_set_z(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  z_ = value;
}
inline void BPosition2::set_z(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:position.BPosition2.z)
}

// int32 px = 4;
inline void BPosition2::clear_px() {
  px_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition2::_internal_px() const {
  return px_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition2::px() const {
  // @@protoc_insertion_point(field_get:position.BPosition2.px)
  return _internal_px();
}
inline void BPosition2::_internal_set_px(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  px_ = value;
}
inline void BPosition2::set_px(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_px(value);
  // @@protoc_insertion_point(field_set:position.BPosition2.px)
}

// int32 py = 5;
inline void BPosition2::clear_py() {
  py_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition2::_internal_py() const {
  return py_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition2::py() const {
  // @@protoc_insertion_point(field_get:position.BPosition2.py)
  return _internal_py();
}
inline void BPosition2::_internal_set_py(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  py_ = value;
}
inline void BPosition2::set_py(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_py(value);
  // @@protoc_insertion_point(field_set:position.BPosition2.py)
}

// int32 pz = 6;
inline void BPosition2::clear_pz() {
  pz_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition2::_internal_pz() const {
  return pz_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition2::pz() const {
  // @@protoc_insertion_point(field_get:position.BPosition2.pz)
  return _internal_pz();
}
inline void BPosition2::_internal_set_pz(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pz_ = value;
}
inline void BPosition2::set_pz(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pz(value);
  // @@protoc_insertion_point(field_set:position.BPosition2.pz)
}

// float stickX = 7;
inline void BPosition2::clear_stickx() {
  stickx_ = 0;
}
inline float BPosition2::_internal_stickx() const {
  return stickx_;
}
inline float BPosition2::stickx() const {
  // @@protoc_insertion_point(field_get:position.BPosition2.stickX)
  return _internal_stickx();
}
inline void BPosition2::_internal_set_stickx(float value) {
  
  stickx_ = value;
}
inline void BPosition2::set_stickx(float value) {
  _internal_set_stickx(value);
  // @@protoc_insertion_point(field_set:position.BPosition2.stickX)
}

// float stickY = 8;
inline void BPosition2::clear_sticky() {
  sticky_ = 0;
}
inline float BPosition2::_internal_sticky() const {
  return sticky_;
}
inline float BPosition2::sticky() const {
  // @@protoc_insertion_point(field_get:position.BPosition2.stickY)
  return _internal_sticky();
}
inline void BPosition2::_internal_set_sticky(float value) {
  
  sticky_ = value;
}
inline void BPosition2::set_sticky(float value) {
  _internal_set_sticky(value);
  // @@protoc_insertion_point(field_set:position.BPosition2.stickY)
}

// int32 nameHash = 9;
inline void BPosition2::clear_namehash() {
  namehash_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition2::_internal_namehash() const {
  return namehash_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BPosition2::namehash() const {
  // @@protoc_insertion_point(field_get:position.BPosition2.nameHash)
  return _internal_namehash();
}
inline void BPosition2::_internal_set_namehash(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  namehash_ = value;
}
inline void BPosition2::set_namehash(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_namehash(value);
  // @@protoc_insertion_point(field_set:position.BPosition2.nameHash)
}

// float normalizedTime = 10;
inline void BPosition2::clear_normalizedtime() {
  normalizedtime_ = 0;
}
inline float BPosition2::_internal_normalizedtime() const {
  return normalizedtime_;
}
inline float BPosition2::normalizedtime() const {
  // @@protoc_insertion_point(field_get:position.BPosition2.normalizedTime)
  return _internal_normalizedtime();
}
inline void BPosition2::_internal_set_normalizedtime(float value) {
  
  normalizedtime_ = value;
}
inline void BPosition2::set_normalizedtime(float value) {
  _internal_set_normalizedtime(value);
  // @@protoc_insertion_point(field_set:position.BPosition2.normalizedTime)
}

// float speed = 99;
inline void BPosition2::clear_speed() {
  speed_ = 0;
}
inline float BPosition2::_internal_speed() const {
  return speed_;
}
inline float BPosition2::speed() const {
  // @@protoc_insertion_point(field_get:position.BPosition2.speed)
  return _internal_speed();
}
inline void BPosition2::_internal_set_speed(float value) {
  
  speed_ = value;
}
inline void BPosition2::set_speed(float value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:position.BPosition2.speed)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace position

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_position_2eproto
