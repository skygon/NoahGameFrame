// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OtherUserStatusChange.proto

#include "OtherUserStatusChange.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_userInfo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SUserInfo_userInfo_2eproto;
namespace OtherUserStatusChange {
class SOtherUserEnterRoomDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SOtherUserEnterRoom> _instance;
} _SOtherUserEnterRoom_default_instance_;
class SOtherUserExitRoomDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SOtherUserExitRoom> _instance;
} _SOtherUserExitRoom_default_instance_;
}  // namespace OtherUserStatusChange
static void InitDefaultsscc_info_SOtherUserEnterRoom_OtherUserStatusChange_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OtherUserStatusChange::_SOtherUserEnterRoom_default_instance_;
    new (ptr) ::OtherUserStatusChange::SOtherUserEnterRoom();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OtherUserStatusChange::SOtherUserEnterRoom::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SOtherUserEnterRoom_OtherUserStatusChange_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SOtherUserEnterRoom_OtherUserStatusChange_2eproto}, {
      &scc_info_SUserInfo_userInfo_2eproto.base,}};

static void InitDefaultsscc_info_SOtherUserExitRoom_OtherUserStatusChange_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OtherUserStatusChange::_SOtherUserExitRoom_default_instance_;
    new (ptr) ::OtherUserStatusChange::SOtherUserExitRoom();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OtherUserStatusChange::SOtherUserExitRoom::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SOtherUserExitRoom_OtherUserStatusChange_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SOtherUserExitRoom_OtherUserStatusChange_2eproto}, {
      &scc_info_SUserInfo_userInfo_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_OtherUserStatusChange_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_OtherUserStatusChange_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_OtherUserStatusChange_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_OtherUserStatusChange_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OtherUserStatusChange::SOtherUserEnterRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OtherUserStatusChange::SOtherUserEnterRoom, infolist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OtherUserStatusChange::SOtherUserExitRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OtherUserStatusChange::SOtherUserExitRoom, infolist_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::OtherUserStatusChange::SOtherUserEnterRoom)},
  { 6, -1, sizeof(::OtherUserStatusChange::SOtherUserExitRoom)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OtherUserStatusChange::_SOtherUserEnterRoom_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OtherUserStatusChange::_SOtherUserExitRoom_default_instance_),
};

const char descriptor_table_protodef_OtherUserStatusChange_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033OtherUserStatusChange.proto\022\025OtherUser"
  "StatusChange\032\016userInfo.proto\"<\n\023SOtherUs"
  "erEnterRoom\022%\n\010infoList\030\001 \003(\0132\023.userInfo"
  ".SUserInfo\";\n\022SOtherUserExitRoom\022%\n\010info"
  "List\030\001 \003(\0132\023.userInfo.SUserInfoB1\n\030com.d"
  "ayou.space.protobufB\025OtherUserStatusChan"
  "geb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_OtherUserStatusChange_2eproto_deps[1] = {
  &::descriptor_table_userInfo_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_OtherUserStatusChange_2eproto_sccs[2] = {
  &scc_info_SOtherUserEnterRoom_OtherUserStatusChange_2eproto.base,
  &scc_info_SOtherUserExitRoom_OtherUserStatusChange_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_OtherUserStatusChange_2eproto_once;
static bool descriptor_table_OtherUserStatusChange_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_OtherUserStatusChange_2eproto = {
  &descriptor_table_OtherUserStatusChange_2eproto_initialized, descriptor_table_protodef_OtherUserStatusChange_2eproto, "OtherUserStatusChange.proto", 250,
  &descriptor_table_OtherUserStatusChange_2eproto_once, descriptor_table_OtherUserStatusChange_2eproto_sccs, descriptor_table_OtherUserStatusChange_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_OtherUserStatusChange_2eproto::offsets,
  file_level_metadata_OtherUserStatusChange_2eproto, 2, file_level_enum_descriptors_OtherUserStatusChange_2eproto, file_level_service_descriptors_OtherUserStatusChange_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_OtherUserStatusChange_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_OtherUserStatusChange_2eproto), true);
namespace OtherUserStatusChange {

// ===================================================================

void SOtherUserEnterRoom::InitAsDefaultInstance() {
}
class SOtherUserEnterRoom::_Internal {
 public:
};

void SOtherUserEnterRoom::clear_infolist() {
  infolist_.Clear();
}
SOtherUserEnterRoom::SOtherUserEnterRoom()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OtherUserStatusChange.SOtherUserEnterRoom)
}
SOtherUserEnterRoom::SOtherUserEnterRoom(const SOtherUserEnterRoom& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      infolist_(from.infolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:OtherUserStatusChange.SOtherUserEnterRoom)
}

void SOtherUserEnterRoom::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SOtherUserEnterRoom_OtherUserStatusChange_2eproto.base);
}

SOtherUserEnterRoom::~SOtherUserEnterRoom() {
  // @@protoc_insertion_point(destructor:OtherUserStatusChange.SOtherUserEnterRoom)
  SharedDtor();
}

void SOtherUserEnterRoom::SharedDtor() {
}

void SOtherUserEnterRoom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SOtherUserEnterRoom& SOtherUserEnterRoom::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SOtherUserEnterRoom_OtherUserStatusChange_2eproto.base);
  return *internal_default_instance();
}


void SOtherUserEnterRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:OtherUserStatusChange.SOtherUserEnterRoom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infolist_.Clear();
  _internal_metadata_.Clear();
}

const char* SOtherUserEnterRoom::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .userInfo.SUserInfo infoList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_infolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SOtherUserEnterRoom::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OtherUserStatusChange.SOtherUserEnterRoom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .userInfo.SUserInfo infoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_infolist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_infolist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OtherUserStatusChange.SOtherUserEnterRoom)
  return target;
}

size_t SOtherUserEnterRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OtherUserStatusChange.SOtherUserEnterRoom)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .userInfo.SUserInfo infoList = 1;
  total_size += 1UL * this->_internal_infolist_size();
  for (const auto& msg : this->infolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SOtherUserEnterRoom::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OtherUserStatusChange.SOtherUserEnterRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const SOtherUserEnterRoom* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SOtherUserEnterRoom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OtherUserStatusChange.SOtherUserEnterRoom)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OtherUserStatusChange.SOtherUserEnterRoom)
    MergeFrom(*source);
  }
}

void SOtherUserEnterRoom::MergeFrom(const SOtherUserEnterRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OtherUserStatusChange.SOtherUserEnterRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infolist_.MergeFrom(from.infolist_);
}

void SOtherUserEnterRoom::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OtherUserStatusChange.SOtherUserEnterRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SOtherUserEnterRoom::CopyFrom(const SOtherUserEnterRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OtherUserStatusChange.SOtherUserEnterRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SOtherUserEnterRoom::IsInitialized() const {
  return true;
}

void SOtherUserEnterRoom::InternalSwap(SOtherUserEnterRoom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  infolist_.InternalSwap(&other->infolist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SOtherUserEnterRoom::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SOtherUserExitRoom::InitAsDefaultInstance() {
}
class SOtherUserExitRoom::_Internal {
 public:
};

void SOtherUserExitRoom::clear_infolist() {
  infolist_.Clear();
}
SOtherUserExitRoom::SOtherUserExitRoom()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OtherUserStatusChange.SOtherUserExitRoom)
}
SOtherUserExitRoom::SOtherUserExitRoom(const SOtherUserExitRoom& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      infolist_(from.infolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:OtherUserStatusChange.SOtherUserExitRoom)
}

void SOtherUserExitRoom::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SOtherUserExitRoom_OtherUserStatusChange_2eproto.base);
}

SOtherUserExitRoom::~SOtherUserExitRoom() {
  // @@protoc_insertion_point(destructor:OtherUserStatusChange.SOtherUserExitRoom)
  SharedDtor();
}

void SOtherUserExitRoom::SharedDtor() {
}

void SOtherUserExitRoom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SOtherUserExitRoom& SOtherUserExitRoom::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SOtherUserExitRoom_OtherUserStatusChange_2eproto.base);
  return *internal_default_instance();
}


void SOtherUserExitRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:OtherUserStatusChange.SOtherUserExitRoom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infolist_.Clear();
  _internal_metadata_.Clear();
}

const char* SOtherUserExitRoom::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .userInfo.SUserInfo infoList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_infolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SOtherUserExitRoom::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OtherUserStatusChange.SOtherUserExitRoom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .userInfo.SUserInfo infoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_infolist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_infolist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OtherUserStatusChange.SOtherUserExitRoom)
  return target;
}

size_t SOtherUserExitRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OtherUserStatusChange.SOtherUserExitRoom)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .userInfo.SUserInfo infoList = 1;
  total_size += 1UL * this->_internal_infolist_size();
  for (const auto& msg : this->infolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SOtherUserExitRoom::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OtherUserStatusChange.SOtherUserExitRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const SOtherUserExitRoom* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SOtherUserExitRoom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OtherUserStatusChange.SOtherUserExitRoom)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OtherUserStatusChange.SOtherUserExitRoom)
    MergeFrom(*source);
  }
}

void SOtherUserExitRoom::MergeFrom(const SOtherUserExitRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OtherUserStatusChange.SOtherUserExitRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infolist_.MergeFrom(from.infolist_);
}

void SOtherUserExitRoom::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OtherUserStatusChange.SOtherUserExitRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SOtherUserExitRoom::CopyFrom(const SOtherUserExitRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OtherUserStatusChange.SOtherUserExitRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SOtherUserExitRoom::IsInitialized() const {
  return true;
}

void SOtherUserExitRoom::InternalSwap(SOtherUserExitRoom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  infolist_.InternalSwap(&other->infolist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SOtherUserExitRoom::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace OtherUserStatusChange
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::OtherUserStatusChange::SOtherUserEnterRoom* Arena::CreateMaybeMessage< ::OtherUserStatusChange::SOtherUserEnterRoom >(Arena* arena) {
  return Arena::CreateInternal< ::OtherUserStatusChange::SOtherUserEnterRoom >(arena);
}
template<> PROTOBUF_NOINLINE ::OtherUserStatusChange::SOtherUserExitRoom* Arena::CreateMaybeMessage< ::OtherUserStatusChange::SOtherUserExitRoom >(Arena* arena) {
  return Arena::CreateInternal< ::OtherUserStatusChange::SOtherUserExitRoom >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
