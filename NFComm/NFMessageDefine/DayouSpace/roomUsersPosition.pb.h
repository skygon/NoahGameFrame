// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: roomUsersPosition.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_roomUsersPosition_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_roomUsersPosition_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "userPosition.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_roomUsersPosition_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_roomUsersPosition_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_roomUsersPosition_2eproto;
namespace roomUsersPosition {
class CRoomUsersPosition;
class CRoomUsersPositionDefaultTypeInternal;
extern CRoomUsersPositionDefaultTypeInternal _CRoomUsersPosition_default_instance_;
class SRoomUsersPosition;
class SRoomUsersPositionDefaultTypeInternal;
extern SRoomUsersPositionDefaultTypeInternal _SRoomUsersPosition_default_instance_;
}  // namespace roomUsersPosition
PROTOBUF_NAMESPACE_OPEN
template<> ::roomUsersPosition::CRoomUsersPosition* Arena::CreateMaybeMessage<::roomUsersPosition::CRoomUsersPosition>(Arena*);
template<> ::roomUsersPosition::SRoomUsersPosition* Arena::CreateMaybeMessage<::roomUsersPosition::SRoomUsersPosition>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace roomUsersPosition {

// ===================================================================

class CRoomUsersPosition :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:roomUsersPosition.CRoomUsersPosition) */ {
 public:
  CRoomUsersPosition();
  virtual ~CRoomUsersPosition();

  CRoomUsersPosition(const CRoomUsersPosition& from);
  CRoomUsersPosition(CRoomUsersPosition&& from) noexcept
    : CRoomUsersPosition() {
    *this = ::std::move(from);
  }

  inline CRoomUsersPosition& operator=(const CRoomUsersPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline CRoomUsersPosition& operator=(CRoomUsersPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CRoomUsersPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CRoomUsersPosition* internal_default_instance() {
    return reinterpret_cast<const CRoomUsersPosition*>(
               &_CRoomUsersPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CRoomUsersPosition& a, CRoomUsersPosition& b) {
    a.Swap(&b);
  }
  inline void Swap(CRoomUsersPosition* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CRoomUsersPosition* New() const final {
    return CreateMaybeMessage<CRoomUsersPosition>(nullptr);
  }

  CRoomUsersPosition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CRoomUsersPosition>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CRoomUsersPosition& from);
  void MergeFrom(const CRoomUsersPosition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CRoomUsersPosition* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "roomUsersPosition.CRoomUsersPosition";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_roomUsersPosition_2eproto);
    return ::descriptor_table_roomUsersPosition_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
  };
  // int32 uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:roomUsersPosition.CRoomUsersPosition)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_roomUsersPosition_2eproto;
};
// -------------------------------------------------------------------

class SRoomUsersPosition :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:roomUsersPosition.SRoomUsersPosition) */ {
 public:
  SRoomUsersPosition();
  virtual ~SRoomUsersPosition();

  SRoomUsersPosition(const SRoomUsersPosition& from);
  SRoomUsersPosition(SRoomUsersPosition&& from) noexcept
    : SRoomUsersPosition() {
    *this = ::std::move(from);
  }

  inline SRoomUsersPosition& operator=(const SRoomUsersPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRoomUsersPosition& operator=(SRoomUsersPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SRoomUsersPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SRoomUsersPosition* internal_default_instance() {
    return reinterpret_cast<const SRoomUsersPosition*>(
               &_SRoomUsersPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SRoomUsersPosition& a, SRoomUsersPosition& b) {
    a.Swap(&b);
  }
  inline void Swap(SRoomUsersPosition* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SRoomUsersPosition* New() const final {
    return CreateMaybeMessage<SRoomUsersPosition>(nullptr);
  }

  SRoomUsersPosition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SRoomUsersPosition>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SRoomUsersPosition& from);
  void MergeFrom(const SRoomUsersPosition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SRoomUsersPosition* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "roomUsersPosition.SRoomUsersPosition";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_roomUsersPosition_2eproto);
    return ::descriptor_table_roomUsersPosition_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionsFieldNumber = 1,
    kVrPostListsFieldNumber = 2,
  };
  // repeated .userPosition.UPosition positions = 1;
  int positions_size() const;
  private:
  int _internal_positions_size() const;
  public:
  void clear_positions();
  ::userPosition::UPosition* mutable_positions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userPosition::UPosition >*
      mutable_positions();
  private:
  const ::userPosition::UPosition& _internal_positions(int index) const;
  ::userPosition::UPosition* _internal_add_positions();
  public:
  const ::userPosition::UPosition& positions(int index) const;
  ::userPosition::UPosition* add_positions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userPosition::UPosition >&
      positions() const;

  // repeated .userPosition.VrPosition vrPostLists = 2;
  int vrpostlists_size() const;
  private:
  int _internal_vrpostlists_size() const;
  public:
  void clear_vrpostlists();
  ::userPosition::VrPosition* mutable_vrpostlists(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userPosition::VrPosition >*
      mutable_vrpostlists();
  private:
  const ::userPosition::VrPosition& _internal_vrpostlists(int index) const;
  ::userPosition::VrPosition* _internal_add_vrpostlists();
  public:
  const ::userPosition::VrPosition& vrpostlists(int index) const;
  ::userPosition::VrPosition* add_vrpostlists();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userPosition::VrPosition >&
      vrpostlists() const;

  // @@protoc_insertion_point(class_scope:roomUsersPosition.SRoomUsersPosition)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userPosition::UPosition > positions_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userPosition::VrPosition > vrpostlists_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_roomUsersPosition_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CRoomUsersPosition

// int32 uid = 1;
inline void CRoomUsersPosition::clear_uid() {
  uid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CRoomUsersPosition::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CRoomUsersPosition::uid() const {
  // @@protoc_insertion_point(field_get:roomUsersPosition.CRoomUsersPosition.uid)
  return _internal_uid();
}
inline void CRoomUsersPosition::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  uid_ = value;
}
inline void CRoomUsersPosition::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:roomUsersPosition.CRoomUsersPosition.uid)
}

// -------------------------------------------------------------------

// SRoomUsersPosition

// repeated .userPosition.UPosition positions = 1;
inline int SRoomUsersPosition::_internal_positions_size() const {
  return positions_.size();
}
inline int SRoomUsersPosition::positions_size() const {
  return _internal_positions_size();
}
inline ::userPosition::UPosition* SRoomUsersPosition::mutable_positions(int index) {
  // @@protoc_insertion_point(field_mutable:roomUsersPosition.SRoomUsersPosition.positions)
  return positions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userPosition::UPosition >*
SRoomUsersPosition::mutable_positions() {
  // @@protoc_insertion_point(field_mutable_list:roomUsersPosition.SRoomUsersPosition.positions)
  return &positions_;
}
inline const ::userPosition::UPosition& SRoomUsersPosition::_internal_positions(int index) const {
  return positions_.Get(index);
}
inline const ::userPosition::UPosition& SRoomUsersPosition::positions(int index) const {
  // @@protoc_insertion_point(field_get:roomUsersPosition.SRoomUsersPosition.positions)
  return _internal_positions(index);
}
inline ::userPosition::UPosition* SRoomUsersPosition::_internal_add_positions() {
  return positions_.Add();
}
inline ::userPosition::UPosition* SRoomUsersPosition::add_positions() {
  // @@protoc_insertion_point(field_add:roomUsersPosition.SRoomUsersPosition.positions)
  return _internal_add_positions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userPosition::UPosition >&
SRoomUsersPosition::positions() const {
  // @@protoc_insertion_point(field_list:roomUsersPosition.SRoomUsersPosition.positions)
  return positions_;
}

// repeated .userPosition.VrPosition vrPostLists = 2;
inline int SRoomUsersPosition::_internal_vrpostlists_size() const {
  return vrpostlists_.size();
}
inline int SRoomUsersPosition::vrpostlists_size() const {
  return _internal_vrpostlists_size();
}
inline ::userPosition::VrPosition* SRoomUsersPosition::mutable_vrpostlists(int index) {
  // @@protoc_insertion_point(field_mutable:roomUsersPosition.SRoomUsersPosition.vrPostLists)
  return vrpostlists_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userPosition::VrPosition >*
SRoomUsersPosition::mutable_vrpostlists() {
  // @@protoc_insertion_point(field_mutable_list:roomUsersPosition.SRoomUsersPosition.vrPostLists)
  return &vrpostlists_;
}
inline const ::userPosition::VrPosition& SRoomUsersPosition::_internal_vrpostlists(int index) const {
  return vrpostlists_.Get(index);
}
inline const ::userPosition::VrPosition& SRoomUsersPosition::vrpostlists(int index) const {
  // @@protoc_insertion_point(field_get:roomUsersPosition.SRoomUsersPosition.vrPostLists)
  return _internal_vrpostlists(index);
}
inline ::userPosition::VrPosition* SRoomUsersPosition::_internal_add_vrpostlists() {
  return vrpostlists_.Add();
}
inline ::userPosition::VrPosition* SRoomUsersPosition::add_vrpostlists() {
  // @@protoc_insertion_point(field_add:roomUsersPosition.SRoomUsersPosition.vrPostLists)
  return _internal_add_vrpostlists();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::userPosition::VrPosition >&
SRoomUsersPosition::vrpostlists() const {
  // @@protoc_insertion_point(field_list:roomUsersPosition.SRoomUsersPosition.vrPostLists)
  return vrpostlists_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace roomUsersPosition

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_roomUsersPosition_2eproto
