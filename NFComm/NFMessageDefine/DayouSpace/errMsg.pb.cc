// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: errMsg.proto

#include "errMsg.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace errorMsg {
}  // namespace errorMsg
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_errMsg_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_errMsg_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_errMsg_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_errMsg_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_errMsg_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014errMsg.proto\022\010errorMsg*\245\004\n\010ErrorMsg\022\013\n"
  "\007SUCCESS\020\000\022\016\n\nTokenError\020\001\022\025\n\021RequestPar"
  "amError\020\002\022\022\n\016EmptyChipError\020\003\022\026\n\022ServerT"
  "imeOutError\020\004\022\024\n\020GetPropLimtError\020\005\022\021\n\rU"
  "serInfoError\020\006\022\025\n\021UpdateAvatarError\020\007\022\027\n"
  "\023AvatarBackPackError\020\010\022\030\n\024NftChipBackPac"
  "kError\020\t\022\025\n\021PropBackPackError\020\n\022\022\n\016MyNft"
  "ListError\020\013\022\035\n\031AddNftPieceFromHouseError"
  "\020\014\022\031\n\025SaveUsersConstelError\020\r\022\027\n\023NotCons"
  "telInfoError\020\016\022\021\n\rEmptyBoxError\020\017\022\022\n\016Act"
  "iveEndError\020\020\022\031\n\025TooManyOperationError\020\021"
  "\022\027\n\023HouseIDNotExitError\020\022\022\030\n\024ConcertNotS"
  "tartError\020\023\022\035\n\031ErrorLoginOnAnotherDevice"
  "\020\024\022\027\n\022NeedAllocRoomError\020\346\007\022\033\n\026ProtocolU"
  "ndefinedError\020\347\007B\032\n\030com.dayou.space.prot"
  "obufb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_errMsg_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_errMsg_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_errMsg_2eproto_once;
static bool descriptor_table_errMsg_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_errMsg_2eproto = {
  &descriptor_table_errMsg_2eproto_initialized, descriptor_table_protodef_errMsg_2eproto, "errMsg.proto", 612,
  &descriptor_table_errMsg_2eproto_once, descriptor_table_errMsg_2eproto_sccs, descriptor_table_errMsg_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_errMsg_2eproto::offsets,
  file_level_metadata_errMsg_2eproto, 0, file_level_enum_descriptors_errMsg_2eproto, file_level_service_descriptors_errMsg_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_errMsg_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_errMsg_2eproto), true);
namespace errorMsg {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ErrorMsg_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_errMsg_2eproto);
  return file_level_enum_descriptors_errMsg_2eproto[0];
}
bool ErrorMsg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 998:
    case 999:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace errorMsg
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
