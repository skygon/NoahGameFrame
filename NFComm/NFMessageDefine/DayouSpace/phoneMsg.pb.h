// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: phoneMsg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_phoneMsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_phoneMsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_phoneMsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_phoneMsg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_phoneMsg_2eproto;
namespace phoneMsg {
class CCancelUserByVerifyCode;
class CCancelUserByVerifyCodeDefaultTypeInternal;
extern CCancelUserByVerifyCodeDefaultTypeInternal _CCancelUserByVerifyCode_default_instance_;
class CRemoveWechatByVerifyCode;
class CRemoveWechatByVerifyCodeDefaultTypeInternal;
extern CRemoveWechatByVerifyCodeDefaultTypeInternal _CRemoveWechatByVerifyCode_default_instance_;
class CSavePhoneByVerifyCode;
class CSavePhoneByVerifyCodeDefaultTypeInternal;
extern CSavePhoneByVerifyCodeDefaultTypeInternal _CSavePhoneByVerifyCode_default_instance_;
class CSaveUserInfoGetVerifyCode;
class CSaveUserInfoGetVerifyCodeDefaultTypeInternal;
extern CSaveUserInfoGetVerifyCodeDefaultTypeInternal _CSaveUserInfoGetVerifyCode_default_instance_;
class CVerifySaveUserInfoVerifyCode;
class CVerifySaveUserInfoVerifyCodeDefaultTypeInternal;
extern CVerifySaveUserInfoVerifyCodeDefaultTypeInternal _CVerifySaveUserInfoVerifyCode_default_instance_;
class SCancelUserByVerifyCode;
class SCancelUserByVerifyCodeDefaultTypeInternal;
extern SCancelUserByVerifyCodeDefaultTypeInternal _SCancelUserByVerifyCode_default_instance_;
class SRemoveWechatByVerifyCode;
class SRemoveWechatByVerifyCodeDefaultTypeInternal;
extern SRemoveWechatByVerifyCodeDefaultTypeInternal _SRemoveWechatByVerifyCode_default_instance_;
class SSavePhoneByVerifyCode;
class SSavePhoneByVerifyCodeDefaultTypeInternal;
extern SSavePhoneByVerifyCodeDefaultTypeInternal _SSavePhoneByVerifyCode_default_instance_;
class SSaveUserInfoGetVerifyCode;
class SSaveUserInfoGetVerifyCodeDefaultTypeInternal;
extern SSaveUserInfoGetVerifyCodeDefaultTypeInternal _SSaveUserInfoGetVerifyCode_default_instance_;
class SVerifySaveUserInfoVerifyCode;
class SVerifySaveUserInfoVerifyCodeDefaultTypeInternal;
extern SVerifySaveUserInfoVerifyCodeDefaultTypeInternal _SVerifySaveUserInfoVerifyCode_default_instance_;
}  // namespace phoneMsg
PROTOBUF_NAMESPACE_OPEN
template<> ::phoneMsg::CCancelUserByVerifyCode* Arena::CreateMaybeMessage<::phoneMsg::CCancelUserByVerifyCode>(Arena*);
template<> ::phoneMsg::CRemoveWechatByVerifyCode* Arena::CreateMaybeMessage<::phoneMsg::CRemoveWechatByVerifyCode>(Arena*);
template<> ::phoneMsg::CSavePhoneByVerifyCode* Arena::CreateMaybeMessage<::phoneMsg::CSavePhoneByVerifyCode>(Arena*);
template<> ::phoneMsg::CSaveUserInfoGetVerifyCode* Arena::CreateMaybeMessage<::phoneMsg::CSaveUserInfoGetVerifyCode>(Arena*);
template<> ::phoneMsg::CVerifySaveUserInfoVerifyCode* Arena::CreateMaybeMessage<::phoneMsg::CVerifySaveUserInfoVerifyCode>(Arena*);
template<> ::phoneMsg::SCancelUserByVerifyCode* Arena::CreateMaybeMessage<::phoneMsg::SCancelUserByVerifyCode>(Arena*);
template<> ::phoneMsg::SRemoveWechatByVerifyCode* Arena::CreateMaybeMessage<::phoneMsg::SRemoveWechatByVerifyCode>(Arena*);
template<> ::phoneMsg::SSavePhoneByVerifyCode* Arena::CreateMaybeMessage<::phoneMsg::SSavePhoneByVerifyCode>(Arena*);
template<> ::phoneMsg::SSaveUserInfoGetVerifyCode* Arena::CreateMaybeMessage<::phoneMsg::SSaveUserInfoGetVerifyCode>(Arena*);
template<> ::phoneMsg::SVerifySaveUserInfoVerifyCode* Arena::CreateMaybeMessage<::phoneMsg::SVerifySaveUserInfoVerifyCode>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace phoneMsg {

// ===================================================================

class CSaveUserInfoGetVerifyCode :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phoneMsg.CSaveUserInfoGetVerifyCode) */ {
 public:
  CSaveUserInfoGetVerifyCode();
  virtual ~CSaveUserInfoGetVerifyCode();

  CSaveUserInfoGetVerifyCode(const CSaveUserInfoGetVerifyCode& from);
  CSaveUserInfoGetVerifyCode(CSaveUserInfoGetVerifyCode&& from) noexcept
    : CSaveUserInfoGetVerifyCode() {
    *this = ::std::move(from);
  }

  inline CSaveUserInfoGetVerifyCode& operator=(const CSaveUserInfoGetVerifyCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSaveUserInfoGetVerifyCode& operator=(CSaveUserInfoGetVerifyCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CSaveUserInfoGetVerifyCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSaveUserInfoGetVerifyCode* internal_default_instance() {
    return reinterpret_cast<const CSaveUserInfoGetVerifyCode*>(
               &_CSaveUserInfoGetVerifyCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CSaveUserInfoGetVerifyCode& a, CSaveUserInfoGetVerifyCode& b) {
    a.Swap(&b);
  }
  inline void Swap(CSaveUserInfoGetVerifyCode* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CSaveUserInfoGetVerifyCode* New() const final {
    return CreateMaybeMessage<CSaveUserInfoGetVerifyCode>(nullptr);
  }

  CSaveUserInfoGetVerifyCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CSaveUserInfoGetVerifyCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CSaveUserInfoGetVerifyCode& from);
  void MergeFrom(const CSaveUserInfoGetVerifyCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSaveUserInfoGetVerifyCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phoneMsg.CSaveUserInfoGetVerifyCode";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phoneMsg_2eproto);
    return ::descriptor_table_phoneMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhoneFieldNumber = 1,
  };
  // string phone = 1;
  void clear_phone();
  const std::string& phone() const;
  void set_phone(const std::string& value);
  void set_phone(std::string&& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  std::string* mutable_phone();
  std::string* release_phone();
  void set_allocated_phone(std::string* phone);
  private:
  const std::string& _internal_phone() const;
  void _internal_set_phone(const std::string& value);
  std::string* _internal_mutable_phone();
  public:

  // @@protoc_insertion_point(class_scope:phoneMsg.CSaveUserInfoGetVerifyCode)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phoneMsg_2eproto;
};
// -------------------------------------------------------------------

class SSaveUserInfoGetVerifyCode :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phoneMsg.SSaveUserInfoGetVerifyCode) */ {
 public:
  SSaveUserInfoGetVerifyCode();
  virtual ~SSaveUserInfoGetVerifyCode();

  SSaveUserInfoGetVerifyCode(const SSaveUserInfoGetVerifyCode& from);
  SSaveUserInfoGetVerifyCode(SSaveUserInfoGetVerifyCode&& from) noexcept
    : SSaveUserInfoGetVerifyCode() {
    *this = ::std::move(from);
  }

  inline SSaveUserInfoGetVerifyCode& operator=(const SSaveUserInfoGetVerifyCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSaveUserInfoGetVerifyCode& operator=(SSaveUserInfoGetVerifyCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSaveUserInfoGetVerifyCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SSaveUserInfoGetVerifyCode* internal_default_instance() {
    return reinterpret_cast<const SSaveUserInfoGetVerifyCode*>(
               &_SSaveUserInfoGetVerifyCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SSaveUserInfoGetVerifyCode& a, SSaveUserInfoGetVerifyCode& b) {
    a.Swap(&b);
  }
  inline void Swap(SSaveUserInfoGetVerifyCode* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSaveUserInfoGetVerifyCode* New() const final {
    return CreateMaybeMessage<SSaveUserInfoGetVerifyCode>(nullptr);
  }

  SSaveUserInfoGetVerifyCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSaveUserInfoGetVerifyCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSaveUserInfoGetVerifyCode& from);
  void MergeFrom(const SSaveUserInfoGetVerifyCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSaveUserInfoGetVerifyCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phoneMsg.SSaveUserInfoGetVerifyCode";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phoneMsg_2eproto);
    return ::descriptor_table_phoneMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
  };
  // int32 status = 1;
  void clear_status();
  ::PROTOBUF_NAMESPACE_ID::int32 status() const;
  void set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_status() const;
  void _internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:phoneMsg.SSaveUserInfoGetVerifyCode)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phoneMsg_2eproto;
};
// -------------------------------------------------------------------

class CVerifySaveUserInfoVerifyCode :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phoneMsg.CVerifySaveUserInfoVerifyCode) */ {
 public:
  CVerifySaveUserInfoVerifyCode();
  virtual ~CVerifySaveUserInfoVerifyCode();

  CVerifySaveUserInfoVerifyCode(const CVerifySaveUserInfoVerifyCode& from);
  CVerifySaveUserInfoVerifyCode(CVerifySaveUserInfoVerifyCode&& from) noexcept
    : CVerifySaveUserInfoVerifyCode() {
    *this = ::std::move(from);
  }

  inline CVerifySaveUserInfoVerifyCode& operator=(const CVerifySaveUserInfoVerifyCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline CVerifySaveUserInfoVerifyCode& operator=(CVerifySaveUserInfoVerifyCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CVerifySaveUserInfoVerifyCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CVerifySaveUserInfoVerifyCode* internal_default_instance() {
    return reinterpret_cast<const CVerifySaveUserInfoVerifyCode*>(
               &_CVerifySaveUserInfoVerifyCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CVerifySaveUserInfoVerifyCode& a, CVerifySaveUserInfoVerifyCode& b) {
    a.Swap(&b);
  }
  inline void Swap(CVerifySaveUserInfoVerifyCode* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CVerifySaveUserInfoVerifyCode* New() const final {
    return CreateMaybeMessage<CVerifySaveUserInfoVerifyCode>(nullptr);
  }

  CVerifySaveUserInfoVerifyCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CVerifySaveUserInfoVerifyCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CVerifySaveUserInfoVerifyCode& from);
  void MergeFrom(const CVerifySaveUserInfoVerifyCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CVerifySaveUserInfoVerifyCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phoneMsg.CVerifySaveUserInfoVerifyCode";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phoneMsg_2eproto);
    return ::descriptor_table_phoneMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhoneFieldNumber = 1,
    kVerifyCodeFieldNumber = 2,
  };
  // string phone = 1;
  void clear_phone();
  const std::string& phone() const;
  void set_phone(const std::string& value);
  void set_phone(std::string&& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  std::string* mutable_phone();
  std::string* release_phone();
  void set_allocated_phone(std::string* phone);
  private:
  const std::string& _internal_phone() const;
  void _internal_set_phone(const std::string& value);
  std::string* _internal_mutable_phone();
  public:

  // string verifyCode = 2;
  void clear_verifycode();
  const std::string& verifycode() const;
  void set_verifycode(const std::string& value);
  void set_verifycode(std::string&& value);
  void set_verifycode(const char* value);
  void set_verifycode(const char* value, size_t size);
  std::string* mutable_verifycode();
  std::string* release_verifycode();
  void set_allocated_verifycode(std::string* verifycode);
  private:
  const std::string& _internal_verifycode() const;
  void _internal_set_verifycode(const std::string& value);
  std::string* _internal_mutable_verifycode();
  public:

  // @@protoc_insertion_point(class_scope:phoneMsg.CVerifySaveUserInfoVerifyCode)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr verifycode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phoneMsg_2eproto;
};
// -------------------------------------------------------------------

class SVerifySaveUserInfoVerifyCode :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phoneMsg.SVerifySaveUserInfoVerifyCode) */ {
 public:
  SVerifySaveUserInfoVerifyCode();
  virtual ~SVerifySaveUserInfoVerifyCode();

  SVerifySaveUserInfoVerifyCode(const SVerifySaveUserInfoVerifyCode& from);
  SVerifySaveUserInfoVerifyCode(SVerifySaveUserInfoVerifyCode&& from) noexcept
    : SVerifySaveUserInfoVerifyCode() {
    *this = ::std::move(from);
  }

  inline SVerifySaveUserInfoVerifyCode& operator=(const SVerifySaveUserInfoVerifyCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline SVerifySaveUserInfoVerifyCode& operator=(SVerifySaveUserInfoVerifyCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SVerifySaveUserInfoVerifyCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SVerifySaveUserInfoVerifyCode* internal_default_instance() {
    return reinterpret_cast<const SVerifySaveUserInfoVerifyCode*>(
               &_SVerifySaveUserInfoVerifyCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SVerifySaveUserInfoVerifyCode& a, SVerifySaveUserInfoVerifyCode& b) {
    a.Swap(&b);
  }
  inline void Swap(SVerifySaveUserInfoVerifyCode* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SVerifySaveUserInfoVerifyCode* New() const final {
    return CreateMaybeMessage<SVerifySaveUserInfoVerifyCode>(nullptr);
  }

  SVerifySaveUserInfoVerifyCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SVerifySaveUserInfoVerifyCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SVerifySaveUserInfoVerifyCode& from);
  void MergeFrom(const SVerifySaveUserInfoVerifyCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SVerifySaveUserInfoVerifyCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phoneMsg.SVerifySaveUserInfoVerifyCode";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phoneMsg_2eproto);
    return ::descriptor_table_phoneMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 2,
    kStatusCodeFieldNumber = 3,
    kStatusFieldNumber = 1,
  };
  // string msg = 2;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // string statusCode = 3;
  void clear_statuscode();
  const std::string& statuscode() const;
  void set_statuscode(const std::string& value);
  void set_statuscode(std::string&& value);
  void set_statuscode(const char* value);
  void set_statuscode(const char* value, size_t size);
  std::string* mutable_statuscode();
  std::string* release_statuscode();
  void set_allocated_statuscode(std::string* statuscode);
  private:
  const std::string& _internal_statuscode() const;
  void _internal_set_statuscode(const std::string& value);
  std::string* _internal_mutable_statuscode();
  public:

  // int32 status = 1;
  void clear_status();
  ::PROTOBUF_NAMESPACE_ID::int32 status() const;
  void set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_status() const;
  void _internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:phoneMsg.SVerifySaveUserInfoVerifyCode)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr statuscode_;
  ::PROTOBUF_NAMESPACE_ID::int32 status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phoneMsg_2eproto;
};
// -------------------------------------------------------------------

class CSavePhoneByVerifyCode :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phoneMsg.CSavePhoneByVerifyCode) */ {
 public:
  CSavePhoneByVerifyCode();
  virtual ~CSavePhoneByVerifyCode();

  CSavePhoneByVerifyCode(const CSavePhoneByVerifyCode& from);
  CSavePhoneByVerifyCode(CSavePhoneByVerifyCode&& from) noexcept
    : CSavePhoneByVerifyCode() {
    *this = ::std::move(from);
  }

  inline CSavePhoneByVerifyCode& operator=(const CSavePhoneByVerifyCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSavePhoneByVerifyCode& operator=(CSavePhoneByVerifyCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CSavePhoneByVerifyCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSavePhoneByVerifyCode* internal_default_instance() {
    return reinterpret_cast<const CSavePhoneByVerifyCode*>(
               &_CSavePhoneByVerifyCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CSavePhoneByVerifyCode& a, CSavePhoneByVerifyCode& b) {
    a.Swap(&b);
  }
  inline void Swap(CSavePhoneByVerifyCode* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CSavePhoneByVerifyCode* New() const final {
    return CreateMaybeMessage<CSavePhoneByVerifyCode>(nullptr);
  }

  CSavePhoneByVerifyCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CSavePhoneByVerifyCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CSavePhoneByVerifyCode& from);
  void MergeFrom(const CSavePhoneByVerifyCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSavePhoneByVerifyCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phoneMsg.CSavePhoneByVerifyCode";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phoneMsg_2eproto);
    return ::descriptor_table_phoneMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhoneFieldNumber = 1,
    kVerifyCodeFieldNumber = 2,
    kStatusCodeFieldNumber = 3,
    kAreaCodeFieldNumber = 4,
  };
  // string phone = 1;
  void clear_phone();
  const std::string& phone() const;
  void set_phone(const std::string& value);
  void set_phone(std::string&& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  std::string* mutable_phone();
  std::string* release_phone();
  void set_allocated_phone(std::string* phone);
  private:
  const std::string& _internal_phone() const;
  void _internal_set_phone(const std::string& value);
  std::string* _internal_mutable_phone();
  public:

  // string verifyCode = 2;
  void clear_verifycode();
  const std::string& verifycode() const;
  void set_verifycode(const std::string& value);
  void set_verifycode(std::string&& value);
  void set_verifycode(const char* value);
  void set_verifycode(const char* value, size_t size);
  std::string* mutable_verifycode();
  std::string* release_verifycode();
  void set_allocated_verifycode(std::string* verifycode);
  private:
  const std::string& _internal_verifycode() const;
  void _internal_set_verifycode(const std::string& value);
  std::string* _internal_mutable_verifycode();
  public:

  // string statusCode = 3;
  void clear_statuscode();
  const std::string& statuscode() const;
  void set_statuscode(const std::string& value);
  void set_statuscode(std::string&& value);
  void set_statuscode(const char* value);
  void set_statuscode(const char* value, size_t size);
  std::string* mutable_statuscode();
  std::string* release_statuscode();
  void set_allocated_statuscode(std::string* statuscode);
  private:
  const std::string& _internal_statuscode() const;
  void _internal_set_statuscode(const std::string& value);
  std::string* _internal_mutable_statuscode();
  public:

  // string areaCode = 4;
  void clear_areacode();
  const std::string& areacode() const;
  void set_areacode(const std::string& value);
  void set_areacode(std::string&& value);
  void set_areacode(const char* value);
  void set_areacode(const char* value, size_t size);
  std::string* mutable_areacode();
  std::string* release_areacode();
  void set_allocated_areacode(std::string* areacode);
  private:
  const std::string& _internal_areacode() const;
  void _internal_set_areacode(const std::string& value);
  std::string* _internal_mutable_areacode();
  public:

  // @@protoc_insertion_point(class_scope:phoneMsg.CSavePhoneByVerifyCode)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr verifycode_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr statuscode_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr areacode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phoneMsg_2eproto;
};
// -------------------------------------------------------------------

class SSavePhoneByVerifyCode :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phoneMsg.SSavePhoneByVerifyCode) */ {
 public:
  SSavePhoneByVerifyCode();
  virtual ~SSavePhoneByVerifyCode();

  SSavePhoneByVerifyCode(const SSavePhoneByVerifyCode& from);
  SSavePhoneByVerifyCode(SSavePhoneByVerifyCode&& from) noexcept
    : SSavePhoneByVerifyCode() {
    *this = ::std::move(from);
  }

  inline SSavePhoneByVerifyCode& operator=(const SSavePhoneByVerifyCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSavePhoneByVerifyCode& operator=(SSavePhoneByVerifyCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSavePhoneByVerifyCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SSavePhoneByVerifyCode* internal_default_instance() {
    return reinterpret_cast<const SSavePhoneByVerifyCode*>(
               &_SSavePhoneByVerifyCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SSavePhoneByVerifyCode& a, SSavePhoneByVerifyCode& b) {
    a.Swap(&b);
  }
  inline void Swap(SSavePhoneByVerifyCode* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSavePhoneByVerifyCode* New() const final {
    return CreateMaybeMessage<SSavePhoneByVerifyCode>(nullptr);
  }

  SSavePhoneByVerifyCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSavePhoneByVerifyCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSavePhoneByVerifyCode& from);
  void MergeFrom(const SSavePhoneByVerifyCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSavePhoneByVerifyCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phoneMsg.SSavePhoneByVerifyCode";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phoneMsg_2eproto);
    return ::descriptor_table_phoneMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string msg = 2;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // int32 status = 1;
  void clear_status();
  ::PROTOBUF_NAMESPACE_ID::int32 status() const;
  void set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_status() const;
  void _internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:phoneMsg.SSavePhoneByVerifyCode)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::PROTOBUF_NAMESPACE_ID::int32 status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phoneMsg_2eproto;
};
// -------------------------------------------------------------------

class CCancelUserByVerifyCode :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phoneMsg.CCancelUserByVerifyCode) */ {
 public:
  CCancelUserByVerifyCode();
  virtual ~CCancelUserByVerifyCode();

  CCancelUserByVerifyCode(const CCancelUserByVerifyCode& from);
  CCancelUserByVerifyCode(CCancelUserByVerifyCode&& from) noexcept
    : CCancelUserByVerifyCode() {
    *this = ::std::move(from);
  }

  inline CCancelUserByVerifyCode& operator=(const CCancelUserByVerifyCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCancelUserByVerifyCode& operator=(CCancelUserByVerifyCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCancelUserByVerifyCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCancelUserByVerifyCode* internal_default_instance() {
    return reinterpret_cast<const CCancelUserByVerifyCode*>(
               &_CCancelUserByVerifyCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CCancelUserByVerifyCode& a, CCancelUserByVerifyCode& b) {
    a.Swap(&b);
  }
  inline void Swap(CCancelUserByVerifyCode* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCancelUserByVerifyCode* New() const final {
    return CreateMaybeMessage<CCancelUserByVerifyCode>(nullptr);
  }

  CCancelUserByVerifyCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCancelUserByVerifyCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCancelUserByVerifyCode& from);
  void MergeFrom(const CCancelUserByVerifyCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCancelUserByVerifyCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phoneMsg.CCancelUserByVerifyCode";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phoneMsg_2eproto);
    return ::descriptor_table_phoneMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhoneFieldNumber = 1,
    kVerifyCodeFieldNumber = 2,
  };
  // string phone = 1;
  void clear_phone();
  const std::string& phone() const;
  void set_phone(const std::string& value);
  void set_phone(std::string&& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  std::string* mutable_phone();
  std::string* release_phone();
  void set_allocated_phone(std::string* phone);
  private:
  const std::string& _internal_phone() const;
  void _internal_set_phone(const std::string& value);
  std::string* _internal_mutable_phone();
  public:

  // string verifyCode = 2;
  void clear_verifycode();
  const std::string& verifycode() const;
  void set_verifycode(const std::string& value);
  void set_verifycode(std::string&& value);
  void set_verifycode(const char* value);
  void set_verifycode(const char* value, size_t size);
  std::string* mutable_verifycode();
  std::string* release_verifycode();
  void set_allocated_verifycode(std::string* verifycode);
  private:
  const std::string& _internal_verifycode() const;
  void _internal_set_verifycode(const std::string& value);
  std::string* _internal_mutable_verifycode();
  public:

  // @@protoc_insertion_point(class_scope:phoneMsg.CCancelUserByVerifyCode)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr verifycode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phoneMsg_2eproto;
};
// -------------------------------------------------------------------

class SCancelUserByVerifyCode :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phoneMsg.SCancelUserByVerifyCode) */ {
 public:
  SCancelUserByVerifyCode();
  virtual ~SCancelUserByVerifyCode();

  SCancelUserByVerifyCode(const SCancelUserByVerifyCode& from);
  SCancelUserByVerifyCode(SCancelUserByVerifyCode&& from) noexcept
    : SCancelUserByVerifyCode() {
    *this = ::std::move(from);
  }

  inline SCancelUserByVerifyCode& operator=(const SCancelUserByVerifyCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline SCancelUserByVerifyCode& operator=(SCancelUserByVerifyCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SCancelUserByVerifyCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SCancelUserByVerifyCode* internal_default_instance() {
    return reinterpret_cast<const SCancelUserByVerifyCode*>(
               &_SCancelUserByVerifyCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SCancelUserByVerifyCode& a, SCancelUserByVerifyCode& b) {
    a.Swap(&b);
  }
  inline void Swap(SCancelUserByVerifyCode* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SCancelUserByVerifyCode* New() const final {
    return CreateMaybeMessage<SCancelUserByVerifyCode>(nullptr);
  }

  SCancelUserByVerifyCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SCancelUserByVerifyCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SCancelUserByVerifyCode& from);
  void MergeFrom(const SCancelUserByVerifyCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SCancelUserByVerifyCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phoneMsg.SCancelUserByVerifyCode";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phoneMsg_2eproto);
    return ::descriptor_table_phoneMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string msg = 2;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // int32 status = 1;
  void clear_status();
  ::PROTOBUF_NAMESPACE_ID::int32 status() const;
  void set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_status() const;
  void _internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:phoneMsg.SCancelUserByVerifyCode)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::PROTOBUF_NAMESPACE_ID::int32 status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phoneMsg_2eproto;
};
// -------------------------------------------------------------------

class CRemoveWechatByVerifyCode :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phoneMsg.CRemoveWechatByVerifyCode) */ {
 public:
  CRemoveWechatByVerifyCode();
  virtual ~CRemoveWechatByVerifyCode();

  CRemoveWechatByVerifyCode(const CRemoveWechatByVerifyCode& from);
  CRemoveWechatByVerifyCode(CRemoveWechatByVerifyCode&& from) noexcept
    : CRemoveWechatByVerifyCode() {
    *this = ::std::move(from);
  }

  inline CRemoveWechatByVerifyCode& operator=(const CRemoveWechatByVerifyCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline CRemoveWechatByVerifyCode& operator=(CRemoveWechatByVerifyCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CRemoveWechatByVerifyCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CRemoveWechatByVerifyCode* internal_default_instance() {
    return reinterpret_cast<const CRemoveWechatByVerifyCode*>(
               &_CRemoveWechatByVerifyCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CRemoveWechatByVerifyCode& a, CRemoveWechatByVerifyCode& b) {
    a.Swap(&b);
  }
  inline void Swap(CRemoveWechatByVerifyCode* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CRemoveWechatByVerifyCode* New() const final {
    return CreateMaybeMessage<CRemoveWechatByVerifyCode>(nullptr);
  }

  CRemoveWechatByVerifyCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CRemoveWechatByVerifyCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CRemoveWechatByVerifyCode& from);
  void MergeFrom(const CRemoveWechatByVerifyCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CRemoveWechatByVerifyCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phoneMsg.CRemoveWechatByVerifyCode";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phoneMsg_2eproto);
    return ::descriptor_table_phoneMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhoneFieldNumber = 1,
    kVerifyCodeFieldNumber = 2,
  };
  // string phone = 1;
  void clear_phone();
  const std::string& phone() const;
  void set_phone(const std::string& value);
  void set_phone(std::string&& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  std::string* mutable_phone();
  std::string* release_phone();
  void set_allocated_phone(std::string* phone);
  private:
  const std::string& _internal_phone() const;
  void _internal_set_phone(const std::string& value);
  std::string* _internal_mutable_phone();
  public:

  // string verifyCode = 2;
  void clear_verifycode();
  const std::string& verifycode() const;
  void set_verifycode(const std::string& value);
  void set_verifycode(std::string&& value);
  void set_verifycode(const char* value);
  void set_verifycode(const char* value, size_t size);
  std::string* mutable_verifycode();
  std::string* release_verifycode();
  void set_allocated_verifycode(std::string* verifycode);
  private:
  const std::string& _internal_verifycode() const;
  void _internal_set_verifycode(const std::string& value);
  std::string* _internal_mutable_verifycode();
  public:

  // @@protoc_insertion_point(class_scope:phoneMsg.CRemoveWechatByVerifyCode)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr verifycode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phoneMsg_2eproto;
};
// -------------------------------------------------------------------

class SRemoveWechatByVerifyCode :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phoneMsg.SRemoveWechatByVerifyCode) */ {
 public:
  SRemoveWechatByVerifyCode();
  virtual ~SRemoveWechatByVerifyCode();

  SRemoveWechatByVerifyCode(const SRemoveWechatByVerifyCode& from);
  SRemoveWechatByVerifyCode(SRemoveWechatByVerifyCode&& from) noexcept
    : SRemoveWechatByVerifyCode() {
    *this = ::std::move(from);
  }

  inline SRemoveWechatByVerifyCode& operator=(const SRemoveWechatByVerifyCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline SRemoveWechatByVerifyCode& operator=(SRemoveWechatByVerifyCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SRemoveWechatByVerifyCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SRemoveWechatByVerifyCode* internal_default_instance() {
    return reinterpret_cast<const SRemoveWechatByVerifyCode*>(
               &_SRemoveWechatByVerifyCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SRemoveWechatByVerifyCode& a, SRemoveWechatByVerifyCode& b) {
    a.Swap(&b);
  }
  inline void Swap(SRemoveWechatByVerifyCode* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SRemoveWechatByVerifyCode* New() const final {
    return CreateMaybeMessage<SRemoveWechatByVerifyCode>(nullptr);
  }

  SRemoveWechatByVerifyCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SRemoveWechatByVerifyCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SRemoveWechatByVerifyCode& from);
  void MergeFrom(const SRemoveWechatByVerifyCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SRemoveWechatByVerifyCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phoneMsg.SRemoveWechatByVerifyCode";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phoneMsg_2eproto);
    return ::descriptor_table_phoneMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string msg = 2;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // int32 status = 1;
  void clear_status();
  ::PROTOBUF_NAMESPACE_ID::int32 status() const;
  void set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_status() const;
  void _internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:phoneMsg.SRemoveWechatByVerifyCode)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::PROTOBUF_NAMESPACE_ID::int32 status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phoneMsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CSaveUserInfoGetVerifyCode

// string phone = 1;
inline void CSaveUserInfoGetVerifyCode::clear_phone() {
  phone_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CSaveUserInfoGetVerifyCode::phone() const {
  // @@protoc_insertion_point(field_get:phoneMsg.CSaveUserInfoGetVerifyCode.phone)
  return _internal_phone();
}
inline void CSaveUserInfoGetVerifyCode::set_phone(const std::string& value) {
  _internal_set_phone(value);
  // @@protoc_insertion_point(field_set:phoneMsg.CSaveUserInfoGetVerifyCode.phone)
}
inline std::string* CSaveUserInfoGetVerifyCode::mutable_phone() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.CSaveUserInfoGetVerifyCode.phone)
  return _internal_mutable_phone();
}
inline const std::string& CSaveUserInfoGetVerifyCode::_internal_phone() const {
  return phone_.GetNoArena();
}
inline void CSaveUserInfoGetVerifyCode::_internal_set_phone(const std::string& value) {
  
  phone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CSaveUserInfoGetVerifyCode::set_phone(std::string&& value) {
  
  phone_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.CSaveUserInfoGetVerifyCode.phone)
}
inline void CSaveUserInfoGetVerifyCode::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.CSaveUserInfoGetVerifyCode.phone)
}
inline void CSaveUserInfoGetVerifyCode::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.CSaveUserInfoGetVerifyCode.phone)
}
inline std::string* CSaveUserInfoGetVerifyCode::_internal_mutable_phone() {
  
  return phone_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CSaveUserInfoGetVerifyCode::release_phone() {
  // @@protoc_insertion_point(field_release:phoneMsg.CSaveUserInfoGetVerifyCode.phone)
  
  return phone_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CSaveUserInfoGetVerifyCode::set_allocated_phone(std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.CSaveUserInfoGetVerifyCode.phone)
}

// -------------------------------------------------------------------

// SSaveUserInfoGetVerifyCode

// int32 status = 1;
inline void SSaveUserInfoGetVerifyCode::clear_status() {
  status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SSaveUserInfoGetVerifyCode::_internal_status() const {
  return status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SSaveUserInfoGetVerifyCode::status() const {
  // @@protoc_insertion_point(field_get:phoneMsg.SSaveUserInfoGetVerifyCode.status)
  return _internal_status();
}
inline void SSaveUserInfoGetVerifyCode::_internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  status_ = value;
}
inline void SSaveUserInfoGetVerifyCode::set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:phoneMsg.SSaveUserInfoGetVerifyCode.status)
}

// -------------------------------------------------------------------

// CVerifySaveUserInfoVerifyCode

// string phone = 1;
inline void CVerifySaveUserInfoVerifyCode::clear_phone() {
  phone_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CVerifySaveUserInfoVerifyCode::phone() const {
  // @@protoc_insertion_point(field_get:phoneMsg.CVerifySaveUserInfoVerifyCode.phone)
  return _internal_phone();
}
inline void CVerifySaveUserInfoVerifyCode::set_phone(const std::string& value) {
  _internal_set_phone(value);
  // @@protoc_insertion_point(field_set:phoneMsg.CVerifySaveUserInfoVerifyCode.phone)
}
inline std::string* CVerifySaveUserInfoVerifyCode::mutable_phone() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.CVerifySaveUserInfoVerifyCode.phone)
  return _internal_mutable_phone();
}
inline const std::string& CVerifySaveUserInfoVerifyCode::_internal_phone() const {
  return phone_.GetNoArena();
}
inline void CVerifySaveUserInfoVerifyCode::_internal_set_phone(const std::string& value) {
  
  phone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CVerifySaveUserInfoVerifyCode::set_phone(std::string&& value) {
  
  phone_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.CVerifySaveUserInfoVerifyCode.phone)
}
inline void CVerifySaveUserInfoVerifyCode::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.CVerifySaveUserInfoVerifyCode.phone)
}
inline void CVerifySaveUserInfoVerifyCode::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.CVerifySaveUserInfoVerifyCode.phone)
}
inline std::string* CVerifySaveUserInfoVerifyCode::_internal_mutable_phone() {
  
  return phone_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CVerifySaveUserInfoVerifyCode::release_phone() {
  // @@protoc_insertion_point(field_release:phoneMsg.CVerifySaveUserInfoVerifyCode.phone)
  
  return phone_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CVerifySaveUserInfoVerifyCode::set_allocated_phone(std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.CVerifySaveUserInfoVerifyCode.phone)
}

// string verifyCode = 2;
inline void CVerifySaveUserInfoVerifyCode::clear_verifycode() {
  verifycode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CVerifySaveUserInfoVerifyCode::verifycode() const {
  // @@protoc_insertion_point(field_get:phoneMsg.CVerifySaveUserInfoVerifyCode.verifyCode)
  return _internal_verifycode();
}
inline void CVerifySaveUserInfoVerifyCode::set_verifycode(const std::string& value) {
  _internal_set_verifycode(value);
  // @@protoc_insertion_point(field_set:phoneMsg.CVerifySaveUserInfoVerifyCode.verifyCode)
}
inline std::string* CVerifySaveUserInfoVerifyCode::mutable_verifycode() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.CVerifySaveUserInfoVerifyCode.verifyCode)
  return _internal_mutable_verifycode();
}
inline const std::string& CVerifySaveUserInfoVerifyCode::_internal_verifycode() const {
  return verifycode_.GetNoArena();
}
inline void CVerifySaveUserInfoVerifyCode::_internal_set_verifycode(const std::string& value) {
  
  verifycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CVerifySaveUserInfoVerifyCode::set_verifycode(std::string&& value) {
  
  verifycode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.CVerifySaveUserInfoVerifyCode.verifyCode)
}
inline void CVerifySaveUserInfoVerifyCode::set_verifycode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  verifycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.CVerifySaveUserInfoVerifyCode.verifyCode)
}
inline void CVerifySaveUserInfoVerifyCode::set_verifycode(const char* value, size_t size) {
  
  verifycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.CVerifySaveUserInfoVerifyCode.verifyCode)
}
inline std::string* CVerifySaveUserInfoVerifyCode::_internal_mutable_verifycode() {
  
  return verifycode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CVerifySaveUserInfoVerifyCode::release_verifycode() {
  // @@protoc_insertion_point(field_release:phoneMsg.CVerifySaveUserInfoVerifyCode.verifyCode)
  
  return verifycode_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CVerifySaveUserInfoVerifyCode::set_allocated_verifycode(std::string* verifycode) {
  if (verifycode != nullptr) {
    
  } else {
    
  }
  verifycode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), verifycode);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.CVerifySaveUserInfoVerifyCode.verifyCode)
}

// -------------------------------------------------------------------

// SVerifySaveUserInfoVerifyCode

// int32 status = 1;
inline void SVerifySaveUserInfoVerifyCode::clear_status() {
  status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SVerifySaveUserInfoVerifyCode::_internal_status() const {
  return status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SVerifySaveUserInfoVerifyCode::status() const {
  // @@protoc_insertion_point(field_get:phoneMsg.SVerifySaveUserInfoVerifyCode.status)
  return _internal_status();
}
inline void SVerifySaveUserInfoVerifyCode::_internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  status_ = value;
}
inline void SVerifySaveUserInfoVerifyCode::set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:phoneMsg.SVerifySaveUserInfoVerifyCode.status)
}

// string msg = 2;
inline void SVerifySaveUserInfoVerifyCode::clear_msg() {
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SVerifySaveUserInfoVerifyCode::msg() const {
  // @@protoc_insertion_point(field_get:phoneMsg.SVerifySaveUserInfoVerifyCode.msg)
  return _internal_msg();
}
inline void SVerifySaveUserInfoVerifyCode::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:phoneMsg.SVerifySaveUserInfoVerifyCode.msg)
}
inline std::string* SVerifySaveUserInfoVerifyCode::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.SVerifySaveUserInfoVerifyCode.msg)
  return _internal_mutable_msg();
}
inline const std::string& SVerifySaveUserInfoVerifyCode::_internal_msg() const {
  return msg_.GetNoArena();
}
inline void SVerifySaveUserInfoVerifyCode::_internal_set_msg(const std::string& value) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SVerifySaveUserInfoVerifyCode::set_msg(std::string&& value) {
  
  msg_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.SVerifySaveUserInfoVerifyCode.msg)
}
inline void SVerifySaveUserInfoVerifyCode::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.SVerifySaveUserInfoVerifyCode.msg)
}
inline void SVerifySaveUserInfoVerifyCode::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.SVerifySaveUserInfoVerifyCode.msg)
}
inline std::string* SVerifySaveUserInfoVerifyCode::_internal_mutable_msg() {
  
  return msg_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SVerifySaveUserInfoVerifyCode::release_msg() {
  // @@protoc_insertion_point(field_release:phoneMsg.SVerifySaveUserInfoVerifyCode.msg)
  
  return msg_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SVerifySaveUserInfoVerifyCode::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.SVerifySaveUserInfoVerifyCode.msg)
}

// string statusCode = 3;
inline void SVerifySaveUserInfoVerifyCode::clear_statuscode() {
  statuscode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SVerifySaveUserInfoVerifyCode::statuscode() const {
  // @@protoc_insertion_point(field_get:phoneMsg.SVerifySaveUserInfoVerifyCode.statusCode)
  return _internal_statuscode();
}
inline void SVerifySaveUserInfoVerifyCode::set_statuscode(const std::string& value) {
  _internal_set_statuscode(value);
  // @@protoc_insertion_point(field_set:phoneMsg.SVerifySaveUserInfoVerifyCode.statusCode)
}
inline std::string* SVerifySaveUserInfoVerifyCode::mutable_statuscode() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.SVerifySaveUserInfoVerifyCode.statusCode)
  return _internal_mutable_statuscode();
}
inline const std::string& SVerifySaveUserInfoVerifyCode::_internal_statuscode() const {
  return statuscode_.GetNoArena();
}
inline void SVerifySaveUserInfoVerifyCode::_internal_set_statuscode(const std::string& value) {
  
  statuscode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SVerifySaveUserInfoVerifyCode::set_statuscode(std::string&& value) {
  
  statuscode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.SVerifySaveUserInfoVerifyCode.statusCode)
}
inline void SVerifySaveUserInfoVerifyCode::set_statuscode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  statuscode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.SVerifySaveUserInfoVerifyCode.statusCode)
}
inline void SVerifySaveUserInfoVerifyCode::set_statuscode(const char* value, size_t size) {
  
  statuscode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.SVerifySaveUserInfoVerifyCode.statusCode)
}
inline std::string* SVerifySaveUserInfoVerifyCode::_internal_mutable_statuscode() {
  
  return statuscode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SVerifySaveUserInfoVerifyCode::release_statuscode() {
  // @@protoc_insertion_point(field_release:phoneMsg.SVerifySaveUserInfoVerifyCode.statusCode)
  
  return statuscode_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SVerifySaveUserInfoVerifyCode::set_allocated_statuscode(std::string* statuscode) {
  if (statuscode != nullptr) {
    
  } else {
    
  }
  statuscode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), statuscode);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.SVerifySaveUserInfoVerifyCode.statusCode)
}

// -------------------------------------------------------------------

// CSavePhoneByVerifyCode

// string phone = 1;
inline void CSavePhoneByVerifyCode::clear_phone() {
  phone_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CSavePhoneByVerifyCode::phone() const {
  // @@protoc_insertion_point(field_get:phoneMsg.CSavePhoneByVerifyCode.phone)
  return _internal_phone();
}
inline void CSavePhoneByVerifyCode::set_phone(const std::string& value) {
  _internal_set_phone(value);
  // @@protoc_insertion_point(field_set:phoneMsg.CSavePhoneByVerifyCode.phone)
}
inline std::string* CSavePhoneByVerifyCode::mutable_phone() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.CSavePhoneByVerifyCode.phone)
  return _internal_mutable_phone();
}
inline const std::string& CSavePhoneByVerifyCode::_internal_phone() const {
  return phone_.GetNoArena();
}
inline void CSavePhoneByVerifyCode::_internal_set_phone(const std::string& value) {
  
  phone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CSavePhoneByVerifyCode::set_phone(std::string&& value) {
  
  phone_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.CSavePhoneByVerifyCode.phone)
}
inline void CSavePhoneByVerifyCode::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.CSavePhoneByVerifyCode.phone)
}
inline void CSavePhoneByVerifyCode::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.CSavePhoneByVerifyCode.phone)
}
inline std::string* CSavePhoneByVerifyCode::_internal_mutable_phone() {
  
  return phone_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CSavePhoneByVerifyCode::release_phone() {
  // @@protoc_insertion_point(field_release:phoneMsg.CSavePhoneByVerifyCode.phone)
  
  return phone_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CSavePhoneByVerifyCode::set_allocated_phone(std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.CSavePhoneByVerifyCode.phone)
}

// string verifyCode = 2;
inline void CSavePhoneByVerifyCode::clear_verifycode() {
  verifycode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CSavePhoneByVerifyCode::verifycode() const {
  // @@protoc_insertion_point(field_get:phoneMsg.CSavePhoneByVerifyCode.verifyCode)
  return _internal_verifycode();
}
inline void CSavePhoneByVerifyCode::set_verifycode(const std::string& value) {
  _internal_set_verifycode(value);
  // @@protoc_insertion_point(field_set:phoneMsg.CSavePhoneByVerifyCode.verifyCode)
}
inline std::string* CSavePhoneByVerifyCode::mutable_verifycode() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.CSavePhoneByVerifyCode.verifyCode)
  return _internal_mutable_verifycode();
}
inline const std::string& CSavePhoneByVerifyCode::_internal_verifycode() const {
  return verifycode_.GetNoArena();
}
inline void CSavePhoneByVerifyCode::_internal_set_verifycode(const std::string& value) {
  
  verifycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CSavePhoneByVerifyCode::set_verifycode(std::string&& value) {
  
  verifycode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.CSavePhoneByVerifyCode.verifyCode)
}
inline void CSavePhoneByVerifyCode::set_verifycode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  verifycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.CSavePhoneByVerifyCode.verifyCode)
}
inline void CSavePhoneByVerifyCode::set_verifycode(const char* value, size_t size) {
  
  verifycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.CSavePhoneByVerifyCode.verifyCode)
}
inline std::string* CSavePhoneByVerifyCode::_internal_mutable_verifycode() {
  
  return verifycode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CSavePhoneByVerifyCode::release_verifycode() {
  // @@protoc_insertion_point(field_release:phoneMsg.CSavePhoneByVerifyCode.verifyCode)
  
  return verifycode_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CSavePhoneByVerifyCode::set_allocated_verifycode(std::string* verifycode) {
  if (verifycode != nullptr) {
    
  } else {
    
  }
  verifycode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), verifycode);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.CSavePhoneByVerifyCode.verifyCode)
}

// string statusCode = 3;
inline void CSavePhoneByVerifyCode::clear_statuscode() {
  statuscode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CSavePhoneByVerifyCode::statuscode() const {
  // @@protoc_insertion_point(field_get:phoneMsg.CSavePhoneByVerifyCode.statusCode)
  return _internal_statuscode();
}
inline void CSavePhoneByVerifyCode::set_statuscode(const std::string& value) {
  _internal_set_statuscode(value);
  // @@protoc_insertion_point(field_set:phoneMsg.CSavePhoneByVerifyCode.statusCode)
}
inline std::string* CSavePhoneByVerifyCode::mutable_statuscode() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.CSavePhoneByVerifyCode.statusCode)
  return _internal_mutable_statuscode();
}
inline const std::string& CSavePhoneByVerifyCode::_internal_statuscode() const {
  return statuscode_.GetNoArena();
}
inline void CSavePhoneByVerifyCode::_internal_set_statuscode(const std::string& value) {
  
  statuscode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CSavePhoneByVerifyCode::set_statuscode(std::string&& value) {
  
  statuscode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.CSavePhoneByVerifyCode.statusCode)
}
inline void CSavePhoneByVerifyCode::set_statuscode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  statuscode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.CSavePhoneByVerifyCode.statusCode)
}
inline void CSavePhoneByVerifyCode::set_statuscode(const char* value, size_t size) {
  
  statuscode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.CSavePhoneByVerifyCode.statusCode)
}
inline std::string* CSavePhoneByVerifyCode::_internal_mutable_statuscode() {
  
  return statuscode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CSavePhoneByVerifyCode::release_statuscode() {
  // @@protoc_insertion_point(field_release:phoneMsg.CSavePhoneByVerifyCode.statusCode)
  
  return statuscode_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CSavePhoneByVerifyCode::set_allocated_statuscode(std::string* statuscode) {
  if (statuscode != nullptr) {
    
  } else {
    
  }
  statuscode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), statuscode);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.CSavePhoneByVerifyCode.statusCode)
}

// string areaCode = 4;
inline void CSavePhoneByVerifyCode::clear_areacode() {
  areacode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CSavePhoneByVerifyCode::areacode() const {
  // @@protoc_insertion_point(field_get:phoneMsg.CSavePhoneByVerifyCode.areaCode)
  return _internal_areacode();
}
inline void CSavePhoneByVerifyCode::set_areacode(const std::string& value) {
  _internal_set_areacode(value);
  // @@protoc_insertion_point(field_set:phoneMsg.CSavePhoneByVerifyCode.areaCode)
}
inline std::string* CSavePhoneByVerifyCode::mutable_areacode() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.CSavePhoneByVerifyCode.areaCode)
  return _internal_mutable_areacode();
}
inline const std::string& CSavePhoneByVerifyCode::_internal_areacode() const {
  return areacode_.GetNoArena();
}
inline void CSavePhoneByVerifyCode::_internal_set_areacode(const std::string& value) {
  
  areacode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CSavePhoneByVerifyCode::set_areacode(std::string&& value) {
  
  areacode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.CSavePhoneByVerifyCode.areaCode)
}
inline void CSavePhoneByVerifyCode::set_areacode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  areacode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.CSavePhoneByVerifyCode.areaCode)
}
inline void CSavePhoneByVerifyCode::set_areacode(const char* value, size_t size) {
  
  areacode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.CSavePhoneByVerifyCode.areaCode)
}
inline std::string* CSavePhoneByVerifyCode::_internal_mutable_areacode() {
  
  return areacode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CSavePhoneByVerifyCode::release_areacode() {
  // @@protoc_insertion_point(field_release:phoneMsg.CSavePhoneByVerifyCode.areaCode)
  
  return areacode_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CSavePhoneByVerifyCode::set_allocated_areacode(std::string* areacode) {
  if (areacode != nullptr) {
    
  } else {
    
  }
  areacode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), areacode);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.CSavePhoneByVerifyCode.areaCode)
}

// -------------------------------------------------------------------

// SSavePhoneByVerifyCode

// int32 status = 1;
inline void SSavePhoneByVerifyCode::clear_status() {
  status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SSavePhoneByVerifyCode::_internal_status() const {
  return status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SSavePhoneByVerifyCode::status() const {
  // @@protoc_insertion_point(field_get:phoneMsg.SSavePhoneByVerifyCode.status)
  return _internal_status();
}
inline void SSavePhoneByVerifyCode::_internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  status_ = value;
}
inline void SSavePhoneByVerifyCode::set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:phoneMsg.SSavePhoneByVerifyCode.status)
}

// string msg = 2;
inline void SSavePhoneByVerifyCode::clear_msg() {
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SSavePhoneByVerifyCode::msg() const {
  // @@protoc_insertion_point(field_get:phoneMsg.SSavePhoneByVerifyCode.msg)
  return _internal_msg();
}
inline void SSavePhoneByVerifyCode::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:phoneMsg.SSavePhoneByVerifyCode.msg)
}
inline std::string* SSavePhoneByVerifyCode::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.SSavePhoneByVerifyCode.msg)
  return _internal_mutable_msg();
}
inline const std::string& SSavePhoneByVerifyCode::_internal_msg() const {
  return msg_.GetNoArena();
}
inline void SSavePhoneByVerifyCode::_internal_set_msg(const std::string& value) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SSavePhoneByVerifyCode::set_msg(std::string&& value) {
  
  msg_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.SSavePhoneByVerifyCode.msg)
}
inline void SSavePhoneByVerifyCode::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.SSavePhoneByVerifyCode.msg)
}
inline void SSavePhoneByVerifyCode::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.SSavePhoneByVerifyCode.msg)
}
inline std::string* SSavePhoneByVerifyCode::_internal_mutable_msg() {
  
  return msg_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SSavePhoneByVerifyCode::release_msg() {
  // @@protoc_insertion_point(field_release:phoneMsg.SSavePhoneByVerifyCode.msg)
  
  return msg_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SSavePhoneByVerifyCode::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.SSavePhoneByVerifyCode.msg)
}

// -------------------------------------------------------------------

// CCancelUserByVerifyCode

// string phone = 1;
inline void CCancelUserByVerifyCode::clear_phone() {
  phone_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CCancelUserByVerifyCode::phone() const {
  // @@protoc_insertion_point(field_get:phoneMsg.CCancelUserByVerifyCode.phone)
  return _internal_phone();
}
inline void CCancelUserByVerifyCode::set_phone(const std::string& value) {
  _internal_set_phone(value);
  // @@protoc_insertion_point(field_set:phoneMsg.CCancelUserByVerifyCode.phone)
}
inline std::string* CCancelUserByVerifyCode::mutable_phone() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.CCancelUserByVerifyCode.phone)
  return _internal_mutable_phone();
}
inline const std::string& CCancelUserByVerifyCode::_internal_phone() const {
  return phone_.GetNoArena();
}
inline void CCancelUserByVerifyCode::_internal_set_phone(const std::string& value) {
  
  phone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CCancelUserByVerifyCode::set_phone(std::string&& value) {
  
  phone_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.CCancelUserByVerifyCode.phone)
}
inline void CCancelUserByVerifyCode::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.CCancelUserByVerifyCode.phone)
}
inline void CCancelUserByVerifyCode::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.CCancelUserByVerifyCode.phone)
}
inline std::string* CCancelUserByVerifyCode::_internal_mutable_phone() {
  
  return phone_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CCancelUserByVerifyCode::release_phone() {
  // @@protoc_insertion_point(field_release:phoneMsg.CCancelUserByVerifyCode.phone)
  
  return phone_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CCancelUserByVerifyCode::set_allocated_phone(std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.CCancelUserByVerifyCode.phone)
}

// string verifyCode = 2;
inline void CCancelUserByVerifyCode::clear_verifycode() {
  verifycode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CCancelUserByVerifyCode::verifycode() const {
  // @@protoc_insertion_point(field_get:phoneMsg.CCancelUserByVerifyCode.verifyCode)
  return _internal_verifycode();
}
inline void CCancelUserByVerifyCode::set_verifycode(const std::string& value) {
  _internal_set_verifycode(value);
  // @@protoc_insertion_point(field_set:phoneMsg.CCancelUserByVerifyCode.verifyCode)
}
inline std::string* CCancelUserByVerifyCode::mutable_verifycode() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.CCancelUserByVerifyCode.verifyCode)
  return _internal_mutable_verifycode();
}
inline const std::string& CCancelUserByVerifyCode::_internal_verifycode() const {
  return verifycode_.GetNoArena();
}
inline void CCancelUserByVerifyCode::_internal_set_verifycode(const std::string& value) {
  
  verifycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CCancelUserByVerifyCode::set_verifycode(std::string&& value) {
  
  verifycode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.CCancelUserByVerifyCode.verifyCode)
}
inline void CCancelUserByVerifyCode::set_verifycode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  verifycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.CCancelUserByVerifyCode.verifyCode)
}
inline void CCancelUserByVerifyCode::set_verifycode(const char* value, size_t size) {
  
  verifycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.CCancelUserByVerifyCode.verifyCode)
}
inline std::string* CCancelUserByVerifyCode::_internal_mutable_verifycode() {
  
  return verifycode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CCancelUserByVerifyCode::release_verifycode() {
  // @@protoc_insertion_point(field_release:phoneMsg.CCancelUserByVerifyCode.verifyCode)
  
  return verifycode_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CCancelUserByVerifyCode::set_allocated_verifycode(std::string* verifycode) {
  if (verifycode != nullptr) {
    
  } else {
    
  }
  verifycode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), verifycode);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.CCancelUserByVerifyCode.verifyCode)
}

// -------------------------------------------------------------------

// SCancelUserByVerifyCode

// int32 status = 1;
inline void SCancelUserByVerifyCode::clear_status() {
  status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SCancelUserByVerifyCode::_internal_status() const {
  return status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SCancelUserByVerifyCode::status() const {
  // @@protoc_insertion_point(field_get:phoneMsg.SCancelUserByVerifyCode.status)
  return _internal_status();
}
inline void SCancelUserByVerifyCode::_internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  status_ = value;
}
inline void SCancelUserByVerifyCode::set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:phoneMsg.SCancelUserByVerifyCode.status)
}

// string msg = 2;
inline void SCancelUserByVerifyCode::clear_msg() {
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SCancelUserByVerifyCode::msg() const {
  // @@protoc_insertion_point(field_get:phoneMsg.SCancelUserByVerifyCode.msg)
  return _internal_msg();
}
inline void SCancelUserByVerifyCode::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:phoneMsg.SCancelUserByVerifyCode.msg)
}
inline std::string* SCancelUserByVerifyCode::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.SCancelUserByVerifyCode.msg)
  return _internal_mutable_msg();
}
inline const std::string& SCancelUserByVerifyCode::_internal_msg() const {
  return msg_.GetNoArena();
}
inline void SCancelUserByVerifyCode::_internal_set_msg(const std::string& value) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SCancelUserByVerifyCode::set_msg(std::string&& value) {
  
  msg_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.SCancelUserByVerifyCode.msg)
}
inline void SCancelUserByVerifyCode::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.SCancelUserByVerifyCode.msg)
}
inline void SCancelUserByVerifyCode::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.SCancelUserByVerifyCode.msg)
}
inline std::string* SCancelUserByVerifyCode::_internal_mutable_msg() {
  
  return msg_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SCancelUserByVerifyCode::release_msg() {
  // @@protoc_insertion_point(field_release:phoneMsg.SCancelUserByVerifyCode.msg)
  
  return msg_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SCancelUserByVerifyCode::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.SCancelUserByVerifyCode.msg)
}

// -------------------------------------------------------------------

// CRemoveWechatByVerifyCode

// string phone = 1;
inline void CRemoveWechatByVerifyCode::clear_phone() {
  phone_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CRemoveWechatByVerifyCode::phone() const {
  // @@protoc_insertion_point(field_get:phoneMsg.CRemoveWechatByVerifyCode.phone)
  return _internal_phone();
}
inline void CRemoveWechatByVerifyCode::set_phone(const std::string& value) {
  _internal_set_phone(value);
  // @@protoc_insertion_point(field_set:phoneMsg.CRemoveWechatByVerifyCode.phone)
}
inline std::string* CRemoveWechatByVerifyCode::mutable_phone() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.CRemoveWechatByVerifyCode.phone)
  return _internal_mutable_phone();
}
inline const std::string& CRemoveWechatByVerifyCode::_internal_phone() const {
  return phone_.GetNoArena();
}
inline void CRemoveWechatByVerifyCode::_internal_set_phone(const std::string& value) {
  
  phone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CRemoveWechatByVerifyCode::set_phone(std::string&& value) {
  
  phone_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.CRemoveWechatByVerifyCode.phone)
}
inline void CRemoveWechatByVerifyCode::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.CRemoveWechatByVerifyCode.phone)
}
inline void CRemoveWechatByVerifyCode::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.CRemoveWechatByVerifyCode.phone)
}
inline std::string* CRemoveWechatByVerifyCode::_internal_mutable_phone() {
  
  return phone_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CRemoveWechatByVerifyCode::release_phone() {
  // @@protoc_insertion_point(field_release:phoneMsg.CRemoveWechatByVerifyCode.phone)
  
  return phone_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CRemoveWechatByVerifyCode::set_allocated_phone(std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.CRemoveWechatByVerifyCode.phone)
}

// string verifyCode = 2;
inline void CRemoveWechatByVerifyCode::clear_verifycode() {
  verifycode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CRemoveWechatByVerifyCode::verifycode() const {
  // @@protoc_insertion_point(field_get:phoneMsg.CRemoveWechatByVerifyCode.verifyCode)
  return _internal_verifycode();
}
inline void CRemoveWechatByVerifyCode::set_verifycode(const std::string& value) {
  _internal_set_verifycode(value);
  // @@protoc_insertion_point(field_set:phoneMsg.CRemoveWechatByVerifyCode.verifyCode)
}
inline std::string* CRemoveWechatByVerifyCode::mutable_verifycode() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.CRemoveWechatByVerifyCode.verifyCode)
  return _internal_mutable_verifycode();
}
inline const std::string& CRemoveWechatByVerifyCode::_internal_verifycode() const {
  return verifycode_.GetNoArena();
}
inline void CRemoveWechatByVerifyCode::_internal_set_verifycode(const std::string& value) {
  
  verifycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CRemoveWechatByVerifyCode::set_verifycode(std::string&& value) {
  
  verifycode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.CRemoveWechatByVerifyCode.verifyCode)
}
inline void CRemoveWechatByVerifyCode::set_verifycode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  verifycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.CRemoveWechatByVerifyCode.verifyCode)
}
inline void CRemoveWechatByVerifyCode::set_verifycode(const char* value, size_t size) {
  
  verifycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.CRemoveWechatByVerifyCode.verifyCode)
}
inline std::string* CRemoveWechatByVerifyCode::_internal_mutable_verifycode() {
  
  return verifycode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CRemoveWechatByVerifyCode::release_verifycode() {
  // @@protoc_insertion_point(field_release:phoneMsg.CRemoveWechatByVerifyCode.verifyCode)
  
  return verifycode_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CRemoveWechatByVerifyCode::set_allocated_verifycode(std::string* verifycode) {
  if (verifycode != nullptr) {
    
  } else {
    
  }
  verifycode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), verifycode);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.CRemoveWechatByVerifyCode.verifyCode)
}

// -------------------------------------------------------------------

// SRemoveWechatByVerifyCode

// int32 status = 1;
inline void SRemoveWechatByVerifyCode::clear_status() {
  status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SRemoveWechatByVerifyCode::_internal_status() const {
  return status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SRemoveWechatByVerifyCode::status() const {
  // @@protoc_insertion_point(field_get:phoneMsg.SRemoveWechatByVerifyCode.status)
  return _internal_status();
}
inline void SRemoveWechatByVerifyCode::_internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  status_ = value;
}
inline void SRemoveWechatByVerifyCode::set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:phoneMsg.SRemoveWechatByVerifyCode.status)
}

// string msg = 2;
inline void SRemoveWechatByVerifyCode::clear_msg() {
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SRemoveWechatByVerifyCode::msg() const {
  // @@protoc_insertion_point(field_get:phoneMsg.SRemoveWechatByVerifyCode.msg)
  return _internal_msg();
}
inline void SRemoveWechatByVerifyCode::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:phoneMsg.SRemoveWechatByVerifyCode.msg)
}
inline std::string* SRemoveWechatByVerifyCode::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:phoneMsg.SRemoveWechatByVerifyCode.msg)
  return _internal_mutable_msg();
}
inline const std::string& SRemoveWechatByVerifyCode::_internal_msg() const {
  return msg_.GetNoArena();
}
inline void SRemoveWechatByVerifyCode::_internal_set_msg(const std::string& value) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SRemoveWechatByVerifyCode::set_msg(std::string&& value) {
  
  msg_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoneMsg.SRemoveWechatByVerifyCode.msg)
}
inline void SRemoveWechatByVerifyCode::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoneMsg.SRemoveWechatByVerifyCode.msg)
}
inline void SRemoveWechatByVerifyCode::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoneMsg.SRemoveWechatByVerifyCode.msg)
}
inline std::string* SRemoveWechatByVerifyCode::_internal_mutable_msg() {
  
  return msg_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SRemoveWechatByVerifyCode::release_msg() {
  // @@protoc_insertion_point(field_release:phoneMsg.SRemoveWechatByVerifyCode.msg)
  
  return msg_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SRemoveWechatByVerifyCode::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:phoneMsg.SRemoveWechatByVerifyCode.msg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace phoneMsg

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_phoneMsg_2eproto
